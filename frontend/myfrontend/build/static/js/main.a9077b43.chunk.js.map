{"version":3,"sources":["components/FrontendComponents/clientStorages/localStorage.js","components/FrontendComponents/clientStorages/auth.js","components/FrontendComponents/clientStorages/cookies.js","services/GenericService.js","services/friendService.js","services/ChatService.js","context/SocketContext.js","components/FrontendComponents/components/Header.js","context/ChatContext.js","services/accountService.js","components/FrontendComponents/components/pageTitle.js","components/FrontendComponents/components/userDashboard.js","components/FrontendComponents/components/LogoPage.js","components/FrontendComponents/Alerts/ProgressBar.js","components/FrontendComponents/Alerts/AlertBar.js","components/FrontendComponents/api/auth.js","components/FrontendComponents/components/SignUp.js","reducers/DeletePermissionReducer.js","context/DeletePermissionContext.js","components/FrontendComponents/components/LogIn.js","components/FrontendComponents/components/Activate.js","components/FrontendComponents/components/notFound.js","components/FrontendComponents/components/forgotPassword.js","components/FrontendComponents/components/resetPassword.js","components/FrontendComponents/components/profileSetup.js","components/FrontendComponents/components/SingleContact.js","services/contactService.js","components/FrontendComponents/components/SideBar.js","components/FrontendComponents/components/AllContacts.js","components/FrontendComponents/components/SingleFriendRequest.js","components/FrontendComponents/components/AllFriendRequest.js","components/FrontendComponents/components/SingleFriend.js","services/UserService.js","context/MyChatsContext.js","components/FrontendComponents/components/AllFriends.js","components/FrontendComponents/components/updateProfileSetup.js","components/ChatComponents/DeleteMsg.js","components/ChatComponents/SettingMessage.js","components/ChatComponents/TypeMessage.js","components/ChatComponents/RenderChat.js","components/ChatComponents/Chat.js","components/ChatComponents/SingleChat.js","components/ChatComponents/AllChats.js","components/FrontendComponents/components/Profile.js","components/FrontendComponents/components/userRoutes.js","components/FrontendComponents/components/ContactManagement.js","App.js","reportWebVitals.js","index.js"],"names":["getLocalStorage","key","JSON","parse","localStorage","getItem","removeLocalStorage","removeItem","authentication","token","user","value","Cookies","set","expires","setItem","stringify","setLocalStorage","isAuthenticated","get","logout","next","remove","axios","defaults","baseURL","process","headers","common","GenericService","url","Promise","resolve","reject","then","res","data","catch","err","getMessage","email","params","post","console","log","put","delete","friendService","sendRequest","cancelRequest","acceptRequest","rejectRequest","deleteFriend","getFriendRequest","id","getSentFriendRequest","getAllFriends","getFriendRequestsCount","chatservice","getMessages","createMessage","getMessagesbyEmail","from","to","getMessagesbyUserId","userId","getChatRecipients","getLastMsg","deleteMessage","changeMessageType","offlinemessages","SocketContext","createContext","SocketProvider","isLogin","children","useState","obj","setObj","frndcounter","setFrndCounter","msgCount","setMsgCount","clientSocket","setSocket","roomId","useRef","useEffect","socket","io","close","current","messageCounter","o","sender","info","receiver","c","count","newMessageEvent","on","payload","toast","RecipientName","messageBody","onOpen","position","POSITION","TOP_LEFT","transition","Bounce","getAllRequests","length","messageEvent","roomJoin","did","emit","myNotificationRoom","error","room","friendReq","autoClose","getRequest","acceptRejectCounter","msgCounter","msgNotify","Provider","withRouter","history","setLogin","useHistory","firstName","lastName","myId","_id","myEmail","myProfileImg","profileImg","useContext","handleLogOut","evt","undefined","name","off","push","className","pathname","style","textDecoration","src","alt","height","width","borderRadius","display","onclick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","marginRight","aria-hidden","onClick","ChatContext","ChatContextProvider","msg","setCount","window","onload","getUnreadMsgs","setCountObject","Zoom","setCounter","accountService","accountActivation","forgotPassword","resetPassword","profileSetup","updateProfileSetup","getMyAccount","deleteMyAccount","PageTitle","Grid","container","item","xs","sm","xm","md","Typography","variant","marginTop","textAlign","fontSize","color","brown","fontFamily","component","marginBottom","UserDashboard","setUsers","userEmail","clientSocket1","s","usersArray","Button","padding","backgroundColor","fullWidth","event","Badge","badgeContent","LogoPage","useStyles","makeStyles","root","LinearBuffer","classes","React","progress","setProgress","buffer","setBuffer","progressRef","diff","Math","random","diff2","timer","setInterval","clearInterval","LinearProgress","valueBuffer","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","InfoIcon","theme","green","palette","dark","primary","main","amber","icon","iconVariant","opacity","spacing","message","alignItems","AlertBar","open","setOpen","handleClose","reason","Icon","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","clsx","aria-describedby","action","IconButton","signup","a","response","login","textfield","margin","SignUp","gender","password","confirmPassword","errorMessage","successMsg","showPassword","showPassword1","loading","values","setValues","handleChange","prop","target","handleClickShowPassword","handleClickShowConfirmPassword","handleMouseDownPassword","preventDefault","handleTextChange","Register","isEmpty","isEmail","equals","successMessage","Paper","TextField","label","fontWeight","fontStyle","onChange","InputProps","startAdornment","InputAdornment","grey","FormControl","textField","InputLabel","htmlFor","marginLeft","Input","endAdornment","onMouseDown","Visibility","VisibilityOff","FormLabel","RadioGroup","FormControlLabel","control","Radio","cyan","deletePermission","state","DeletePermission","DeletePermissionProvider","props","useReducer","localData","deletemsg","dispatch","LogIn","onIdSubmit","setId","LogInForm","Activate","match","token1","formData","setFormData","jwt","decode","red","paddingTop","notFound","ForgotPassword","onSubmit","href","paddingLeft","indigo","ResetPassword","ResetPasswordBtn","newPassword","resetPasswordLink","Submitbtn","ProfileSetup","webcamRef","capturedPic","setCapturedPic","options","img","language","infoMessage","resizeFile","file","Resizer","imageFileResizer","uri","capture","useCallback","imageSrc","getScreenshot","FormData","append","fetch","method","body","json","uploadImage","e","imageFile","files","compressedImage","secure_url","SetProfile","langPreference","accept","placeholder","find","tabindex","aria-labelledby","data-dismiss","audio","ref","screenshotFormat","class","SingleContact","contact","userData","sentRequests","includes","showAddBtn","setAddBtn","myName","myGender","myLangPreference","Hidden","only","lightBlue","friendId","contactService","getAllContact","getSingleContact","cursor","AllContact","setLoading","searchTerm","setSearchTerm","contacts","setContacts","currentTarget","float","filter","toLowerCase","startsWith","map","index","SingleFriendRequest","friendreq","onAcceptReject","size","friendName","friendProfileImg","chatId","friendEmail","friendGender","friendLangPreference","AllFriendRequest","friendreqs","setFrndRequest","SingleFriend","friend","onRemove","chatRec","lightGreen","fr","userservice","getUsers","getUserByEmail","getUserNameByEmail","MyChatsContext","MyChatsProvider","chatRecipients","setChatRecipients","recData","recMsgs","msgType","recName","recId","imgUrl","getRecData","uId","rec","Array","Set","r","Rname","data1","lastMsg","data2","setRecipients","AllFriends","friends","setFriends","getAllMyFriends","UpdateProfileSetup","updateProfile","textTransform","DeleteMsg","boxchecked","checked","setChecked","setShow","Dialog","DialogTitle","paddingBottom","DialogContent","DialogContentText","defaultChecked","checkedHandler","DialogActions","msgId","getData","SettingMessage","show","messageId","elem","handleClickOpen","messageVideo","isDel","time","inputInput","transitions","create","border","TypeMessage","setMessage","Fragment","InputBase","inputProps","sendMessage","RenderChat","anchorEl","setAnchorEl","isSearch","setSearch","Boolean","openMenu","setMenu","open1","itemClickHandler","option","setDel","recipientInfo","aria-haspopup","Menu","keepMounted","PaperProps","maxHeight","MenuItem","data-tip","data-for","searchHandler","setTerm","disableUnderline","element","CircularProgress","isFriend","SingleChat","messages","chat","setChat","searchChats","setSearchChats","setIsFriend","scrollRef","chats","uImg","uName","recipient","lang","myChatsRoom","notificationRoom","split","isChat","setIsChat","us","scrollIntoView","behavior","mycount","forEach","f","chatState","newMessages","list","term","uuidv4","messageS","userName","Date","toLocaleString","userImg","keywords","subheader","globe","subheaderText","overflowY","listText","listText1","overflow","textOverflow","listTime","listBtn","mygrid","mygrid1","recipientClickHandler","m","recipients","emails","u","ind","types","msgs","format","senders","AllChats","uData","usersData","setData","setLastMsg","setPayload","sort","userArray","datafromdb","d","newMsg","newR","newT","newTime","users","p","indx","setRecArray","setNewRecipient","items","mtypes","mTime","Profile","contactId","UserRoute","Component","rest","render","ContactManagement","div","App","dId","setDid","path","exact","location","Chat","MyChats","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"giBAGaA,EAAkB,SAACC,GAC9B,OAAOC,KAAKC,MAAMC,aAAaC,QAAQJ,KAE5BK,EAAqB,SAACL,GACjCG,aAAaG,WAAWN,ICDbO,EAAiB,SAACC,EAAOC,GCLb,IAACT,EAAKU,EAALV,EDMd,QCNmBU,EDMVF,ECLnBG,IAAQC,IAAIZ,EAAKU,EAAO,CAAEG,QAAS,IFFN,SAACb,EAAKU,GACnCP,aAAaW,QAAQd,EAAKC,KAAKc,UAAUL,ICOzCM,CAAgB,OAAQP,IAEbQ,EAAkB,WAC7B,GCPwBjB,EDOV,QCNPW,IAAQO,IAAIlB,IDMOD,EAAgB,QACxC,OAAOA,EAAgB,QCRF,IAACC,GDUbmB,EAAS,SAACC,GCPK,IAACpB,IDQd,QCPNW,IAAQU,OAAOrB,GDQtBK,EAAmB,QACnBA,EAAmB,YACnBA,EAAmB,WACnBA,EAAmB,cACnBA,EAAmB,WACnBA,EAAmB,gBACnBA,EAAmB,kBACnBe,K,iDEtBFE,IAAMC,SAASC,QAAUC,6BACzBH,IAAMC,SAASG,QAAQC,OAAO,gBAAkBxB,aAAaC,QAAQ,S,IAsDtDwB,E,sCApDXV,IAAM,SAACW,GACJ,OAAO,IAAIC,SAAQ,SAACC,EAAQC,GACvBV,IAAMJ,IAAIW,GACTI,MAAK,SAACC,GACLH,EAAQG,EAAIC,SAEbC,OAAM,SAACC,GACJL,EAAOK,U,KAInBC,WAAa,SAACT,EAAIU,GACd,OAAO,IAAIT,SAAQ,SAACC,EAAQC,GACvBV,IAAMJ,IAAIW,EAAI,CAACW,OAAO,CAACD,MAAOA,KAC7BN,MAAK,SAACC,GACLH,EAAQG,EAAIC,SAEbC,OAAM,SAACC,GACJL,EAAOK,U,KAKpBI,KAAO,SAACZ,EAAIM,GACR,OAAO,IAAIL,SAAQ,SAACC,EAAQC,GACxBV,IAAMmB,KAAKZ,EAAIM,GAAMF,MAAK,SAACC,GACvBH,EAAQG,EAAIC,SACbC,OAAM,SAACC,GACNK,QAAQC,IAAI,SACZX,EAAOK,U,KAInBO,IAAM,SAACf,EAAIM,GACP,OAAO,IAAIL,SAAQ,SAACC,EAAQC,GACxBV,IAAMsB,IAAIf,EAAIM,GAAMF,MAAK,SAACC,GACtBH,EAAQG,EAAIC,SACbC,OAAM,SAACC,GACNL,EAAOK,U,KAInBQ,OAAS,SAAChB,GACN,OAAO,IAAIC,SAAQ,SAACC,EAAQC,GACxBV,IAAMuB,OAAOhB,GAAKI,MAAK,SAACC,GACpBH,EAAQG,EAAIC,SACbC,OAAM,SAACC,GACNL,EAAOK,WCpCRS,EADK,I,4MAXlBC,YAAgB,SAACZ,GAAD,OAAU,EAAKM,KAAK,8BAA+BN,I,EACnEa,cAAgB,SAACb,GAAD,OAAU,EAAKM,KAAK,gCAAiCN,I,EACrEc,cAAgB,SAACd,GAAD,OAAU,EAAKM,KAAK,gCAAiCN,I,EACrEe,cAAgB,SAACf,GAAD,OAAU,EAAKM,KAAK,gCAAiCN,I,EACrEgB,aAAgB,SAAChB,GAAD,OAAU,EAAKM,KAAK,wBAAyBN,I,EAC7DiB,iBAAkB,SAACC,GAAD,OAAS,EAAKnC,IAAI,8BAAgCmC,I,EACpEC,qBAAsB,SAACD,GAAD,OAAS,EAAKnC,IAAI,gCAAkCmC,I,EAC1EE,cAAe,SAACF,GAAD,OAAS,EAAKnC,IAAI,2BAA6BmC,I,EAC9DG,uBAAwB,SAACH,GAAD,OAAO,EAAKnC,IAAI,oCAAsCmC,I,YAVpDzB,ICgCb6B,EADG,I,4MA7BdC,YAAc,WACV,OAAO,EAAKxC,IAAI,Y,EAEpByC,cAAgB,SAACxB,GACb,OAAO,EAAKM,KAAK,UAAUN,I,EAE/ByB,mBAAqB,SAACC,EAAKC,GACvB,OAAO,EAAK5C,IAAI,sBAAsB2C,EAAK,IAAIC,I,EAEnDC,oBAAsB,SAACC,GACnB,OAAO,EAAK9C,IAAI,uBAAuB8C,I,EAE3CC,kBAAoB,SAACD,GACjB,OAAO,EAAK9C,IAAI,0BAA0B8C,I,EAE9CE,WAAa,SAACL,EAAKC,GACf,OAAO,EAAK5C,IAAI,mBAAmB2C,EAAK,IAAIC,I,EAEhDK,cAAgB,SAACd,GACb,OAAO,EAAKR,OAAO,WAAYQ,I,EAEnCe,kBAAoB,SAACjC,EAAKkB,GACtB,OAAO,EAAKT,IAAI,WAAWS,EAAIlB,I,EAEnCkC,gBAAkB,SAAChB,GACf,OAAO,EAAKnC,IAAI,2BAA2BmC,I,YA3BzBzB,ICQb0C,G,OAAgBC,2BACtB,SAASC,EAAT,GAAsD,IAA7BnB,EAA4B,EAA5BA,GAAGd,EAAyB,EAAzBA,MAAMkC,EAAmB,EAAnBA,QAAQC,EAAW,EAAXA,SAAW,EAEpCC,mBAAS,IAF2B,mBAEnDC,EAFmD,KAE9CC,EAF8C,OAGtBF,mBAAS,GAHa,mBAGnDG,EAHmD,KAGvCC,EAHuC,OAI7BJ,mBAAS,GAJoB,mBAInDK,EAJmD,KAI1CC,EAJ0C,OAKxBN,qBALwB,mBAKnDO,EALmD,KAKrCC,EALqC,KAQtDC,EAASC,mBAEbC,qBAAU,WAER,IAAMC,EAASC,IACb/D,0BAGF,OADA0D,EAAUI,GACH,kBAAMA,EAAOE,WAEnB,IAEHH,qBAAU,WACRF,EAAOM,QAAS,IAAIrC,EACpBX,QAAQC,IAAIyC,KACZ,IAEF,IAAMO,EAAe,WAEnBlC,EAAYY,gBAAgB9B,GACvBN,MAAK,SAACC,GACL2C,GAAO,SAACe,GAEN,MADI,CAACC,OAAQ3D,EAAI4D,KAAKD,OAAQE,SAAU7D,EAAI4D,KAAKC,aAG7Cd,GAAY,SAACe,GAEV,OADM9D,EAAI+D,SAGbvD,QAAQC,IAAI,mBAAmBqC,GAC9B7E,aAAaW,QAAQ,eAAeb,KAAKc,UAAUiE,OAE3D5C,OAAM,SAACC,GAAD,OAAOK,QAAQC,IAAIN,OAEhCiD,qBAAU,kBAAIK,IAAe,IAE7BL,qBAAU,WACLb,IACHyB,IACAxD,QAAQC,IAAI,gCAEZ,CAAC8B,IAGH,IAAMyB,EAAkB,WACRjG,KAAKC,MAAMC,aAAaC,QAAQ,iBAC9CsC,QAAQC,IAAI,mBACTuC,EACDA,EAAaiB,GAAG,cAAc,SAACC,GAC/BC,YAAMD,EAAQE,cAAe,IAC3BF,EAAQA,QAAQG,YAAa,CAC3BC,OAAQ,kBAAM9D,QAAQC,IAAI,uBAC1B8D,SAAUJ,IAAMK,SAASC,SAEzBC,WAAYC,MAGhBnE,QAAQC,IAAI,cAAcyD,GAG1BnB,GAAY,SAACe,GAIX,OAHAA,GAAS,EACT7F,aAAaW,QAAQ,eAAeb,KAAKc,UAAUiF,IACnD7F,aAAaW,QAAQ,MAAMb,KAAKc,UAAUiF,IACnCA,QAKTtD,QAAQC,IAAI,cAuBVmE,EAAe,WACnBhE,EAAcM,iBAAiBC,GAAIpB,MAAK,SAACE,GACvC4C,EAAe5C,EAAK4E,QACpB5G,aAAaW,QAAQ,iBAAiBb,KAAKc,UAAUoB,EAAK4E,YAE1D3E,OAAO,SAAAC,GAAMK,QAAQC,IAAIN,OAE7BiD,qBAAU,kBAAIwB,IAAe,CAAChC,IAE9B,IA8BIpE,EAAM,CACRwE,aAAeA,EACfC,UAAYA,EACZ6B,aAAed,EACfe,SA7De,SAACC,GAEhBA,EAAM,IAAIA,EACPhC,GACDA,EAAaiC,KACX,mBACA,CAAEC,mBAAqBF,IACvB,YAAmB,IAAjBG,EAAgB,EAAhBA,MAAMC,EAAU,EAAVA,KACDD,EAGH3E,QAAQC,IAAI,qBAAsB0E,GAFlC3E,QAAQC,IAAI,sBAAuB2E,OAqD3CC,UAzBqB,WACrB7E,QAAQC,IAAI,oBACTuC,EACDA,EAAaiB,GAAG,cAAc,SAACC,GAC3B1D,QAAQC,IAAI,aAAayD,GACzBC,IAAMP,KACNM,EAAQP,OAAQ,kCAAmC,CACnDY,SAAUJ,IAAMK,SAASC,SAEzBa,UAAW,IACXZ,WAAYC,SAKhBnE,QAAQC,IAAI,cAWd8E,WApCuB,WACpBvC,GAEHA,EAAaiB,GAAG,cAAc,kBAAMW,OACpC5B,EAAaiB,GAAG,iBAAiB,SAACC,GAAD,OAAaU,QAG9CpE,QAAQC,IAAI,cA8BZmC,YAAYA,EACZ4C,oBAAoBZ,EACpBa,WAAW3C,EACX4C,UAAUjC,EACVf,IAAMA,GAER,OACE,cAACN,EAAcuD,SAAf,CAAwBnH,MAAOA,EAA/B,SACGgE,IChKP,IA6FeoD,eA7FA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,SACxBD,EAAUE,cACV,IAAMC,EAAWjH,IAAkBiH,UAC7BC,EAAWlH,IAAkBkH,SAC7BC,EAAOnH,IAAkBoH,IACzBC,EAAUrH,IAAkBsB,MAC5BgG,EAActH,IAAkBuH,WAC/BtD,EAAgBuD,qBAAWnE,GAA3BY,aACDwD,EAAe,SAACC,GACpBxH,GAAO,WACL6G,GAAS,QACSY,IAAf1D,GACDA,EAAaiC,KAAK,aAAa,CAAC9D,GAAG6B,EAAa7B,GAAIwF,KAAMP,IAC1DpD,EAAa4D,IAAI,cACjB5D,EAAa4D,IAAI,cACjB5D,EAAa4D,IAAI,iBAGjBpG,QAAQC,IAAI,aAEdoF,EAAQgB,KAAK,cAsEjB,OAAO,iCAjEL,8BACE,sBAAK1F,GAAG,MAAM2F,UAAU,4CAAxB,UAEE,sBAAKA,UAAU,eAAf,UACD,eAAC,IAAD,CAAMlF,GAAI,CAAEmF,SAAS,4BAAD,OAA8Bb,IAAUc,MAAO,CAACC,eAAe,QAAnF,UACC,qBACEC,IAAMb,EACNc,IAAI,UAEJH,MAAO,CAAEI,OAAQ,OAAQC,MAAO,OAAQC,aAAc,MAAMC,QAAQ,UACrEC,QAAS,kBAAI3B,EAAQgB,KAAK,4BAA4BX,MANxD,OAQC,sBAAMY,UAAU,cAAhB,SAA+Bd,EAAW,IAAMC,OAChD,wBACEa,UAAU,iBACVW,KAAK,SACLC,cAAY,WACZC,cAAY,qBACZC,gBAAc,oBACdC,gBAAc,QACdC,aAAW,oBAPb,SASE,sBAAMhB,UAAU,0BAElB,qBAAKA,UAAU,2BAA2B3F,GAAG,oBAA7C,SACE,oBACE2F,UAAU,2CADZ,SAUG/H,KAAgD,IAA3BA,IAAkBgJ,MACtC,eAAC,WAAD,WACE,oBAAIjB,UAAU,WAAd,SACE,cAAC,IAAD,CAAMlF,GAAG,YAAYkF,UAAU,gBAIhC,oBAAIA,UAAU,WAAWE,MAAQ,CAACgB,YAAY,QAA9C,SACC,eAAC,IAAD,CAAMpG,GAAI,CAACmF,SAAU,cAAcb,GAAOY,UAAU,WAApD,UACG,mBAAGA,UAAU,aAAamB,cAAY,SADzC,mBAID,oBAAInB,UAAU,WAAd,SACC,yBACEA,UAAU,oDACVE,MAAO,CAACC,eAAe,QACvBiB,QAAS1B,EAHX,UAKE,mBAAGM,UAAU,sBAAsBmB,cAAY,SALjD,gC,kBCtELE,EAAc9F,0BAEd+F,EAAsB,SAAC,GAA+B,IAG3D/H,EAH6ByB,EAA6B,EAA7BA,OAAOS,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,SAE7C6F,EAAM,GAFoD,EAIxC5F,mBAAS,IAJ+B,mBAIvDC,EAJuD,KAIlDC,EAJkD,OAKtCF,mBAAS,GAL6B,mBAKvDsB,EALuD,KAKjDuE,EALiD,KAM9DC,OAAOC,OAAQ,WACXnI,EAAQtC,KAAKC,MAAMC,aAAaC,QAAQ,QAAQmC,OAChDoI,EAAcpI,IAElB+C,qBAAU,WACN5C,QAAQC,IAAI,WAAW8B,GACpBA,GACCkG,EAAc3G,KAGpB,CAACS,IAEHa,qBAAU,WACNsF,MACF,IAEF,IAAMD,EAAe,SAACpI,GAClBkB,EAAYY,gBAAgB9B,GAC3BN,MAAK,SAACC,GACAA,EAAI+D,MAAQ,IACXvD,QAAQC,IAAI,QAAQT,EAAI+D,OACxBsE,EAAM,YAAYrI,EAAI+D,MAAO,iBAC1B/D,EAAI4D,KAAKD,OAAO,KAAO7B,GACtBtB,QAAQC,IAAI,SAAST,EAAI4D,KAAKD,QAC9BnD,QAAQC,IAAI,OAAOqB,GACvBqC,IAAMP,KAAKyE,EAAI,CACf9D,SAAUJ,IAAMK,SAASC,SACzBC,WAAYiE,OAIRnI,QAAQC,IAAI,iBAKvBP,OAAM,SAACC,GAAD,OAAOK,QAAQC,IAAIN,OAGxBuI,EAAiB,WACnBnH,EAAYY,gBAAgB9B,GACvBN,MAAK,SAACC,GACAA,EAAI+D,MAAQ,IACbpB,GAAO,SAACe,GAEN,MADI,CAACC,OAAQ3D,EAAI4D,KAAKD,OAAQE,SAAU7D,EAAI4D,KAAKC,aAInDrD,QAAQC,IAAI,MAAMiC,GAClB4F,GAAS,SAACxE,GAER,OADI9D,EAAI+D,aAMf7D,OAAM,SAACC,GAAD,OAAOK,QAAQC,IAAIN,OAIlC,OACI,cAACgI,EAAYxC,SAAb,CAAsBnH,MAAS,CAACiK,cAAeA,EAAe1E,MAAOA,EAAOrB,IAAIA,EAAKkG,WAAaN,GAAlG,SAEK9F,K,qHClEEqG,EADM,I,4MARlBC,kBAAoB,SAAC7I,GAAD,OAAU,EAAKM,KAAK,mBAAoBN,I,EAC5D8I,eAAiB,SAAC9I,GAAD,OAAU,EAAKS,IAAI,wBAAyBT,I,EAC7D+I,cAAgB,SAAC/I,GAAD,OAAU,EAAKS,IAAI,uBAAwBT,I,EAC3DgJ,aAAc,SAAChJ,GAAD,OAAQ,EAAKM,KAAK,sBAAsBN,I,EACtDiJ,mBAAqB,SAAC/C,EAAKlG,GAAN,OAAc,EAAKS,IAAI,8BAAgCyF,EAAKlG,I,EACjFkJ,aAAc,SAAChI,GAAD,OAAQ,EAAKnC,IAAI,oBAAsBmC,I,EACrDiI,gBAAiB,SAACjI,GAAD,OAAO,EAAKR,OAAO,2BAA2BQ,I,YARrCzB,I,0BCwBd2J,EAtBG,SAAC,GAAY,IAAX1C,EAAU,EAAVA,KAClB,OAAO,8BACJ,eAAC2C,EAAA,EAAD,CAAMC,WAAS,EAAf,UACC,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACpC,eAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,UACA,cAACC,EAAA,EAAD,CAAYC,QAAQ,WACjB9C,MAAO,CACN+C,UAAU,SACXC,UAAU,SACVC,SAAS,OACTC,MAAMC,IAAM,KACZC,WAAW,8CACVC,UAAU,KAPd,SAOoB1D,IAClB,oBAAIK,MAAQ,CAACsD,aAAa,aAG9B,cAAChB,EAAA,EAAD,CAAME,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,UCyO1BW,GApOO,SAAC,GAAyB,IAAxBzE,EAAuB,EAAvBA,SAAS0E,EAAc,EAAdA,SAGzBtE,EAAMnH,IAAkBoH,IAI1BsE,GADUtH,iBAAO,GACLA,oBACZ0C,EAAUE,cACd0E,EAAUjH,QAAUzF,KAAKC,MAAMC,aAAaC,QAAQ,SAASmC,MAC7DG,QAAQC,IAAIgK,GAViC,MAWoFlE,qBAAWnE,GAArIY,EAXsC,EAWtCA,aAAaC,EAXyB,EAWzBA,UAAU6B,EAXe,EAWfA,aAAaC,EAXE,EAWFA,SAASM,EAXP,EAWOA,UAAUE,EAXjB,EAWiBA,WAAW3C,EAX5B,EAW4BA,YAAY8C,EAXxC,EAWwCA,UAAUD,EAXlD,EAWkDA,WAAWD,EAX7D,EAW6DA,oBAG1GhF,QAAQC,IAAI,sBAAsBgF,GAClC,IAAIiF,EAAgBvH,mBACpBC,qBAAU,kBAAIsC,IAAU,IACvB6C,OAAOC,OAAS,WACZnD,IACAG,IACAE,IACFZ,IACAS,IACDR,EAASmB,GACTwE,EAAgBpH,IAAG/D,0BACrB0D,GAAU,SAAC0H,GAOP,OANAA,EAAID,GACFzG,GAAG,WAAY,WACfzD,QAAQC,IAAI,YAAYkK,EAAExJ,IAC1BwJ,EAAE1F,KAAK,UAAU,CAAC9D,GAAGwJ,EAAExJ,GAAIwF,KAAM8D,EAAUjH,aAGtCmH,MAoEX,OAxBCvH,qBAAU,gBACSsD,IAAf1D,GACCxC,QAAQC,IAAIuC,GACZA,EAAaiC,KAAK,UAAU,CAAC9D,GAAG6B,EAAa7B,GAAIwF,KAAM8D,EAAUjH,UAAU,SAACoH,GAE1EJ,EAASI,OAIXpK,QAAQC,IAAI,eAEf,IAEF2C,qBAAW,cAKT,IAEFA,qBAAW,WACV2B,EAASmB,KACT,IAEK,sBAAKc,MAAO,CAACI,OAAO,SAAUN,UAAU,YAAxC,UACL,cAAC,EAAD,CAAQhB,SAAUA,IAClB,cAAC,EAAD,CAAWa,KAAM,cAEhB,eAAC2C,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGG,GAAI,IACtB,eAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIG,GAAI,EAAvB,UACG,eAACiB,EAAA,EAAD,CAAQ/D,UAAW,WAChBE,MAAO,CAAC8D,QAAQ,YAAYvD,QAAQ,QAAQwD,gBAAgB,WAC7DjB,QAAQ,YACRI,MAAM,YACNc,WAAS,EACT9C,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,iBAAiBX,IALnD,UAMI,cAAC,IAAD,CAAeY,UAAU,WACzBoD,MAAQ,UAPZ,qBASE,eAACW,EAAA,EAAD,CAAQ/D,UAAW,WAClBE,MAAO,CAAE8D,QAAQ,YAAYf,UAAU,OAAOxC,QAAQ,QAAQwD,gBAAgB,WAC/EjB,QAAQ,YACRI,MAAM,YACNc,WAAS,EACT9C,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,mBAAmBX,IALnD,UAME,cAAE,IAAF,CAAgBY,UAAU,WAC1BoD,MAAQ,UAPV,iBAwBFzE,GAAY,EACX,eAACoF,EAAA,EAAD,CAAQ/D,UAAW,WACjBE,MAAO,CAAE8D,QAAQ,YAAcf,UAAU,OAAOxC,QAAQ,QAAQwD,gBAAgB,WAClFjB,QAAQ,YACPI,MAAM,YACNc,WAAS,EACR9C,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,YAAYX,IAL9C,UAMC,cAACgF,EAAA,EAAD,CAAOC,aAAc1F,EAAYyE,MAAM,YAAYlD,MAAO,CAACgB,YAAY,UAAvE,SACE,cAAC,IAAD,CAAUlB,UAAU,WACpBoB,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,YAAYX,IAC5CgE,MAAQ,YATX,cAeF,eAACW,EAAA,EAAD,CAAQ/D,UAAW,WACfE,MAAO,CAAE8D,QAAQ,YAAaf,UAAU,OAAOxC,QAAQ,QAAQwD,gBAAgB,WACjFjB,QAAQ,YACPI,MAAM,YACNc,WAAS,EACR9C,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,YAAYX,IALhD,UAMC,cAAC,IAAD,CAAUY,UAAU,WAChBoD,MAAQ,UAPb,gBAaCtH,GAAe,EACd,eAACiI,EAAA,EAAD,CAAQ/D,UAAW,WACjBE,MAAO,CAAE8D,QAAQ,YAAcf,UAAU,OAAOxC,QAAQ,QAAQwD,gBAAgB,WAClFjB,QAAQ,YACPI,MAAM,YACNc,WAAS,EACR9C,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,wBAAwBX,IAL1D,UAMC,cAACgF,EAAA,EAAD,CAAOC,aAAcvI,EAAasH,MAAM,YAAYlD,MAAO,CAACgB,YAAY,UAAxE,SACE,cAAC,IAAD,CAAqBlB,UAAU,WAC/BoB,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,wBAAwBX,IACxDgE,MAAQ,YATX,wBAeF,eAACW,EAAA,EAAD,CAAQ/D,UAAW,WACfE,MAAO,CAAE8D,QAAQ,YAAaf,UAAU,OAAOxC,QAAQ,QAAQwD,gBAAgB,WACjFjB,QAAQ,YACPI,MAAM,YACNc,WAAS,EACR9C,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,wBAAwBX,IAL5D,UAMC,cAAC,IAAD,CAAqBY,UAAU,WAC3BoD,MAAQ,UAPb,0BAYA,eAACW,EAAA,EAAD,CAAQ/D,UAAW,WACfE,MAAO,CAAE8D,QAAQ,YAAYf,UAAU,OAAOxC,QAAQ,QAAQwD,gBAAgB,WAChFjB,QAAQ,YACPI,MAAM,YACNc,WAAS,EACT9C,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,4BAA4BX,IAL/D,UAMK,cAAC,IAAD,CAAcY,UAAU,WACxBoD,MAAQ,UAPb,oBAUI,eAACW,EAAA,EAAD,CAAQ/D,UAAW,WACnBE,MAAO,CAAC8D,QAAQ,YAAYf,UAAU,OAAOxC,QAAQ,QAAQwD,gBAAgB,WAC9EjB,QAAQ,YACRI,MAAM,YACNc,WAAS,EACT9C,QAjLS,WACrBW,EAAeO,gBAAgBlD,GAC7BnG,MAAK,SAACC,GAAD,OAAQ6F,EAAQgB,KAAK,cACzB3G,OAAM,SAACC,GAAD,OAASK,QAAQC,IAAIN,OAyKjB,UAMC,cAAC,IAAD,CAAY2G,UAAU,WACtBoD,MAAQ,UAPT,wBAWL,cAACZ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGG,GAAI,W,gICvNfwB,GAvBE,SAAC,GAAc,IAAZzE,EAAW,EAAXA,KACpB,OACC,eAAC2C,EAAA,EAAD,CAAMC,WAAS,EAAf,UACK,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACpC,cAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SAED,eAACC,EAAA,EAAD,CAAYC,QAAQ,WAChB9C,MAAO,CACN+C,UAAU,OACXxF,SAAU,WACV0F,SAAS,OACTC,MAAMC,IAAM,KACXG,aAAa,OACdF,WAAW,8CACVC,UAAU,KARf,UASU,qBAAKvD,UAAU,WAAWI,IAA8B,qBAAuBP,OAK1F,cAAC2C,EAAA,EAAD,CAAME,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,Q,uLCpBnCyB,GAAYC,aAAW,CAC3BC,KAAM,CACJlE,MAAO,UAII,SAASmE,KACtB,IAAMC,EAAUJ,KADqB,EAELK,IAAMjJ,SAAS,GAFV,mBAE9BkJ,EAF8B,KAEpBC,EAFoB,OAGTF,IAAMjJ,SAAS,IAHN,mBAG9BoJ,EAH8B,KAGtBC,EAHsB,KAK/BC,EAAcL,IAAMvI,QAAO,eAyBjC,OAxBAuI,IAAMtI,WAAU,WACd2I,EAAYvI,QAAU,WACpB,GAAImI,EAAW,IACbC,EAAY,GACZE,EAAU,QACL,CACL,IAAME,EAAuB,GAAhBC,KAAKC,SACZC,EAAwB,GAAhBF,KAAKC,SACnBN,EAAYD,EAAWK,GACvBF,EAAUH,EAAWK,EAAOG,QAKlCT,IAAMtI,WAAU,WACd,IAAMgJ,EAAQC,aAAY,WACxBN,EAAYvI,YACX,KAEH,OAAO,WACL8I,cAAcF,MAEf,IAGD,qBAAKtF,UAAW2E,EAAQF,KAAxB,SACE,cAACgB,GAAA,EAAD,CAAgBzC,QAAQ,SAAStL,MAAOmN,EAAUa,YAAaX,M,qJC7B/DY,GAAc,CAClBC,QAASC,KACTC,QAASC,KACT1H,MAAO2H,KACPlJ,KAAMmJ,MAEF1B,GAAYC,cAAW,SAAC0B,GAAD,MAAY,CACvCN,QAAS,CACP3B,gBAAiBkC,KAAM,MAEzB9H,MAAO,CACL4F,gBAAiBiC,EAAME,QAAQ/H,MAAMgI,MAEvCvJ,KAAM,CACJmH,gBAAiBiC,EAAME,QAAQE,QAAQC,MAEzCT,QAAS,CACP7B,gBAAiBuC,KAAM,MAEzBC,KAAM,CACJtD,SAAU,IAEZuD,YAAa,CACXC,QAAS,GACTzF,YAAagF,EAAMU,QAAQ,IAE7BC,QAAS,CACPpG,QAAS,OACTqG,WAAY,cA4CDC,GAzCE,SAAC,GAAkC,IAAhCpG,EAA+B,EAA/BA,KAAMkG,EAAyB,EAAzBA,QAASrI,EAAgB,EAAhBA,UAC3BmG,EAAUJ,KADiC,EAEzBK,IAAMjJ,UAAS,GAFU,mBAE1CqL,EAF0C,KAEpCC,EAFoC,KAG3CC,EAAc,SAAC/C,EAAOgD,GACX,cAAXA,GAGJF,GAAQ,IAEJG,EAAOzB,GAAYhF,GACzB,OACE,cAAC0G,GAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CR,KAAMA,EACNS,iBAAkBjJ,EAClBkJ,QAASR,EAJX,SAME,cAACS,GAAA,EAAD,CACE3H,UAAW4H,aAAKjD,EAAQhE,IACxBkH,mBAAiB,kBACjBhB,QACE,uBAAMxM,GAAG,kBAAkB2F,UAAW2E,EAAQkC,QAA9C,UACE,cAACO,EAAD,CAAMpH,UAAW4H,aAAKjD,EAAQ8B,KAAM9B,EAAQ+B,eAE3CG,KAGLiB,OAAQ,CACN,cAACC,GAAA,EAAD,CAEE/G,aAAW,QACXoC,MAAM,UACNhC,QAAS8F,EAJX,SAME,cAAC,KAAD,CAAWlH,UAAW2E,EAAQ8B,QAL1B,e,iDCxEhBnO,IAAMC,SAASG,QAAQC,OAAO,gBAAiBxB,aAAaC,QAAQ,SAC7D,IAAM4Q,GAAM,yCAAG,WAAO7O,GAAP,gBAAA8O,EAAA,4DACL,CACbvP,QAAS,CACP,eAAgB,qBAHA,SAMGJ,IAAMmB,KAAKhB,yCAAiDU,GAN/D,cAMd+O,EANc,yBAObA,GAPa,2CAAH,sDASNC,GAAK,yCAAG,WAAOhP,GAAP,gBAAA8O,EAAA,6DACnBvO,QAAQC,IAAIlB,0BACG,CACbC,QAAS,CACP,eAAgB,qBAJD,SAOIJ,IAAMmB,KAAKhB,wCAAgDU,GAP/D,cAOb+O,EAPa,yBAQZA,GARY,2CAAH,sDC0BZ3D,GAAYC,cAAW,SAAC0B,GAAD,MAAY,CAEvCkC,UAAW,CACRnF,UAAWiD,EAAMU,QAAQ,MAE5ByB,OAAO,CACApF,UAAWiD,EAAMU,QAAQ,UA0SnB0B,GAtSA,WACb,IAAM3D,EAAUJ,KACZxF,EAAUE,cACd3C,qBAAU,YACJrE,KAAgD,IAA3BA,IAAkBgJ,MAElChJ,KAAgD,IAA3BA,IAAkBgJ,OAD9ClC,EAAQgB,KAAK,gBAGd,CAAChB,IARe,MASSpD,mBAAS,CACnCuD,UAAW,GACXC,SAAS,GACT5F,MAAO,GACPgP,OAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,aAAc,GACdC,WAAY,GACZC,cAAc,EACdC,eAAe,EACfC,SAAS,IApBQ,mBASZC,EATY,KASJC,EATI,KAuBjB9J,EASE6J,EATF7J,UACAC,EAQE4J,EARF5J,SACA5F,EAOEwP,EAPFxP,MACAgP,EAMEQ,EANFR,OACAC,EAKEO,EALFP,SACAC,EAIEM,EAJFN,gBACAC,EAGEK,EAHFL,aACAC,EAEEI,EAFFJ,WACAG,EACEC,EADFD,QAEIG,EAAe,SAACC,GAAD,OAAU,SAAC/E,GAAW,IAAD,EACxC6E,EAAU,2BACLD,GADI,wBAENG,EAAO/E,EAAMgF,OAAOzR,OAFd,8BAGO,IAHP,4BAIK,IAJL,OAQL0R,EAA0B,WAC9BJ,EAAU,2BAAKD,GAAN,IAAcH,cAAeG,EAAOH,iBAEzCS,EAAiC,WACrCL,EAAU,2BAAKD,GAAN,IAAcF,eAAgBE,EAAOF,kBAG1CS,EAA0B,SAACnF,GAC/BA,EAAMoF,kBAEFC,EAAmB,SAAC7J,GAAS,IAAD,EAChCqJ,EAAU,2BACLD,GADI,wBAENpJ,EAAIwJ,OAAOtJ,KAAOF,EAAIwJ,OAAOzR,OAFvB,8BAGO,IAHP,4BAIK,IAJL,MAOL+R,EAAW,SAACtF,GAEhB,GADAA,EAAMoF,iBAEJG,KAAQxK,IACRwK,KAAQvK,IACRuK,KAAQnQ,IACRmQ,KAAQlB,IACRkB,KAAQjB,IAAkBiB,KAAQnB,GAElCS,EAAU,2BAAKD,GAAN,IAAcL,aAAc,kCAC9B,GAAKiB,KAAQpQ,GAEb,GAAKqQ,KAAOpB,EAAUC,GAEtB,CAAC,IAEFtP,EAAO,CAAE+F,UADwC6J,EAA/C7J,UACiBC,SAD8B4J,EAArC5J,SACkB5F,MADmBwP,EAA3BxP,MACeiP,SADYO,EAApBP,SACkBD,OADEQ,EAAVR,QAE7CS,EAAU,2BAAKD,GAAN,IAAcD,SAAS,KAChCd,GAAO7O,GACJF,MAAK,SAACiP,GACLc,EAAU,2BACLD,GADI,IAEP7J,UAAW,GACXC,SAAS,GACT5F,MAAO,GACPiP,SAAU,GACVC,gBAAiB,GACjBF,OAAO,GACPG,cAAc,EACdC,WAAYT,EAAS/O,KAAK0Q,eAC1Bf,SAAS,QAGZ1P,OAAM,SAACC,GACNK,QAAQC,IAAIN,GACZ2P,EAAU,2BACLD,GADI,IAEPD,SAAS,EACTJ,aAAcrP,EAAI6O,SAAS/O,KAAKuP,wBAzBtCM,EAAU,2BAAKD,GAAN,IAAcL,aAAc,kCAFrCM,EAAU,2BAAKD,GAAN,IAAcL,aAAc,oBAgNzC,OACE,sBAAK1I,UAAU,aAAf,UACG8I,GAAW,cAACpE,GAAD,IACXgE,GACC,cAAC,GAAD,CAAU/H,KAAK,QAAQkG,QAAS6B,EAAclK,UAAW,MAE1DmK,GACC,cAAC,GAAD,CAAUhI,KAAK,UAAUkG,QAAS8B,EAAYnK,UAAW,MAE1D,cAAC,GAAD,CAAUwB,UAAU,QAAQH,KAAO,YAvLtC,qBAAKG,UAAU,mBAAf,SACE,eAACwC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,IAC7B,cAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAK,EAAGE,GAAI,EAA/B,SACA,eAACgH,GAAA,EAAD,CAAQ9J,UAAU,kBAAkBE,MAAO,CAAC8D,QAAS,aAArD,UACM,eAACxB,EAAA,EAAD,CAAMC,WAAS,EAACvC,MAAO,CAACgD,UAAU,UAAlC,UACJ,cAACV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,IAAD,CAAM3C,UAAU,SAAUlF,GAAG,SAA7B,uBAEF,cAAC0H,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,IAAD,CAAM3C,UAAU,gBAAgBlF,GAAG,UAAnC,0BAIF,cAACiP,GAAA,EAAD,CACE/J,UAAW2E,EAAQyD,UACnB/N,GAAG,yBAEH3C,MAAOqR,EAAO7J,UACd8K,MACE,gCACD,cAACjH,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAAC+J,WAAW,OAAOC,UAAU,UAAnE,yBACA,cAACnH,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAACkD,MAAM,OAA7C,kBAGDvD,KAAK,YAELqE,WAAS,EACTiG,SAAUX,EACTY,WAAY,CACfC,eACE,cAACC,GAAA,EAAD,CAAgB7M,SAAS,QAAzB,SACC,cAAC,KAAD,CAAmByC,MAAO,CAAEkD,MAAOmH,KAAK,aAK1C,cAACR,GAAA,EAAD,CACC/J,UAAW2E,EAAQyD,UACnB/N,GAAG,0BACH3C,MAAOqR,EAAO5J,SACd6K,MACE,gCACD,cAACjH,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAAC+J,WAAW,OAAOC,UAAU,UAAnE,wBACA,cAACnH,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAACkD,MAAM,OAA7C,kBAGDvD,KAAK,WAELqE,WAAS,EACTiG,SAAUX,EACTY,WAAY,CACfC,eACE,cAACC,GAAA,EAAD,CAAgB7M,SAAS,QAAzB,SACC,cAAC,KAAD,CAAmByC,MAAO,CAAEkD,MAAOmH,KAAK,aAK3C,cAACR,GAAA,EAAD,CACE/J,UAAW2E,EAAQyD,UACnB4B,MACE,gCACD,cAACjH,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAAC+J,WAAW,OAAOC,UAAU,UAAnE,6BACA,cAACnH,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAACkD,MAAM,OAA7C,kBAGD/I,GAAG,0BAEHwF,KAAK,QACLnI,MAAOqR,EAAOxP,MACd2K,WAAS,EACTiG,SAAUX,EACTY,WAAY,CACfC,eACE,cAACC,GAAA,EAAD,CAAgB7M,SAAS,QAAzB,SACC,cAAC,KAAD,CAAWyC,MAAO,CAAEkD,MAAOmH,KAAK,aAMrC,eAACC,GAAA,EAAD,CAAaxK,UAAW4H,aAAKjD,EAAQ0D,OAAQ1D,EAAQ8F,WAAYvG,WAAS,EAA1E,UACC,eAACwG,GAAA,EAAD,CAAYC,QAAQ,8BAApB,UACI,cAAC5H,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAAC+J,WAAW,OAAOC,UAAU,UAAnE,uBACA,cAACnH,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAACkD,MAAM,MAAMwH,WAAW,UAA9D,kBAEO,cAACC,GAAA,EAAD,CACRxQ,GAAG,8BACHsG,KAAMoI,EAAOH,aAAe,OAAS,WACrC/I,KAAK,WACLnI,MAAOqR,EAAOP,SACd2B,SAAUlB,EAAa,YAEzBoB,eACE,cAACC,GAAA,EAAD,CAAgB7M,SAAS,QAAzB,SACC,cAAC,KAAD,CAAUyC,MAAO,CAAEkD,MAAOmH,KAAK,UAIhCO,aACE,cAACR,GAAA,EAAD,CAAgB7M,SAAS,MAAzB,SACE,cAACsK,GAAA,EAAD,CACE/G,aAAW,6BACXI,QAASgI,EACT2B,YAAazB,EAHf,SAKGP,EAAOH,aAAe,cAACoC,GAAA,EAAD,IAAiB,cAACC,GAAA,EAAD,aAOhD,eAACT,GAAA,EAAD,CAAaxK,UAAW4H,aAAKjD,EAAQ0D,OAAQ1D,EAAQ8F,WAAYvG,WAAS,EAA1E,UACO,eAACwG,GAAA,EAAD,CAAYC,QAAQ,8BAApB,UACJ,cAAC5H,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAAC+J,WAAW,OAAOC,UAAU,UAAnE,+BACA,cAACnH,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAACkD,MAAM,MAAMwH,WAAW,UAA9D,kBAEF,cAACC,GAAA,EAAD,CACCxQ,GAAG,qCACHsG,KAAMoI,EAAOF,cAAgB,OAAS,WACtChJ,KAAK,kBACLnI,MAAOqR,EAAON,gBACd0B,SAAUlB,EAAa,mBACtBoB,eACD,cAACC,GAAA,EAAD,CAAgB7M,SAAS,QAAzB,SACC,cAAC,KAAD,CAAYyC,MAAO,CAAEkD,MAAOmH,KAAK,UAGlCO,aACE,cAACR,GAAA,EAAD,CAAgB7M,SAAS,MAAzB,SACE,cAACsK,GAAA,EAAD,CACE/G,aAAW,6BACXI,QAASiI,EACT0B,YAAazB,EAHf,SAKGP,EAAOF,cAAgB,cAACmC,GAAA,EAAD,IAAiB,cAACC,GAAA,EAAD,aAMvD,eAACT,GAAA,EAAD,CAAajH,UAAU,WAAWvD,UAAW2E,EAAQ0D,OAArD,UACE,eAAC6C,GAAA,EAAD,CAAW3H,UAAU,SAArB,UACM,cAACR,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAAC+J,WAAW,OAAOC,UAAU,SAAU/G,SAAS,SAASyH,WAAW,UAA1G,qBACC,cAAC7H,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAACkD,MAAM,MAAMwH,WAAW,UAA9D,kBAEP,eAACO,GAAA,EAAD,CAAYnK,aAAW,SAASnB,KAAK,UAAUK,MAAO,CAACO,QAAQ,UAAUmK,WAAW,QAASlT,MAAOqR,EAAOR,OAAQ4B,SAAUlB,EAAa,UAA1I,UACE,cAACmC,GAAA,EAAD,CAAkB1T,MAAM,SAAS2T,QAAS,cAACC,GAAA,EAAD,CAAOpL,MAAO,CAACkD,MAAMmI,KAAK,QAAWvB,MAAM,WACrF,cAACoB,GAAA,EAAD,CAAkB1T,MAAM,OAAO2T,QAAS,cAACC,GAAA,EAAD,CAAOpL,MAAO,CAACkD,MAAMmI,KAAK,QAAUvB,MAAM,SAClF,cAACoB,GAAA,EAAD,CAAkB1T,MAAM,QAAQ2T,QAAS,cAACC,GAAA,EAAD,CAAOpL,MAAO,CAACkD,MAAMmI,KAAK,QAAWvB,MAAM,gBAGnF,cAACjG,EAAA,EAAD,CACI7D,MAAO,CAAEkD,MAAOmH,KAAK,IACpBtG,gBAAgBsH,KAAK,KACrBtB,WAAW,OACXzJ,aAAa,OAEbwD,QAAS,UACXhE,UAAW,WACXgD,QAAQ,YACRkB,WAAS,EACT9C,QAASqI,EAVZ,uBAgBD,cAACjH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,aClUxB0I,GAAmB,SAACC,EAAO3D,GACnC,OAAQA,EAAOnH,MAChB,IAAK,mBACH,MAAO,CAAC8K,MAAO3D,EAAOpQ,OACxB,QACE,OAAO+T,ICHAC,GAAmBnQ,0BAgBjBoQ,GAfkB,SAACC,GAAW,IAAD,EACZC,qBAAWL,GAAkB,KAAK,WAC9D,IAAMM,EAAY3U,aAAaC,QAAQ,YACvC,OAAO0U,EAAY7U,KAAKC,MAAM4U,GAAa,MAHH,mBACnCC,EADmC,KACxBC,EADwB,KAS1C,OAJA1P,qBACE,WAAOnF,aAAaW,QAAQ,WAAab,KAAKc,UAAUgU,MACxD,CAACA,IAGD,cAACL,GAAiB7M,SAAlB,CAA2BnH,MAAO,CAAEqU,YAAWC,YAA/C,SACGJ,EAAMlQ,YCuBP6I,GAAYC,cAAW,SAAC0B,GAAD,MAAY,CACtCuE,UAAW,CACVxH,UAAWiD,EAAMU,QAAQ,IAE3ByB,OAAO,CACL7E,aAAc0C,EAAMU,QAAQ,QAyNjBqF,GArND,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,WAAWC,EAA6B,EAA7BA,MAAenN,GAAc,EAAtBvD,QAAsB,EAAduD,UACpCD,EAAUE,cADwC,EAEDQ,qBAAWnE,GAAtC0C,GAF4B,EAE/C7B,UAF+C,EAErC8B,SAFqC,EAE5BD,cAAcO,EAFc,EAEdA,UAClCoG,EAAUJ,KACRyH,EAAavM,qBAAWiM,IAAxBM,SACkBvM,qBAAW4B,GAA7BM,cACYiD,IAAMvI,SAC1BC,qBAAU,WACJrE,KAAgD,IAA3BA,IAAkBgJ,KACzClC,EAAQgB,KAAK,oBACN9H,KAAgD,IAA3BA,IAAkBgJ,MAC9ClC,EAAQgB,KAAK,qBAGd,CAAChB,IACJ0C,OAAOC,OAAS,WACdnD,IACAP,KAjBoD,MAqB1BrC,mBAAS,CACnCpC,MAAO,GACPiP,SAAU,GACVE,aAAc,GACdE,cAAc,EACdE,SAAS,IA1B2C,mBAqB/CC,EArB+C,KAqBvCC,EArBuC,KA4B9CzP,EAA2CwP,EAA3CxP,MAAOiP,EAAoCO,EAApCP,SAAUE,EAA0BK,EAA1BL,aAAcI,EAAYC,EAAZD,QASvCxM,qBAAU,WACR5C,QAAQC,IAAI,cAOZ,IACF,IAAMyP,EAA0B,WAC9BJ,EAAU,2BAAKD,GAAN,IAAcH,cAAeG,EAAOH,iBAExCU,EAA0B,SAACnF,GAChCA,EAAMoF,kBAEFC,EAAmB,SAAC7J,GAAS,IAAD,EAChCqJ,EAAU,2BACLD,GADI,wBAENpJ,EAAIwJ,OAAOtJ,KAAOF,EAAIwJ,OAAOzR,OAFvB,8BAGO,IAHP,MAML+R,EAAW,SAACtF,GAEhB,GADAA,EAAMoF,iBACFG,KAAQnQ,IAAUmQ,KAAQlB,GAC5BQ,EAAU,2BAAKD,GAAN,IAAcL,aAAc,mCAChC,GAAKiB,KAAQpQ,GAEb,CACLyP,EAAU,2BAAKD,GAAN,IAAcD,SAAS,KAD3B,IAEGvP,EAAoBwP,EAApBxP,MAAOiP,EAAaO,EAAbP,SAGfL,GAFa,CAAE5O,QAAOiP,aAGnBvP,MAAK,SAACiP,GACL3Q,EAAe2Q,EAAS/O,KAAK3B,MAAO0Q,EAAS/O,KAAK1B,MAClDiC,QAAQC,IAAIuO,GACRjQ,KAAgD,IAA3BA,IAAkBgJ,MAKzCjC,GAAS,GAJTD,EAAQgB,KAAK,cAAc9H,IAAkBoH,KAO/C2J,EAAU,2BAAKD,GAAN,IAAcD,SAAS,KAChCqD,EAAMlU,IAAkBoH,KAEd,IADDpI,KAAKC,MAAMC,aAAaC,QAAQ,cAEvC4U,EAAS,CAAErL,KAAM,mBAAoBjJ,OAAO,OAI/C0B,OAAM,SAACC,GACN2P,EAAU,2BACLD,GADI,IAEPP,SAAS,GACTM,SAAS,EACTJ,aAAcrP,EAAI6O,SAAS/O,KAAKuP,mBAIpCwD,EAAW3S,GAEXG,QAAQC,IAAI,QAAQJ,QArCtByP,EAAU,2BAAKD,GAAN,IAAcL,aAAc,oBAsIzC,OACE,sBAAK1I,UAAU,YAAf,UACG8I,GAAW,cAACpE,GAAD,IAEZ,cAAC,GAAD,CAAU1E,UAAU,QAAQH,KAAO,YAhGrB,kBAChB,8BACE,eAAC2C,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,IAC7B,cAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGE,GAAI,EAA9B,SACA,eAACgH,GAAA,EAAD,CAAQ9J,UAAU,kBAAkBE,MAAO,CAAC8D,QAAS,aAArD,UACI,eAACxB,EAAA,EAAD,CAAMC,WAAS,EAACvC,MAAO,CAACgD,UAAU,UAAlC,UACF,cAACV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,IAAD,CAAM3C,UAAU,gBAAiBlF,GAAG,SAApC,uBAEF,cAAC0H,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,IAAD,CAAM3C,UAAU,SAASlF,GAAG,UAA5B,0BAID,cAACiP,GAAA,EAAD,CACA/J,UAAW2E,EAAQ8F,UACnBvK,MAAO,CAAC+C,UAAU,QACjB+G,MACE,gCACD,cAACjH,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAAC+J,WAAW,OAAOC,UAAU,UAAnE,6BACA,cAACnH,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAACkD,MAAM,OAA7C,kBAGD/I,GAAG,cACHwF,KAAK,QACLnI,MAAOqR,EAAOxP,MACd2K,WAAS,EACTiG,SAAUX,EACTY,WAAY,CACfC,eACE,cAACC,GAAA,EAAD,CAAgB7M,SAAS,QAAzB,SACC,cAAC,KAAD,CAAWyC,MAAO,CAAEkD,MAAOmH,KAAK,aAMpC,eAACC,GAAA,EAAD,CAAaxK,UAAW4H,aAAKjD,EAAQ0D,OAAQ1D,EAAQ8F,WAAYvG,WAAS,EAA1E,UACA,eAACwG,GAAA,EAAD,CAAYC,QAAQ,8BAApB,UACA,cAAC5H,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAAC+J,WAAW,OAAOC,UAAU,UAAnE,uBACI,cAACnH,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAACkD,MAAM,MAAMwH,WAAW,UAA9D,kBAEO,cAACC,GAAA,EAAD,CACRxQ,GAAG,8BACHsG,KAAMoI,EAAOH,aAAe,OAAS,WACrC/I,KAAK,WACLnI,MAAOqR,EAAOP,SACd2B,UA7HYjB,EA6HW,WA7HF,SAAC/E,GAAW,IAAD,EACxC6E,EAAU,2BACLD,GADI,wBAENG,EAAO/E,EAAMgF,OAAOzR,OAFd,8BAGO,IAHP,OA8HH2S,eACE,cAACC,GAAA,EAAD,CAAgB7M,SAAS,QAAzB,SACC,cAAC,KAAD,CAAYyC,MAAO,CAAEkD,MAAOmH,KAAK,UAIlCO,aACE,cAACR,GAAA,EAAD,CAAgB7M,SAAS,MAAzB,SACE,cAACsK,GAAA,EAAD,CACE/G,aAAW,6BACXI,QAASgI,EACT2B,YAAazB,EAHf,SAKGP,EAAOH,aAAe,cAACoC,GAAA,EAAD,IAAiB,cAACC,GAAA,EAAD,aAM9C,cAAClH,EAAA,EAAD,CACC7D,MAAO,CAAEkD,MAAOmH,KAAK,IACpBtG,gBAAgBsH,KAAK,KACrBtB,WAAW,OACXzJ,aAAa,OACbgD,aAAc,SACdQ,QAAS,UAEXhE,UAAW,WACXgD,QAAQ,YACRkB,WAAS,EACT9C,QAASqI,EAXT,qBAeD,cAAC,IAAD,CAAM3O,GAAG,mBAAmBoF,MAAO,CAACC,eAAe,OAAOyK,WAAW,aAArE,mCAGF,cAACpI,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,SApKf,IAACoG,EA8KLkD,GAEZ1D,GACC,cAAC,GAAD,CAAU/H,KAAK,QAAQkG,QAAS6B,EAAclK,UAAW,U,yECrIlD6N,GA9GE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACfC,EAASD,EAAM9S,OAAOhC,MADK,EAEEmE,mBAAS,CACvCuD,UAAW,GACXC,SAAU,GACV3H,MAAO,GACPkR,aAAc,GACdC,WAAY,KAPgB,mBAEvB6D,EAFuB,KAEbC,EAFa,KASrBvN,EAAuDsN,EAAvDtN,UAAUC,EAA6CqN,EAA7CrN,SAAiBuJ,GAA4B8D,EAAnChV,MAAmCgV,EAA5B9D,cAAcC,EAAc6D,EAAd7D,WAC7C5J,EAAUE,cACf3C,qBAAU,WACR,IAAI9E,EAAQ8U,EAAM9S,OAAOhC,MACnB0H,EAAcwN,KAAIC,OAAOnV,GAAzB0H,UACAC,EAAauN,KAAIC,OAAOnV,GAAxB2H,SACF3H,IACFiV,EAAY,2BAAKD,GAAN,IAAgBtN,YAAUC,WAAW3H,WAChDuK,EAAeC,kBAAkB,CAACxK,UACjCyB,MAAK,SAAAiP,GACJuE,EAAY,2BACPD,GADM,IAET9D,cAAc,EACdC,WAAYT,EAAS2B,eACrB3K,UAAWgJ,EAAShJ,UACpBC,SAAU+I,EAAS/I,eAGtB/F,OAAM,SAAAC,GACPoT,EAAY,2BACLD,GADI,IAEP7D,YAAY,EACbD,aAAcrP,EAAI6O,SAAS/O,KAAKuP,aAC/BxJ,UAAW7F,EAAI6O,SAAS/O,KAAK+F,UAC7BC,SAAU9F,EAAI6O,SAAS/O,KAAKgG,kBAG9B,CAACmN,EAAM9S,SAmEb,OACA,gCACM,cAAC,EAAD,CAAWqG,KAAO,eAClB6I,GAlCR,8BACE,eAAClG,EAAA,EAAD,CAAMC,WAAS,EAAf,UACD,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,IAC5B,eAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,EAA7B,UAEI,4BAAG,yCAAY5D,EAAU,IAAIC,OAC3B,qCAAO,cAAC,KAAD,CACDe,MAAS,CAAEkD,MAAOwJ,KAAI,QACzB,uBAAM1M,MAAQ,CAACiD,SAAS,UAAxB,cAAqC,iCAASuF,IAA9C,UACL,cAAC3E,EAAA,EAAD,CACO7D,MAAO,CACLkD,MAAOmH,KAAK,IACbtG,gBAAgBsH,KAAK,KACrBtB,WAAW,OACXzJ,aAAa,OACbyC,UAAW,SACXe,QAAS,UACXhB,QAAQ,YACPhD,UAAW,WACZoB,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,YAVtC,2BAgBI,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,SAU/B6F,GAnER,8BACE,eAACnG,EAAA,EAAD,CAAMC,WAAS,EAAf,UACD,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,IAC5B,eAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,EAA7B,UAEI,4BAAG,yCAAY5D,EAAW,IAAIC,OAC5B,qCAAO,cAAC,KAAD,CACDe,MAAS,CAAEkD,MAAO+C,KAAM,KAAK0G,WAAW,YAC3C,sBAAM3M,MAAQ,CAACiD,SAAS,UAAxB,iGACL,cAACY,EAAA,EAAD,CACO7D,MAAO,CACLkD,MAAOmH,KAAK,IACbtG,gBAAgBsH,KAAK,KACrBtB,WAAW,OACXzJ,aAAa,OACbyC,UAAW,SACXe,QAAS,UACThB,QAAQ,YACRhD,UAAW,WACXoB,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,kBAAkBwM,IAV1D,+BAgBI,cAAC/J,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,aC3DxBgK,GAbE,WACf,OAAO,qBAAK5M,MAAO,CAAC+C,UAAU,SAAvB,SACL,eAACT,EAAA,EAAD,CAAMC,WAAS,EAAf,UACD,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,IACxB,eAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGE,GAAI,EAA9B,UACJ,4CACA,oBAAI5C,MAAQ,CAAC0K,WAAW,QAAxB,+BAEC,cAACpI,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,U,8BC0HnBiK,GAxHQ,WAAO,IAAD,EAEApR,mBAAS,CAClCpC,MAAO,GACPmP,aAAc,GACdC,WAAW,GACXG,SAAS,IANgB,mBAErBC,EAFqB,KAEbC,EAFa,KAQnBzP,EAA6CwP,EAA7CxP,MAAOoP,EAAsCI,EAAtCJ,WAAYD,EAA0BK,EAA1BL,aAAcI,EAAYC,EAAZD,QAEpCU,EAAmB,SAAC7J,GAAS,IAAD,EAC/BqJ,EAAU,2BACLD,GADI,wBAENpJ,EAAIwJ,OAAOtJ,KAAOF,EAAIwJ,OAAOzR,OAFvB,8BAGO,IAHP,4BAIK,IAJL,MAOLsV,EAAW,SAAC7I,GAEhB,GADAA,EAAMoF,iBACFG,KAAQnQ,GACVyP,EAAU,2BAAKD,GAAN,IAAcL,aAAc,4BAChC,GAAKiB,KAAQpQ,GAEb,CAAC,IACEA,EAASwP,EAATxP,MACRyP,EAAU,2BAAKD,GAAN,IAAcD,SAAS,KAC9B/G,EAAeE,eAAe,CAAC1I,UAC9BN,MAAK,SAACiP,GACLc,EAAU,2BACLD,GADI,IAEPxP,MAAO,GACPmP,cAAc,EACdC,WAAYT,EAAS2B,eACrBf,SAAS,QAGZ1P,OAAM,SAACC,GACN2P,EAAU,2BACLD,GADI,IAEPD,SAAS,EACTvP,MAAO,GACPoP,YAAW,EACXD,aAAcrP,EAAI6O,SAAS/O,KAAKuP,wBApBtCM,EAAU,2BAAKD,GAAN,IAAcL,aAAc,4BAkF3C,OAAQ,gCAEHI,GAAW,cAACpE,GAAD,IACX,cAAC,EAAD,CAAW7E,KAAO,oBAChB6I,GACC,cAAC,GAAD,CAAU/H,KAAK,QAAQkG,QAAS6B,EAAclK,UAAW,MAE1DmK,GACC,cAAC,GAAD,CAAUhI,KAAK,UAAUkG,QAAS8B,EAAYnK,UAAW,MA/DjE,8BACI,eAACgE,EAAA,EAAD,CAAMC,WAAS,EAAf,UACM,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,IAC7B,cAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAK,EAAGE,GAAI,EAA/B,SACF,eAACgH,GAAA,EAAD,CAAO5J,MAAO,CAAC8D,QAAS,aAAxB,UACE,eAACD,EAAA,EAAD,CACE/D,UAAW,WACXiN,KAAK,SACL7J,MAAM,UACPlD,MAAO,CAACsD,aAAa,OAAQ0J,YAAY,OAAO9J,MAAM+J,KAAO,MAJ9D,UAME,cAAC,KAAD,CAAejN,MAAO,CAAC+J,WAAW,OAAO/I,YAAY,YANvD,cAQI,cAAC6I,GAAA,EAAD,CACFC,MACE,gCACD,cAACjH,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAAC+J,WAAW,OAAOC,UAAU,UAAnE,6BACA,cAACnH,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAACkD,MAAM,OAA7C,kBAGD/I,GAAG,0BACF2I,QAAQ,WACTnD,KAAK,QACLnI,MAAOqR,EAAOxP,MACd2K,WAAS,EACTiG,SAAUX,EACTY,WAAY,CACfC,eACE,cAACC,GAAA,EAAD,CAAgB7M,SAAS,QAAzB,SACC,cAAC,KAAD,CAAWyC,MAAO,CAAEkD,MAAOmH,KAAK,aAK/B,cAACxG,EAAA,EAAD,CACD7D,MAAO,CAAEkD,MAAOmH,KAAK,IACpBtG,gBAAgBsH,KAAK,KACrBtB,WAAW,OACXzJ,aAAa,QACbyC,UAAW,SACXe,QAAS,UAEXhE,UAAW,WACXgD,QAAQ,YACPkB,WAAS,EACV9C,QAAS4L,EAXP,yBAiBJ,cAACxK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,aCtFhCyB,GAAYC,cAAW,SAAC0B,GAAD,MAAY,CACxCkC,UAAW,CACRC,OAAQnC,EAAMU,QAAQ,IAExByB,OAAO,CACLpF,UAAW,cAoNDmK,GAhNO,SAAC,GAAe,IAAbd,EAAY,EAAZA,MACjB3H,EAAUJ,KACZxF,EAAUE,cAFqB,EAGPtD,mBAAS,CACnCnE,MAAO,GACPgR,SAAU,GACVC,gBAAiB,GACjBC,aAAc,GACdC,WAAY,GACZC,cAAc,EACdC,eAAe,EACfC,SAAS,IAXwB,mBAG5BC,EAH4B,KAGpBC,EAHoB,KAejCxR,EAMEuR,EANFvR,MACAgR,EAKEO,EALFP,SACAC,EAIEM,EAJFN,gBACAC,EAGEK,EAHFL,aACAC,EAEEI,EAFFJ,WACAG,EACEC,EADFD,QAGAxM,qBAAU,WACN,IAAI9E,EAAQ8U,EAAM9S,OAAOhC,MACtBA,GACCwR,EAAU,2BAAID,GAAL,IAAavR,aAE3B,IACH,IAAM8R,EAA0B,SAACnF,GACjCA,EAAMoF,kBAEDN,EAAe,SAACC,GAAD,OAAU,SAAC/E,GAAW,IAAD,EACzC6E,EAAU,2BACLD,GADI,wBAENG,EAAO/E,EAAMgF,OAAOzR,OAFd,8BAGO,IAHP,4BAIK,IAJL,OAON0R,EAA0B,WAC7BJ,EAAU,2BAAKD,GAAN,IAAcH,cAAeG,EAAOH,iBAEzCS,EAAiC,WACrCL,EAAU,2BAAKD,GAAN,IAAcF,eAAgBE,EAAOF,kBAEzCwE,EAAmB,SAAClJ,GACzBA,EAAMoF,iBAEJG,KAAQlB,IACRkB,KAAQjB,GAERO,EAAU,2BAAKD,GAAN,IAAcL,aAAc,6BAC3BkB,KAAOpB,EAAUC,IAK3BO,EAAU,2BAAKD,GAAN,IAAcD,SAAS,KACjC/G,EAAeG,cAAe,CAAEoL,YAAa9E,EAAU+E,kBAAmB/V,IACtEyB,MAAK,SAACiP,GACLc,EAAU,2BACLD,GADI,IAEPP,SAAU,GACVC,gBAAiB,GACjBC,cAAc,EACdC,WAAYT,EAAS2B,eACrBf,SAAS,QAGZ1P,OAAM,SAACC,GACN2P,EAAU,2BACLD,GADI,IAENP,SAAU,GACXC,gBAAiB,GACjBK,SAAS,EACTJ,aAAcrP,EAAI6O,SAAS/O,KAAKuP,oBAtBtCM,EAAU,2BAAKD,GAAN,IAAcL,aAAc,6BA4IzC,OACA,gCACOI,GAAW,cAACpE,GAAD,IACbgE,GACC,cAAC,GAAD,CAAU/H,KAAK,QAAQkG,QAAS6B,EAAclK,UAAW,MAE1DmK,GACC,cAAC,GAAD,CAAUhI,KAAK,UAAUkG,QAAS8B,EAAYnK,UAAW,MAE1D,cAAC,EAAD,CAAWqB,KAAO,mBAvHrB,eAAC2C,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,IAC3B,cAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAK,EAAGE,GAAI,EAA/B,SACE,eAACgH,GAAA,EAAD,CAAO5J,MAAO,CAAC8D,QAAS,aAAxB,UACA,eAACD,EAAA,EAAD,CACE/D,UAAW,WACXiN,KAAK,0CACL7J,MAAM,UACPlD,MAAO,CAACsD,aAAa,OAAQ0J,YAAY,OAAO9J,MAAM+J,KAAO,MAJ9D,UAMC,cAAC,KAAD,CAAejN,MAAO,CAAC+J,WAAW,OAAO/I,YAAY,YANtD,cAQG,eAACsJ,GAAA,EAAD,CAAaxK,UAAW4H,aAAMjD,EAAQ8F,WAAYvG,WAAS,EAA3D,UACJ,eAACwG,GAAA,EAAD,CAAYC,QAAQ,8BAApB,UACI,cAAC5H,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAAC+J,WAAW,OAAOC,UAAU,UAAnE,2BACA,cAACnH,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAACkD,MAAM,MAAMwH,WAAW,UAA9D,kBAEO,cAACC,GAAA,EAAD,CACRxQ,GAAG,8BACHsG,KAAMoI,EAAOH,aAAe,OAAS,WACrC/I,KAAK,WACLnI,MAAOqR,EAAOP,SACd2B,SAAUlB,EAAa,YAEzBoB,eACE,cAACC,GAAA,EAAD,CAAgB7M,SAAS,QAAzB,SACC,cAAC,KAAD,CAAUyC,MAAO,CAAEkD,MAAOmH,KAAK,UAIhCO,aACE,cAACR,GAAA,EAAD,CAAgB7M,SAAS,MAAzB,SACE,cAACsK,GAAA,EAAD,CACE/G,aAAW,6BACXI,QAASgI,EACT2B,YAAazB,EAHf,SAKGP,EAAOH,aAAe,cAACoC,GAAA,EAAD,IAAiB,cAACC,GAAA,EAAD,aAOhD,eAACT,GAAA,EAAD,CAAaxK,UAAW4H,aAAKjD,EAAQ0D,OAAQ1D,EAAQ8F,WAAYvG,WAAS,EAA1E,UACO,eAACwG,GAAA,EAAD,CAAYC,QAAQ,8BAApB,UACJ,cAAC5H,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAAC+J,WAAW,OAAOC,UAAU,UAAnE,+BACA,cAACnH,EAAA,EAAD,CAAYC,QAAQ,WAAW9C,MAAO,CAACkD,MAAM,MAAMwH,WAAW,UAA9D,kBAEF,cAACC,GAAA,EAAD,CACCxQ,GAAG,qCACHsG,KAAMoI,EAAOF,cAAgB,OAAS,WACtChJ,KAAK,kBACLnI,MAAOqR,EAAON,gBACd0B,SAAUlB,EAAa,mBACtBoB,eACD,cAACC,GAAA,EAAD,CAAgB7M,SAAS,QAAzB,SACC,cAAC,KAAD,CAAYyC,MAAO,CAAEkD,MAAOmH,KAAK,UAGlCO,aACE,cAACR,GAAA,EAAD,CAAgB7M,SAAS,MAAzB,SACE,cAACsK,GAAA,EAAD,CACE/G,aAAW,6BACXI,QAASiI,EACT0B,YAAazB,EAHf,SAKGP,EAAOF,cAAgB,cAACmC,GAAA,EAAD,IAAiB,cAACC,GAAA,EAAD,aAOlD,cAAClH,EAAA,EAAD,CACI7D,MAAO,CAAEkD,MAAOmH,KAAK,IACpBtG,gBAAgBsH,KAAK,KACrBtB,WAAW,OACXzJ,aAAa,OACbyC,UAAW,SACXe,QAAS,UAEXhE,UAAW,WACXgD,QAAQ,YACRkB,WAAS,EACT9C,QAASiM,EAXZ,4BAeE1E,GAAe,cAAC5E,EAAA,EAAD,CACL7D,MAAO,CACP+D,gBAAgBsG,KAAK,KAC5BN,WAAW,OACXzJ,aAAa,OACbyC,UAAW,SACXe,QAAS,UAEXhE,UAAW,WACXgD,QAAQ,UACRkB,WAAS,EACT9C,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,WAXlB,wBAiBrB,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,W,oDCrN5ByB,GAAYC,aAAW,CAE3B4D,UAAW,CACTnF,UAAW,QAEbuK,UAAW,CACTvK,UAAW,YA2UAwK,GArUM,SAAC,GAAc,IAAZnB,EAAW,EAAXA,MACd3H,EAAUJ,KACVxF,EAAUE,cACVyO,EAAY9I,IAAMvI,OAAO,MAHA,EAIKuI,IAAMjJ,UAAS,GAJpB,mBAIxBgS,EAJwB,KAIXC,EAJW,KAK7BC,EAAU,CACd,CAAE7D,MAAO,YAAYtS,MAAM,MAC3B,CAAEsS,MAAO,WAAWtS,MAAM,MAC1B,CAAEsS,MAAO,UAAUtS,MAAM,MACzB,CAAEsS,MAAO,SAAStS,MAAM,MACxB,CAAEsS,MAAO,WAAWtS,MAAM,MAC1B,CAAEsS,MAAO,cAActS,MAAM,MAC7B,CAAEsS,MAAO,SAAStS,MAAM,MACxB,CAAEsS,MAAO,aAAatS,MAAM,MAC5B,CAAEsS,MAAO,UAAUtS,MAAM,MACzB,CAAEsS,MAAO,UAAUtS,MAAM,MACzB,CAAEsS,MAAO,YAAYtS,MAAM,MAC3B,CAAEsS,MAAO,UAAUtS,MAAM,MACzB,CAAEsS,MAAO,UAAUtS,MAAM,OACzB,CAAEsS,MAAO,WAAWtS,MAAM,MAC1B,CAAEsS,MAAO,UAAUtS,MAAM,SACzB,CAAEsS,MAAO,WAAWtS,MAAM,MAC1B,CAAEsS,MAAO,WAAWtS,MAAM,MAC1B,CAAEsS,MAAO,QAAQtS,MAAM,MACvB,CAAEsS,MAAO,SAAStS,MAAM,MACxB,CAAEsS,MAAO,QAAQtS,MAAM,MACvB,CAAEsS,MAAO,UAAUtS,MAAM,MACzB,CAAEsS,MAAO,YAAYtS,MAAM,MAC3B,CAAEsS,MAAO,WAAWtS,MAAM,MAC1B,CAAEsS,MAAO,WAAWtS,MAAM,MAC1B,CAAEsS,MAAO,UAAUtS,MAAM,MACzB,CAAEsS,MAAO,SAAStS,MAAM,MACxB,CAAEsS,MAAO,SAAStS,MAAM,MACxB,CAACsS,MAAO,UAAUtS,MAAO,MACzB,CAACsS,MAAO,WAAWtS,MAAO,MAC1B,CAACsS,MAAO,WAAWtS,MAAO,MAC1B,CAACsS,MAAO,SAAStS,MAAO,MACxB,CAACsS,MAAO,QAAQtS,MAAO,MACvB,CAACsS,MAAO,WAAWtS,MAAO,MAC1B,CAACsS,MAAO,iBAAiBtS,MAAO,MAChC,CAACsS,MAAM,QAAQtS,MAAO,MACtB,CAACsS,MAAM,WAAWtS,MAAO,OACzB,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAO,QAAQtS,MAAO,MACvB,CAACsS,MAAM,QAAQtS,MAAO,OACtB,CAACsS,MAAM,YAAYtS,MAAO,MAC1B,CAACsS,MAAM,YAAYtS,MAAO,MAC1B,CAACsS,MAAM,OAAOtS,MAAO,MACrB,CAACsS,MAAM,aAAatS,MAAO,MAC3B,CAACsS,MAAM,QAAQtS,MAAO,MACtB,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,WAAWtS,MAAO,MACzB,CAACsS,MAAM,WAAWtS,MAAO,MACzB,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAM,QAAQtS,MAAM,MACrB,CAACsS,MAAM,SAAStS,MAAM,MACtB,CAACsS,MAAM,UAAUtS,MAAM,MACvB,CAACsS,MAAO,SAAStS,MAAO,MACxB,CAACsS,MAAO,MAAMtS,MAAO,MACrB,CAACsS,MAAO,QAAQtS,MAAO,MACvB,CAACsS,MAAO,UAAUtS,MAAO,MACzB,CAACsS,MAAO,aAAatS,MAAO,MAC5B,CAACsS,MAAO,gBAAgBtS,MAAO,MAC/B,CAACsS,MAAO,aAAatS,MAAO,MAC5B,CAACsS,MAAM,WAAWtS,MAAO,MACzB,CAACsS,MAAM,QAAQtS,MAAO,MACtB,CAACsS,MAAM,YAAYtS,MAAO,MAC1B,CAACsS,MAAO,UAAUtS,MAAO,MACzB,CAACsS,MAAM,QAAQtS,MAAO,MACtB,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,YAAYtS,MAAO,MAC1B,CAACsS,MAAM,oBAAoBtS,MAAO,MAClC,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAM,YAAYtS,MAAO,MAC1B,CAACsS,MAAM,OAAOtS,MAAO,MACrB,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAM,aAAatS,MAAO,MAC3B,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAO,WAAYtS,MAAM,MAC1B,CAACsS,MAAO,UAAWtS,MAAM,MACzB,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAM,eAAetS,MAAO,MAC7B,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,QAAQtS,MAAO,MACtB,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAM,YAAatS,MAAM,MAC1B,CAACsS,MAAM,SAAUtS,MAAM,MACvB,CAACsS,MAAM,UAAWtS,MAAM,MACxB,CAACsS,MAAM,YAAYtS,MAAO,MAC1B,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,QAAQtS,MAAO,MACtB,CAACsS,MAAM,QAAQtS,MAAO,MACtB,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAM,OAAOtS,MAAO,MACrB,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAO,YAAatS,MAAM,MAC3B,CAACsS,MAAM,OAAOtS,MAAO,MACrB,CAACsS,MAAO,SAAUtS,MAAM,MACxB,CAACsS,MAAM,QAAStS,MAAM,MACtB,CAACsS,MAAM,aAAatS,MAAO,MAC3B,CAACsS,MAAO,QAAStS,MAAM,MACvB,CAACsS,MAAM,QAAQtS,MAAO,MACtB,CAACsS,MAAO,UAAWtS,MAAM,MACzB,CAACsS,MAAM,SAAUtS,MAAM,MACvB,CAACsS,MAAM,OAAOtS,MAAO,OA/GY,EAkHHiE,mBAAS,CACrCmS,IAAK,0FACLC,SAAS,GACTvW,MAAM,GACNkR,aAAc,GACdC,WAAW,GACXqF,YAAY,GACZlF,SAAS,IAzHsB,mBAkHxBC,EAlHwB,KAkHhBC,EAlHgB,KA2HzB8E,EAAsE/E,EAAtE+E,IAAIC,EAAkEhF,EAAlEgF,SAASvW,EAAyDuR,EAAzDvR,MAAOmR,EAAkDI,EAAlDJ,WAAYD,EAAsCK,EAAtCL,aAAasF,EAAyBjF,EAAzBiF,YAAalF,EAAYC,EAAZD,QACpExM,qBAAU,WACF,IAAI9E,EAAQ8U,EAAM9S,OAAOhC,MACtBA,GACCwR,EAAU,2BAAID,GAAL,IAAavR,aAE3B,IAEP,IAAMyW,EAAa,SAACC,GAAD,OAAU,IAAIpV,SAAQ,SAAAC,GACrCoV,KAAQC,iBAAiBF,EAAM,IAAK,IAAK,OAAQ,IAAK,GACtD,SAAAG,GAAQtV,EAAQsV,KAAO,cAErBC,EAAW1J,IAAM2J,aAAY,WAChC,IACG,IAAMC,EAAWd,EAAUhR,QAAQ+R,gBAClCzF,EAAU,2BAAID,GAAL,IAAaiF,YAAa,sBACnC,IAAM7U,EAAO,IAAIuV,SAClBvV,EAAKwV,OAAO,OAAQH,GACpBlW,IAAMmB,KAAK,8CAA8CN,GACrDF,KADJ,iCAAAgP,EAAA,MACS,WAAOC,GAAP,UAAAD,EAAA,sDACLe,EAAU,2BAAKD,GAAN,IAAeL,aAAc,GAAIC,WAAWT,EAAS/O,KAAK0Q,kBAClEb,EAAU,2BAAID,GAAL,IAAaiF,YAAa,iBACnC7U,EAAKwV,OAAO,OAAQH,GACpBrV,EAAKwV,OAAO,gBAAiB,WAC9BC,MAAM,wDACF,CAAEC,OAAQ,OACRC,KAAM3V,IACLF,MAAK,SAAAiP,GAAQ,OAAIA,EAAS6G,UACpC9V,MAAK,SAAAE,GAAI,OAAM6P,EAAU,2BAAKD,GAAN,IAAe+E,IAAK3U,EAAKN,UACjDO,OAAM,SAAAC,GAAG,OAAIK,QAAQ2E,MAAM,SAAUhF,MAV7B,2CADT,uDAcL,MAAMA,GACD2P,EAAU,2BAAID,GAAL,IAAaL,aAAc,iCAGtC,CAACgF,IAEEsB,EAAW,yCAAG,WAAOC,GAAP,kBAAAhH,EAAA,sDACnB,IACeiH,EAAYD,EAAE9F,OAAOgG,MAAM,IAC3BhW,EAAO,IAAIuV,UACZC,OAAO,OAAQO,GACpB5W,IAAMmB,KAAK,yBAAyBN,GACrCF,KADC,iCAAAgP,EAAA,MACI,WAAOC,GAAP,oBAAAD,EAAA,6DACNe,EAAU,2BAAKD,GAAN,IAAeL,aAAc,GAAIC,WAAW,kCAD/C,SAE2BsF,EAAWiB,GAFtC,cAEGE,EAFH,OAGJpG,EAAU,2BAAID,GAAL,IAAaiF,YAAa,iBACnC7U,EAAKwV,OAAO,OAAQS,GACpBjW,EAAKwV,OAAO,gBAAiB,WALzB,SAMcC,MAAM,wDACrB,CAAEC,OAAQ,OACRC,KAAM3V,IARP,cAMED,EANF,iBAUgBA,EAAI6V,OAVpB,QAUEb,EAVF,OAWJlF,EAAU,2BAAKD,GAAN,IAAe+E,IAAKI,EAAKmB,cAX9B,4CADJ,uDAcFjW,OAAM,SAACC,GACJ2P,EAAU,2BAAKD,GAAN,IAAeL,aAAarP,EAAI6O,SAAS/O,KAAKuP,mBAGlE,MAAMrP,GACD2P,EAAU,2BAAID,GAAL,IAAaL,aAAc,8BAxBrB,2CAAH,sDA0BZ4G,EAAY,WAChBvN,EAAeI,aAAa,CAAC3C,WAAYsO,EAAKyB,eAAgBxB,EAAUvW,UACxEyB,MAAK,SAACiP,GACEc,EAAU,2BACLD,GADI,IAEP+E,IAAK,0FACLC,SAAS,GACTrF,cAAc,EACdC,WAAYT,EAAS2B,eACrBf,SAAS,QAGX1P,OAAM,SAACC,GACN2P,EAAU,2BAAKD,GAAN,IAAeL,aAAarP,EAAI6O,SAAS/O,KAAKuP,oBA2GlE,OAAQ,gCAEHI,GAAW,cAACpE,GAAD,IACX,cAAC,EAAD,CAAW7E,KAAO,kBAChB6I,GACC,cAAC,GAAD,CAAU/H,KAAK,QAAQkG,QAAS6B,EAAclK,UAAW,MAEzDwP,GACA,cAAC,GAAD,CAAUrN,KAAK,OAAOkG,QAASmH,EAAaxP,UAAW,MAExDmK,GACC,cAAC,GAAD,CAAUhI,KAAK,UAAUkG,QAAS8B,EAAYnK,UAAW,OAjH/D,sBAAKwB,UAAU,eAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,aAAf,SACG,qBAAKI,IAAK0N,EAAK9N,UAAU,kBAEzB,uBAAOW,KAAK,OAAO6O,OAAO,UAAU3P,KAAK,eAAexF,GAAG,QAAQ8P,SAAU6E,IAC7E,qBAAKhP,UAAU,QAAf,SACM,wBAAOA,UAAU,eAAe2K,QAAQ,QAAxC,UACb,mBAAG3K,UAAU,iBAAb,iCADa,4BAKF,qBAAKA,UAAU,QAAf,SACJ,yBAAQA,UAAU,sBAAuBY,cAAY,QAAQC,cAAY,sBAAsBO,QAAS,kBAAIwM,GAAe,IAA3H,UACE,mBAAG5N,UAAU,iBAAiBE,MAAQ,CAACgB,YAAY,UAAnD,0BADF,kBAIC,cAAC,KAAD,CACMhB,MAAO,CAAEK,MAAO,IAAKyD,QAAS,UAC9ByL,YAAY,sBACZ/X,MAAOmW,EAAQ6B,MAAK,SAAA1S,GAAC,OAAIA,EAAEgN,QAAU+D,KACrC/N,UAAW2E,EAAQyD,UACnByF,QAASA,EACT1D,SAAU,SAAC8E,GACTvV,QAAQC,IAAIsV,GACZjG,EAAU,2BACLD,GADI,IAEPgF,SAASkB,EAAEvX,YAKhB,cAACqM,EAAA,EAAD,CACN7D,MAAO,CAAEkD,MAAOmH,KAAK,IACpBtG,gBAAgBsH,KAAK,KACrBtB,WAAW,OACXzJ,aAAa,SACbyC,UAAW,SACXe,QAAS,UAEXhE,UAAW,WACXgD,QAAQ,YACRkB,WAAS,EACT9C,QAASkO,EAXF,yBAgBC3G,GAAe,cAAC5E,EAAA,EAAD,CACd7D,MAAO,CACP+D,gBAAgBsG,KAAK,KAC5BN,WAAW,OACXzJ,aAAa,OACbyC,UAAW,SACXe,QAAS,UAEXhE,UAAW,WACXgD,QAAQ,UACRkB,WAAS,EACT9C,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,WAXT,sBAqBnC,qBAAKC,UAAU,aAAa3F,GAAG,qBAAqBsV,SAAS,KAAK1O,KAAK,SAAS2O,kBAAgB,0BAA0BzO,cAAY,OAAtI,SACE,qBAAKnB,UAAU,qCAAqCiB,KAAK,WAAzD,SACE,sBAAKjB,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAc3F,GAAG,wBAA/B,wBACA,wBAAQsG,KAAK,SAASX,UAAU,QAAQ6P,eAAa,QAAQ7O,aAAW,QAAxE,SACE,sBAAMG,cAAY,OAAlB,uBAGJ,qBAAKnB,UAAU,aAAf,SACE,qBAAMA,UAAU,mBAAhB,SACC,cAAC,KAAD,CACD8P,OAAO,EACPxP,OAAS,IACVC,MAAQ,IACPwP,IAAKrC,EACLsC,iBAAiB,mBAIhBrC,EAAe,qBAAK3N,UAAU,eAAf,SAChB,wBAAQW,KAAK,SAASsP,MAAM,oBAAoBJ,eAAa,QAA7D,qBAEC,sBAAK7P,UAAU,eAAf,UACD,yBAASA,UAAU,sBAAsBoB,QAAUkN,EAAnD,UACE,mBAAGtO,UAAU,iBAAiBE,MAAQ,CAACgB,YAAY,UAAnD,0BADF,mBADC,qB,oBCvNMgP,GAnGO,SAACtE,GAAW,IACtBuE,EAAYvE,EAAZuE,QACF/T,EAAS,IAAI+T,EAAQ9Q,IAEvB+Q,GADUnR,cACDhI,KAAKC,MAAMC,aAAaC,QAAQ,UAJhB,EAKCuE,oBAASyU,EAASC,aAAaC,SAASH,EAAQ9Q,MALjD,mBAKtBkR,EALsB,KAKVC,EALU,KAMrBtU,EAAiBuD,qBAAWnE,GAA5BY,aAEFkD,EAAKnH,IAAkBoH,IACvBoR,EAAQxY,IAAkBiH,UAAY,IAAKjH,IAAkBkH,SAC7DI,EAActH,IAAkBuH,WAChCF,EAASrH,IAAkBsB,MAC3BmX,EAAUzY,IAAkBsQ,OAC5BoI,EAAkB1Y,IAAkBsX,eAmD1C,OACI,8BACD,cAACzF,GAAA,EAAD,CAAO5J,MAAO,CAAC8D,QAAS,YAAaR,aAAa,QAAlD,SAEK,eAAChB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACK,eAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGG,GAAI,EAAtB,eAA2B,qBAAK1C,IAAK+P,EAAQ3Q,WACpDU,MAAO,CAAEI,OAAQ,OAAQC,MAAO,OAAQC,aAAc,MAAOC,QAAQ,UAAYJ,IAAI,QAD9E,OAED,cAACmC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGG,GAAI,EAAtB,SAEH,sBAAK5C,MAAO,CAACO,QAAQ,UAArB,UAAgC,mBAAIT,UAAU,aAAd,SAA+BmQ,EAAQjR,UAAY,IAAKiR,EAAQhR,WAC9F,cAAC4D,EAAA,EAAD,CAAY7C,MAAO,CAACkD,MAAM,OAAS8G,UAAW,SAAW/G,SAAS,UAAlE,SAA+EgN,EAAQ5W,aAGvF,cAACqX,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,MAArB,SACI,cAACrO,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,MACnB,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGG,GAAI,EAAtB,SACNyN,EACA,cAACxM,EAAA,EAAD,CAAQ/D,UAAW,WACfE,MAAO,CAAC+C,UAAU,SAASgB,gBAAgB6M,KAAU,KAAK1N,MAAM,SACjEJ,QAAQ,YACR5B,QAtEgB,WACpB1H,QAAQC,IAAI,aAAawW,EAAQ9Q,KACjCvF,EAAcC,YACV,CAACgX,SAASZ,EAAQ9Q,IAClBD,OAAKqR,SAAOlR,eAAaD,UAAQoR,WAASC,qBAC5C1X,MAAK,SAACE,GACLhC,aAAaW,QAAQ,OAAOb,KAAKc,UAAUoB,IAEzCqX,GAAU,MAGbpX,OAAM,SAACC,GAASK,QAAQC,IAAIN,MAE7B6C,EAAaiC,KACV,gBACA,CAAEsS,SAAOrU,WACT,SAAC/C,GACMA,EACAK,QAAQC,IAAIN,GADPK,QAAQC,IAAI,qBAkD3B,wBAKD,cAACoK,EAAA,EAAD,CAAQ/D,UAAW,WACbE,MAAO,CAAC+C,UAAU,SAASgB,gBAAgBsG,KAAK,KAAKnH,MAAM,SAC7DJ,QAAQ,YACR5B,QApDmB,WAEvBtH,EAAcE,cACV,CAAC+W,SAASZ,EAAQ9Q,IAAID,SACxBnG,MAAK,SAACE,GACHhC,aAAaW,QAAQ,OAAOb,KAAKc,UAAUoB,IAE3CqX,GAAU,MAGbpX,OAAM,SAACC,GAASK,QAAQC,IAAIN,MAE7B6C,EAAaiC,KACV,sBACA,CAAEsS,SAAOrU,WACT,SAAC/C,GACMA,EACAK,QAAQC,IAAIN,GADPK,QAAQC,IAAI,qBAiC5B,iCCtFOqX,GADM,I,4MAJnBC,cAAgB,kBAAM,EAAK/Y,IAAI,wB,EAC/BgZ,iBAAmB,SAAC7W,GAAD,OAAQ,EAAKnC,IAAI,wBAA0BmC,I,YAHnCzB,I,oBCuFbkG,gBAlFA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACdA,EAAUE,cAET,IAAMG,EAAOnH,IAAkBoH,IACzBE,EAActH,IAAkBuH,WAEtCN,EAAWjH,IAAkBiH,UAC3BC,EAAWlH,IAAkBkH,SAPJ,EAQoEM,qBAAWnE,GAAnE2C,GARZ,EAQxB/B,aARwB,EAQXC,UARW,EAQD6B,aARC,EAQYC,UAAmBQ,GAR/B,EAQqBF,UARrB,EAQ+BE,YAAW3C,EAR1C,EAQ0CA,YAAY6C,EARtD,EAQsDA,WAanF,OAPFrC,qBAAU,WACRmC,MACA,CAAC3C,IACAQ,qBAAW,WACZ2B,EAASmB,KACT,IAEQ,qBAAK6Q,MAAM,UAAX,SACR,sBAAKA,MAAM,UAAX,UACK,qBAAK5V,GAAI,cAAT,SACD,qBACE+F,IAAMb,EACNc,IAAI,UACJH,MAAO,CAAEI,OAAQ,OAAQC,MAAO,OAAQC,aAAc,MAAO2Q,OAAO,WACrE/P,QAAS,kBAAIrC,EAAQgB,KAAK,4BAA4BX,QAGtD,6BAAKF,EAAW,IAAIC,IACrB,+BAEI,6BAEMR,GAAc,EACf,eAAC,IAAD,CAAM7D,GAAI,CAACmF,SAAU,YAAYb,GAAOc,MAAO,CAACC,eAAe,QAA/D,UACI,mBAAG8P,MAAM,kBAAT,SAA6B,sBAAMjQ,UAAU,gBAAhB,SAAiCrB,MADlE,eAGE,eAAC,IAAD,CAAM7D,GAAI,CAACmF,SAAU,YAAYb,GAAOc,MAAO,CAACC,eAAe,QAA/D,UACE,mBAAG8P,MAAM,oBADX,iBAKP,6BACI,eAAC,IAAD,CAAMnV,GAAI,CAACmF,SAAS,4BAAD,OAA8Bb,IAASc,MAAO,CAACC,eAAe,QAAjF,UACK,mBAAG8P,MAAM,oBADd,wBAIJ,6BACGnU,GAAc,EACd,eAAC,IAAD,CAAMhB,GAAI,CAACmF,SAAU,oBAAoBb,GAAOc,MAAO,CAACC,eAAe,QAAvE,UACM,mBAAG8P,MAAM,sBAAT,SAAiC,sBAAMjQ,UAAU,gBAAhB,SAAiClE,MADxE,eAIC,eAAC,IAAD,CAAMhB,GAAI,CAACmF,SAAU,oBAAoBb,GAAOc,MAAO,CAACC,eAAe,QAAvE,UACK,mBAAG8P,MAAM,wBADd,oBAOR,qBAAKA,MAAM,eAAX,SACA,yBACYjQ,UAAU,oCACVoB,QAzDM,SAACzB,GACvBxH,GAAO,WACL4G,EAAQgB,KAAK,cAqDX,UAIY,mBAAGC,UAAU,wBAJzB,uBCkFOoR,GAxII,SAACxF,GAChB,IAAMxM,EAAKnH,IAAkBoH,IACzBsE,EAAY1L,IAAkBsB,MAFR,EAGAoC,oBAAS,GAHT,mBAGpBmN,EAHoB,KAGZuI,EAHY,QAIZpS,cACuBtD,mBAAS,KALpB,mBAKlB2V,EALkB,KAKNC,EALM,OAQM3M,IAAMjJ,SAAS,IARrB,mBAQnB6V,EARmB,KAQTC,EARS,KAStBrV,EAASC,mBACTuH,EAAgBvH,mBACpBD,EAAOM,QAAU,IAAIkP,EAAMU,MAAM9S,OAAOa,GAXd,MAYwCoF,qBAAWnE,GAAzDa,GAZM,EAYnBD,aAZmB,EAYNC,WAAU8B,EAZJ,EAYIA,SAASD,EAZb,EAYaA,aAAcO,EAZ3B,EAY2BA,UACrDkD,OAAOC,OAAS,WACbnD,IACDP,IACA,IAAIE,EAAMjH,KAAKC,MAAMC,aAAaC,QAAQ,SAASiI,IACnDpB,EAASC,GACT0F,EAAgBpH,IAAG/D,0BACnB0D,GAAU,SAAC0H,GAOT,OANAA,EAAID,GACFzG,GAAG,WAAY,WACfzD,QAAQC,IAAI,YAAYkK,EAAExJ,IAC1BwJ,EAAE1F,KAAK,UAAU,CAAC9D,GAAGwJ,EAAExJ,GAAIwF,KAAM8D,OAG5BE,MA8BX,OAXDvH,qBAAU,WAdVxC,EAAcQ,qBAAqB8E,GAClCnG,MAAK,SAACE,GACJhC,aAAaW,QAAQ,OAAOb,KAAKc,UAAUoB,OAC7CC,OAAO,SAAAC,GAAMK,QAAQC,IAAIN,MAIzB2X,GAAeE,iBAAiB9R,GAC/BnG,MAAK,SAACE,GAAWsY,EAAYtY,GAC5BkY,GAAW,MAEZjY,OAAM,SAACC,GAASK,QAAQC,IAAIN,QAM7B,IAEDiD,qBAAU,cAGR,IAIC,qBAAK4D,MAAO,CAACI,OAAO,SAAUN,UAAU,YAAxC,SACC,eAACwC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACA,cAACmO,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,MAArB,SACG,cAACrO,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,EAAGG,GAAI,EAAvB,SAA0B,cAAC,GAAD,QAExB,cAAC8N,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,MAArB,SACF,cAACrO,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SAAoB,cAAC,EAAD,CAAQ3D,SAAU4M,EAAM5M,eAE3C,eAACwD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIG,GAAI,GAAvB,UACL,cAAC,EAAD,CAAWjD,KAAO,eACjBiJ,EACD,8BACoB,IAApB0I,EAASzT,OACL,qBAAKmC,MAAQ,CAACgD,UAAW,SAAUC,SAAS,SAClDa,QAAS,OAAQiG,WAAW,QADtB,+CAGD,8BAEG,eAACzH,EAAA,EAAD,CAAMC,WAAS,EAAEvC,MAAO,CAAC+C,UAAU,UAAnC,UACF,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,EAAGG,GAAI,EAAvB,eACA,eAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,GAAIG,GAAI,GAAxB,UACE,eAACN,EAAA,EAAD,CAAMC,WAAS,EAAGvC,MAAO,CAACsD,aAAa,QAAvC,UACF,cAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,EAAGG,GAAI,EAAvB,eACA,cAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,GAAIG,GAAI,EAAxB,SACE,cAACiH,GAAA,EAAD,CACIrS,MAAO4Z,EACPnH,SA7EW,SAAChG,GAAD,OACnBoN,EAAcpN,EAAMuN,cAAcha,QA6E1B+X,YAAY,wBAEpBrF,WAAY,CACVC,eACE,cAACC,GAAA,EAAD,CAAgB7M,SAAS,MAAzB,SACC,cAAC,KAAD,CAAYyC,MAAO,CAAEkD,MAAO,QAASlC,YAAY,SAASyQ,MAAM,qBAQhEH,EAASI,QAAO,SAACzB,GACjB,MAAkB,KAAfmB,GACMnB,EAAQjR,UAAU2S,cAAcC,WAAWR,EAAWO,gBAAkB1B,EAAQhR,SAAS0S,cAAcC,WAAWR,EAAWO,eADzG1B,OACxB,KAEJ4B,KAAI,SAAC5B,EAAS6B,GACd,OAAO7B,EAAQ9Q,MAAQD,EACvB,wBACA,cAAC,GAAD,CAA2B+Q,QAASA,EAAU/T,OAAQA,EAAOM,SAAzCsV,SAMxB,cAACxP,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAKG,GAAI,WAQ3B,sBAAKmN,MAAM,gCAAX,UACE,wBAAQ/P,MAAO,CAACgB,YAAY,QAA5B,wBACP,qBAAK+O,MAAM,iBAAiBhP,KAAK,uBCpEpBgR,GAhEa,SAACrG,GAAW,IAC9BsG,EAA6BtG,EAA7BsG,UAAWC,EAAkBvG,EAAlBuG,eACb/S,EAAKnH,IAAkBoH,IACvBoR,EAAQxY,IAAkBiH,UAAY,IAAKjH,IAAkBkH,SAC7DI,EAActH,IAAkBuH,WAChCF,EAAUrH,IAAkBsB,MAC5BmX,EAAUzY,IAAkBsQ,OAC5BoI,EAAkB1Y,IAAkBsX,eA4B1C,OACI,8BACH,cAACzF,GAAA,EAAD,CAAO5J,MAAO,CAAC8D,QAAQ,YAAaR,aAAa,QAAjD,SACG,eAAChB,EAAA,EAAD,CAAMC,WAAS,EAACvC,MAAO,CAACO,QAAQ,QAAhC,UACK,eAAC+B,EAAA,EAAD,CAAME,MAAI,EAAIC,GAAK,GAAIC,GAAI,GAAIE,GAAI,EAAnC,UACE,qBAAK1C,IAAK8R,EAAU1S,WACnBU,MAAO,CAAEgB,YAAY,SAASZ,OAAQ,OAAQC,MAAO,OAAOC,aAAc,MAAMC,QAAQ,SAASuD,QAAQ,UAAY3D,IAAI,QACzH,mBAAIL,UAAU,aAAd,SAA6BkS,EAAUrS,UAE1C,eAAC2C,EAAA,EAAD,CAAME,MAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIE,GAAI,EAAjC,UACE,cAACiB,EAAA,EAAD,CAAQ/D,UAAW,WACtBE,MAAO,CAAE+D,gBAAgB6M,KAAU,KAAK1N,MAAM,QAAQiF,OAAO,UAC/DrF,QAAQ,YACRoP,KAAK,SACLhR,QAhCuB,WAC1BtH,EAAcG,cAAc,CAC5B8W,SAAUmB,EAAU7X,GACpBgY,WAAWH,EAAUrS,KACrByS,iBAAiBJ,EAAU1S,WAC1B+S,OAAOL,EAAU3Y,MAAO,IAAI+F,EAC5BkT,YAAYN,EAAU3Y,MACtBkZ,aAAaP,EAAU3J,OACvBmK,qBAAqBR,EAAU3C,eAC/BnQ,OAAKqR,SAAOlR,eAAaD,UAAQoR,WAASC,qBACzC1X,MAAK,SAACE,GACNgZ,IACEhb,aAAaW,QAAQ,OAAOb,KAAKc,UAAUoB,IAC3CO,QAAQC,IAAIR,MAEfC,OAAM,SAACC,GAASK,QAAQC,IAAIN,OAarB,oBAML,cAAC0K,EAAA,EAAD,CAAQ/D,UAAW,WAClBE,MAAO,CAAG+D,gBAAgBsG,KAAK,KAAKnH,MAAM,SAC3CJ,QAAQ,YACR5B,QA9CqB,WACxBtH,EAAcI,cAAc,CAAC6W,SAAUmB,EAAU7X,GAAI+E,SACnDnG,MAAK,SAACE,GACNgZ,IACEhb,aAAaW,QAAQ,OAAOb,KAAKc,UAAUoB,OAE9CC,OAAM,SAACC,GAASK,QAAQC,IAAIN,OAqC1B,+BCgGOsZ,GAxIU,SAAC/G,GACrB,IAAMxM,EAAKnH,IAAkBoH,IADE,EAEKuF,IAAMjJ,SAAS,IAFpB,mBAExBiX,EAFwB,KAEZC,EAFY,OAGMlX,mBAAS,IAHf,mBAGvB2V,EAHuB,KAGXC,EAHW,OAIJ5V,oBAAS,GAJL,mBAIxBmN,EAJwB,KAIhBuI,EAJgB,KAO3BzN,EAAgBvH,mBAChBsH,EAAY1L,IAAkBsB,MARH,EASoDkG,qBAAWnE,GAAvFa,EATwB,EASxBA,UAAU8B,EATc,EASdA,SAASD,EATK,EASLA,aAAaO,EATR,EASQA,UAAUE,EATlB,EASkBA,WAAWC,EAT7B,EAS6BA,oBAC/CrC,mBACNK,QAAU,IAAIkP,EAAMU,MAAM9S,OAAOa,GAC1B4E,cAEdwC,OAAOC,OAAS,WACbnD,IACDP,IACAS,IACD,IAAIP,EAAMjH,KAAKC,MAAMC,aAAaC,QAAQ,SAASiI,IACnDpB,EAASC,GACT0F,EAAgBpH,IAAG/D,0BACnB0D,GAAU,SAAC0H,GAOT,OANAA,EAAID,GACFzG,GAAG,WAAY,WACfzD,QAAQC,IAAI,YAAYkK,EAAExJ,IAC1BwJ,EAAE1F,KAAK,UAAU,CAAC9D,GAAGwJ,EAAExJ,GAAIwF,KAAM8D,EAAUjH,aAGtCmH,MAIV,IAAMzJ,EAAmB,WAExBN,EAAcM,iBAAiBgF,GAAMnG,MAAK,SAACE,GACjC0Z,EAAe1Z,GACfkY,GAAW,GACX3S,OAEHtF,OAAO,SAAAC,GAAMK,QAAQC,IAAIN,OAyBjC,OAvBDiD,oBAAUlC,EAAmB,IAE7BkC,qBAAU,cAGP,IAmBD,qBAAM4D,MAAO,CAACI,OAAO,SAAUN,UAAU,YAAzC,SACA,eAACwC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACmO,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,MAArB,SACG,cAACrO,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,EAAGG,GAAI,EAAvB,SAA0B,cAAC,GAAD,QAExB,cAAC8N,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,MAArB,SACF,cAACrO,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SAAoB,cAAC,EAAD,CAAQ3D,SAAU4M,EAAM5M,eAE3C,eAACwD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIG,GAAI,GAAvB,UACL,cAAC,EAAD,CAAWjD,KAAO,oBACjBiJ,EACD,oCACsB,IAAtB8J,EAAW7U,OACP,qBAAKmC,MAAQ,CAACgD,UAAW,SAASC,SAAS,SACjDa,QAAS,OAAQiG,WAAW,QADtB,oDAIA,8BACF,eAACzH,EAAA,EAAD,CAAMC,WAAS,EAAGvC,MAAO,CAAC+C,UAAU,UAApC,UACE,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,EAAGG,GAAI,EAAvB,eACA,eAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,GAAIG,GAAI,GAAxB,UACE,eAACN,EAAA,EAAD,CAAMC,WAAS,EAAGvC,MAAO,CAACsD,aAAa,QAAvC,UACF,cAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,EAAGG,GAAI,EAAvB,eACA,cAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,GAAIG,GAAI,EAAxB,SACE,cAACiH,GAAA,EAAD,CACIrS,MAAO4Z,EACPnH,SAtFU,SAAChG,GAAD,OACnBoN,EAAcpN,EAAMuN,cAAcha,QAsFzB+X,YAAY,wBAEpBrF,WAAY,CACVC,eACE,cAACC,GAAA,EAAD,CAAgB7M,SAAS,MAAzB,SACC,cAAC,KAAD,CAAYyC,MAAO,CAAEkD,MAAO,QAASlC,YAAY,SAASyQ,MAAM,qBASnEiB,EAAWhB,QAAO,SAACM,GAChB,MAAiB,IAAdZ,GACMY,EAAUrS,KAAKgS,cAAcC,WAAWR,EAAWO,eADhCK,OACvB,KAEJH,KAAI,SAACG,EAAWF,GAAZ,OACH,cAAC,GAAD,CAAiCE,UAAWA,EAAWC,eAAgB/X,GAA7C4X,SAI/B,cAACxP,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAKG,GAAI,aAO3B,sBAAKmN,MAAM,gCAAX,UACE,wBAAQ/P,MAAO,CAACgB,YAAY,QAA5B,wBACP,qBAAK+O,MAAM,iBAAiBhP,KAAK,uB,UC7ErB6R,GAxDM,SAAClH,GAAW,IACrBmH,EAA6BnH,EAA7BmH,OAAQC,EAAqBpH,EAArBoH,SAAUC,EAAWrH,EAAXqH,QAC1BvZ,QAAQC,IAAIsZ,GACZ,IAAM7T,EAAKnH,IAAkBoH,IAEvBmT,EAAeO,EAAOxZ,MAmBxBwF,EAAUE,cACd,OACG,cAAC6K,GAAA,EAAD,CAAO5J,MAAO,CAAC8D,QAAU,YAAaR,aAAa,QAAnD,SACE,eAAChB,EAAA,EAAD,CAAMC,WAAS,EAACvC,MAAO,CAACO,QAAQ,QAAhC,UACE,eAAC+B,EAAA,EAAD,CAAME,MAAI,EAAIC,GAAK,GAAIC,GAAI,GAAIE,GAAI,EAAnC,UACA,qBAAK1C,IAAK2S,EAAOvT,WAClBU,MAAO,CAAGgB,YAAY,SAASZ,OAAQ,OAAQC,MAAO,OAAQC,aAAc,MAAMC,QAAQ,SAASuD,QAAQ,UAAY3D,IAAI,QACvH,mBAAKL,UAAU,aAAf,SAA+B+S,EAAOlT,UAEzC,eAAC2C,EAAA,EAAD,CAAME,MAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIE,GAAI,EAAjC,UACE,cAACiB,EAAA,EAAD,CAAQ/D,UAAW,WAClBE,MAAO,CAAE+D,gBAAgBiP,KAAW,KAAK9P,MAAM,QAAQiF,OAAO,UAChErF,QAAQ,YACRoP,KAAK,SACLhR,QAAS,kBAvBU+R,EAuBaJ,EAtBtCrZ,QAAQC,IAAI,KAAKwZ,GACjBzZ,QAAQC,IAAI,MAAM,SAAS6Y,EAAY,KAAKW,EAAG9Y,IAC/ClD,aAAaW,QAAQ,WAAWqb,EAAG9Y,IACnClD,aAAaW,QAAQ,UAAUqb,EAAGtT,MAClC1I,aAAaW,QAAQ,UAAUqb,EAAG5D,gBAClCpY,aAAaW,QAAQ,aAAaqb,EAAG3T,iBACrCT,EAAQgB,KAAK,SAASyS,EAAY,IAAIW,EAAG9Y,IAPjB,IAAC8Y,GAmBlB,kBAOD,cAACpP,EAAA,EAAD,CAAQ/D,UAAW,WAClBE,MAAO,CAAG+D,gBAAgB2I,KAAI,KAAKxJ,MAAM,SAC1CJ,QAAQ,YACP5B,QAtCY,WAChBtH,EAAcK,aAAa,CAAC4W,SAAUgC,EAAO1Y,GAAI+E,SAC/CnG,MAAK,SAACE,GAEN6Z,IACE7b,aAAaW,QAAQ,OAAOb,KAAKc,UAAUoB,OAE9CC,OAAM,SAACC,GAASK,QAAQC,IAAIN,OA4B1B,6BC/BG+Z,GADG,I,4MAZdC,SAAW,WACP,OAAO,EAAKnb,IAAI,U,EAEpBob,eAAiB,SAACna,GACd,OAAO,EAAKM,KAAK,oBAAoBN,I,EAEzCoa,mBAAqB,SAAClZ,GAClB,OAAO,EAAKnC,IAAI,yBAAyBmC,I,YATvBzB,ICIb4a,GAAiBjY,0BACvB,SAASkY,GAAT,GAA6C,IAAnBzY,EAAkB,EAAlBA,OAAOU,EAAW,EAAXA,SAAW,EACJC,mBAAS,IADL,mBACxC+X,EADwC,KACzBC,EADyB,KAE3CC,EAAU,GACVC,EAAU,GACVC,EAAU,GACVC,EAAU,GACVC,EAAM,GACNC,EAAQ,GACZ3X,qBAAU,gBAEQsD,IAAX5E,GACHkZ,EAAWlZ,OAAO4E,GAGlBlG,QAAQC,IAAI,eAEd,CAACqB,IAEH,IAAMkZ,EAAa,SAACC,GA0DZ,OAzDHP,EAAU,GAAIG,EAAS,GAAIF,EAAU,GAAIC,EAAU,GAAIG,EAAO,GAAID,EAAM,GAEzEvZ,EAAYQ,kBAAkBkZ,GAAKlb,MAAK,SAACE,GAClCA,EAAK4E,OAAO,GAIX5E,EAAK4Y,KAAI,SAACqC,GAEN,OAAOR,EAAQ7T,KAAKqU,MAExB1a,QAAQC,IAAI,WAAWia,GACvBA,EAAUS,MAAMxZ,KAAK,IAAIyZ,IAAIV,IAC7Bla,QAAQC,IAAI,mBAAmBia,GAC/BD,GAAkB,SAACY,GAGf,OAFAA,EAAEC,MAAMZ,EAEDW,KAEXb,EAAec,MAAMzC,KAAI,SAACwC,GAEtB9Z,EAAYS,WAAWiZ,EAAKI,GAC3Btb,MAAK,SAACwb,GAEHZ,EAAQ9T,KAAK0U,EAAMC,SACnBZ,EAAQ/T,KAAK0U,EAAM9T,SAGtBvH,OAAM,SAACC,GAAD,OAAOK,QAAQC,IAAIN,MAE1B+Z,GAAYE,eAAeiB,GAAGtb,MAAK,SAAC0b,GAEhCX,EAAMjU,KAAK4U,EAAM,GAAGtV,KACpB4U,EAAOlU,KAAK4U,EAAM,GAAGnV,YACrBuU,EAAQhU,KAAK4U,EAAM,GAAGzV,UAAU,IAAIyV,EAAM,GAAGxV,UAC7CwU,GAAkB,SAACY,GAOf,OANAA,EAAEG,QAAUb,EACZU,EAAET,QAAUA,EACZS,EAAEP,MAAQA,EACVO,EAAEN,OAAQA,EACVM,EAAE1U,KAAOkU,EACTra,QAAQC,IAAI+Z,GACLa,QAMZnb,OAAM,SAACC,GAAD,OAAOK,QAAQC,IAAIN,UAKhCK,QAAQC,IAAI,cAGfP,OAAM,SAACC,GAAD,OAAOK,QAAQC,IAAIN,MACnBqa,GAOXhc,EAAQ,CACVgc,eAAiBA,EACjBQ,WAAaA,EACbU,cAAgBjB,GAIpB,OACE,cAACH,GAAe3U,SAAhB,CAAyBnH,MAAOA,EAAhC,SACGgE,ICjFP,IA0HemZ,GA1HI,SAACjJ,GACf,IAAMxM,EAAKnH,IAAkBoH,IADJ,EAEIuF,IAAMjJ,SAAS,IAFnB,mBAElBmZ,EAFkB,KAETC,EAFS,OAGEpZ,oBAAS,GAHX,mBAGlBmN,EAHkB,KAGVuI,EAHU,QAIXpS,cACuBtD,mBAAS,KALrB,mBAKjB2V,EALiB,KAKLC,EALK,KAQrB3N,EAAgBvH,mBARK,EAS4CoD,qBAAWnE,GAA3Da,GATI,EASjBD,aATiB,EASJC,WAAU8B,EATN,EASMA,SAAUD,EAThB,EASgBA,aAAcO,EAT9B,EAS8BA,UACnDoF,EAAYtH,mBAChBsH,EAAUjH,QAAUzF,KAAKC,MAAMC,aAAaC,QAAQ,SAASmC,MAE7DkI,OAAOC,OAAS,WACZnD,IACFP,IACD,IAAIE,EAAMjH,KAAKC,MAAMC,aAAaC,QAAQ,SAASiI,IACnDpB,EAASC,GACT0F,EAAgBpH,IAAG/D,0BACnB0D,GAAU,SAAC0H,GAOT,OANAA,EAAID,GACFzG,GAAG,WAAY,WACfzD,QAAQC,IAAI,YAAYkK,EAAExJ,IAC1BwJ,EAAE1F,KAAK,UAAU,CAAC9D,GAAGwJ,EAAExJ,GAAIwF,KAAM8D,EAAUjH,aAGtCmH,MAIV,IAAMmR,EAAkB,WAEtBlb,EAAcS,cAAc6E,GAC1BnG,MAAK,SAACE,GACN4b,EAAW5b,GACXkY,GAAW,MAEbjY,OAAO,SAAAC,GAAMK,QAAQC,IAAIN,OAU3B,OAPDiD,qBAAU,WAER0Y,MAEC,IAID,qBAAK9U,MAAO,CAACI,OAAO,SAAUN,UAAU,YAAxC,SACA,eAACwC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACC,cAACmO,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,MAArB,SACG,cAACrO,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,EAAGG,GAAI,EAAvB,SAA0B,cAAC,GAAD,QAExB,cAAC8N,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,MAArB,SACF,cAACrO,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SAAoB,cAAC,EAAD,CAAQ3D,SAAU4M,EAAM5M,eAE3C,eAACwD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIG,GAAI,GAAvB,UACL,cAAC,EAAD,CAAWjD,KAAO,eACnBiJ,EACC,oCACmB,IAAnBgM,EAAQ/W,OACJ,qBAAKmC,MAAQ,CAACgD,UAAW,SAASC,SAAS,SACjDa,QAAS,OAAQiG,WAAW,QADtB,oDAIA,8BAEF,eAACzH,EAAA,EAAD,CAAMC,WAAS,EAAGvC,MAAO,CAAC+C,UAAU,SAAUxC,QAAS,QAAvD,UACE,cAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,EAAGG,GAAI,EAAvB,eACA,eAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,GAAIG,GAAI,GAAxB,UACE,eAACN,EAAA,EAAD,CAAMC,WAAS,EAAGvC,MAAO,CAACsD,aAAa,QAAvC,UACF,cAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,EAAGG,GAAI,EAAvB,eACA,cAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,GAAIG,GAAI,EAAxB,SACE,cAACiH,GAAA,EAAD,CACIrS,MAAO4Z,EACPnH,SArEW,SAAChG,GAAD,OACnBoN,EAAcpN,EAAMuN,cAAcha,QAqE1B+X,YAAY,wBAEpBrF,WAAY,CACVC,eACE,cAACC,GAAA,EAAD,CAAgB7M,SAAS,MAAzB,SACC,cAAC,KAAD,CAAYyC,MAAO,CAAEkD,MAAO,QAASlC,YAAY,SAASyQ,MAAM,qBASnEmD,EAAQlD,QAAO,SAACmB,GACb,MAAiB,IAAdzB,GACMyB,EAAOlT,KAAKgS,cAAcC,WAAWR,EAAWO,eAD7BkB,OACvB,KAEJhB,KAAI,SAACgB,EAAQf,GAAT,OACH,cAAC,GAAD,CAA0Be,OAAQA,EAAQC,SAAUgC,GAAjChD,SAIxB,cAACxP,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAKG,GAAI,YAO3B,sBAAKmN,MAAM,gCAAX,UACE,wBAAQ/P,MAAO,CAACgB,YAAY,QAA5B,wBACP,qBAAK+O,MAAM,iBAAiBhP,KAAK,uBC3G7BsD,GAAYC,aAAW,CAE3B4D,UAAW,CACTnF,UAAW,QAEbuK,UAAW,CACTvK,UAAW,YAoWAgS,GA9VY,SAAC,GAAgB,IAAfjW,EAAc,EAAdA,SACnB2F,EAAUJ,KACVnF,EAAKnH,IAAkBoH,IACzB8U,EAAMld,KAAKC,MAAMC,aAAaC,QAAQ,SAASmC,MAHZ,EAI2BkG,qBAAWnE,GAAzDa,GAJmB,EAIhCD,aAJgC,EAInBC,WAAU8B,EAJS,EAITA,SAASD,EAJA,EAIAA,aAAcO,EAJd,EAIcA,UACjDqF,EAAgBvH,mBACdqR,EAAY9I,IAAMvI,OAAO,MANQ,EAOHuI,IAAMjJ,UAAS,GAPZ,mBAOhCgS,EAPgC,KAOnBC,EAPmB,KAQrCC,EAAU,CACd,CAAE7D,MAAO,YAAYtS,MAAM,MAC3B,CAAEsS,MAAO,WAAWtS,MAAM,MAC1B,CAAEsS,MAAO,UAAUtS,MAAM,MACzB,CAAEsS,MAAO,SAAStS,MAAM,MACxB,CAAEsS,MAAO,WAAWtS,MAAM,MAC1B,CAAEsS,MAAO,cAActS,MAAM,MAC7B,CAAEsS,MAAO,SAAStS,MAAM,MACxB,CAAEsS,MAAO,aAAatS,MAAM,MAC5B,CAAEsS,MAAO,UAAUtS,MAAM,MACzB,CAAEsS,MAAO,UAAUtS,MAAM,MACzB,CAAEsS,MAAO,YAAYtS,MAAM,MAC3B,CAAEsS,MAAO,UAAUtS,MAAM,MACzB,CAAEsS,MAAO,UAAUtS,MAAM,OACzB,CAAEsS,MAAO,WAAWtS,MAAM,MAC1B,CAAEsS,MAAO,UAAUtS,MAAM,SACzB,CAAEsS,MAAO,WAAWtS,MAAM,MAC1B,CAAEsS,MAAO,WAAWtS,MAAM,MAC1B,CAAEsS,MAAO,QAAQtS,MAAM,MACvB,CAAEsS,MAAO,SAAStS,MAAM,MACxB,CAAEsS,MAAO,QAAQtS,MAAM,MACvB,CAAEsS,MAAO,UAAUtS,MAAM,MACzB,CAAEsS,MAAO,YAAYtS,MAAM,MAC3B,CAAEsS,MAAO,WAAWtS,MAAM,MAC1B,CAAEsS,MAAO,WAAWtS,MAAM,MAC1B,CAAEsS,MAAO,UAAUtS,MAAM,MACzB,CAAEsS,MAAO,SAAStS,MAAM,MACxB,CAAEsS,MAAO,SAAStS,MAAM,MACxB,CAACsS,MAAO,UAAUtS,MAAO,MACzB,CAACsS,MAAO,WAAWtS,MAAO,MAC1B,CAACsS,MAAO,WAAWtS,MAAO,MAC1B,CAACsS,MAAO,SAAStS,MAAO,MACxB,CAACsS,MAAO,QAAQtS,MAAO,MACvB,CAACsS,MAAO,WAAWtS,MAAO,MAC1B,CAACsS,MAAO,iBAAiBtS,MAAO,MAChC,CAACsS,MAAM,QAAQtS,MAAO,MACtB,CAACsS,MAAM,WAAWtS,MAAO,OACzB,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAO,QAAQtS,MAAO,MACvB,CAACsS,MAAM,QAAQtS,MAAO,OACtB,CAACsS,MAAM,YAAYtS,MAAO,MAC1B,CAACsS,MAAM,YAAYtS,MAAO,MAC1B,CAACsS,MAAM,OAAOtS,MAAO,MACrB,CAACsS,MAAM,aAAatS,MAAO,MAC3B,CAACsS,MAAM,QAAQtS,MAAO,MACtB,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,WAAWtS,MAAO,MACzB,CAACsS,MAAM,WAAWtS,MAAO,MACzB,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAM,QAAQtS,MAAM,MACrB,CAACsS,MAAM,SAAStS,MAAM,MACtB,CAACsS,MAAM,UAAUtS,MAAM,MACvB,CAACsS,MAAO,SAAStS,MAAO,MACxB,CAACsS,MAAO,MAAMtS,MAAO,MACrB,CAACsS,MAAO,QAAQtS,MAAO,MACvB,CAACsS,MAAO,UAAUtS,MAAO,MACzB,CAACsS,MAAO,aAAatS,MAAO,MAC5B,CAACsS,MAAO,gBAAgBtS,MAAO,MAC/B,CAACsS,MAAO,aAAatS,MAAO,MAC5B,CAACsS,MAAM,WAAWtS,MAAO,MACzB,CAACsS,MAAM,QAAQtS,MAAO,MACtB,CAACsS,MAAM,YAAYtS,MAAO,MAC1B,CAACsS,MAAO,UAAUtS,MAAO,MACzB,CAACsS,MAAM,QAAQtS,MAAO,MACtB,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,YAAYtS,MAAO,MAC1B,CAACsS,MAAM,oBAAoBtS,MAAO,MAClC,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAM,YAAYtS,MAAO,MAC1B,CAACsS,MAAM,OAAOtS,MAAO,MACrB,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAM,aAAatS,MAAO,MAC3B,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAO,WAAYtS,MAAM,MAC1B,CAACsS,MAAO,UAAWtS,MAAM,MACzB,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAM,eAAetS,MAAO,MAC7B,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,QAAQtS,MAAO,MACtB,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAM,YAAatS,MAAM,MAC1B,CAACsS,MAAM,SAAUtS,MAAM,MACvB,CAACsS,MAAM,UAAWtS,MAAM,MACxB,CAACsS,MAAM,YAAYtS,MAAO,MAC1B,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAM,QAAQtS,MAAO,MACtB,CAACsS,MAAM,QAAQtS,MAAO,MACtB,CAACsS,MAAM,SAAStS,MAAO,MACvB,CAACsS,MAAM,OAAOtS,MAAO,MACrB,CAACsS,MAAM,UAAUtS,MAAO,MACxB,CAACsS,MAAO,YAAatS,MAAM,MAC3B,CAACsS,MAAM,OAAOtS,MAAO,MACrB,CAACsS,MAAO,SAAUtS,MAAM,MACxB,CAACsS,MAAM,QAAStS,MAAM,MACtB,CAACsS,MAAM,aAAatS,MAAO,MAC3B,CAACsS,MAAO,QAAStS,MAAM,MACvB,CAACsS,MAAM,QAAQtS,MAAO,MACtB,CAACsS,MAAO,UAAWtS,MAAM,MACzB,CAACsS,MAAM,SAAUtS,MAAM,MACvB,CAACsS,MAAM,OAAOtS,MAAO,OAlHoB,EAsHXiE,mBAAS,CACrCmS,IAAK,GACLC,SAAS,GACTrF,aAAc,GACdC,WAAW,GACXqF,YAAY,GACZlF,SAAS,IA5H8B,mBAsHhCC,EAtHgC,KAsHxBC,EAtHwB,KA8HjC8E,EAAgE/E,EAAhE+E,IAAIC,EAA4DhF,EAA5DgF,SAAUpF,EAAkDI,EAAlDJ,WAAYD,EAAsCK,EAAtCL,aAAasF,EAAyBjF,EAAzBiF,YAAalF,EAAYC,EAAZD,QAE3DrH,OAAOC,OAAS,WACfnD,IACAP,IACA,IAAIE,EAAMjH,KAAKC,MAAMC,aAAaC,QAAQ,SAASiI,IACnDpB,EAASC,GACT0F,EAAgBpH,IAAG/D,0BACnB0D,GAAU,SAAC0H,GAMT,OALAA,EAAID,GACFzG,GAAG,WAAY,WACfzD,QAAQC,IAAI,YAAYkK,EAAExJ,IAC1BwJ,EAAE1F,KAAK,UAAU,CAAC9D,GAAGwJ,EAAExJ,GAAIwF,KAAMsU,OAE5BtQ,MAIZvH,qBAAU,WACNyF,EAAeM,aAAajD,GAAMnG,MAAK,SAACE,GACxC6P,EAAU,2BAAKD,GAAN,IAAe+E,IAAK3U,EAAKqG,WAAYuO,SAAS5U,EAAKoW,qBAC1DnW,OAAM,SAACC,GACH2P,EAAU,2BAAKD,GAAN,IAAeL,aAAarP,EAAI6O,SAAS/O,KAAKuP,qBAE7D,IAEL,IAAMuF,EAAa,SAACC,GAAD,OAAU,IAAIpV,SAAQ,SAAAC,GACrCoV,KAAQC,iBAAiBF,EAAM,IAAK,IAAK,OAAQ,IAAK,GACtD,SAAAG,GAAQtV,EAAQsV,KAAO,cAErBC,EAAW1J,IAAM2J,aAAY,WAChC,IACG,IAAMC,EAAWd,EAAUhR,QAAQ+R,gBAClCzF,EAAU,2BAAID,GAAL,IAAaiF,YAAa,sBACnCJ,GAAe,GACf,IAAMzU,EAAO,IAAIuV,SACjBvV,EAAKwV,OAAO,OAAQH,GACpBlW,IAAMmB,KAAK,8CAA8CN,GACtDF,KADH,iCAAAgP,EAAA,MACQ,WAAOC,GAAP,UAAAD,EAAA,sDACLe,EAAU,2BAAKD,GAAN,IAAeL,aAAc,GAAIC,WAAWT,EAAS/O,KAAK0Q,kBAClEb,EAAU,2BAAID,GAAL,IAAaiF,YAAa,kBACnC7U,EAAKwV,OAAO,OAAQH,GACpBrV,EAAKwV,OAAO,gBAAiB,WAC9BC,MAAM,wDACF,CAAEC,OAAQ,MACRC,KAAM3V,IACLF,MAAK,SAAAiP,GAAQ,OAAIA,EAAS6G,UACpC9V,MAAK,SAAAE,GAAI,OAAM6P,EAAU,2BAAKD,GAAN,IAAe+E,IAAK3U,EAAKN,UACjDO,OAAM,SAAAC,GAAG,OAAIK,QAAQ2E,MAAM,SAAUhF,MAV7B,2CADR,uDAeN,MAAMA,GACD2P,EAAU,2BAAID,GAAL,IAAaL,aAAc,iCAGtC,CAACgF,IAEEsB,EAAW,yCAAG,WAAOC,GAAP,kBAAAhH,EAAA,sDACnB,IACeiH,EAAYD,EAAE9F,OAAOgG,MAAM,IAC3BhW,EAAO,IAAIuV,UACZC,OAAO,OAAQO,GACpB5W,IAAMmB,KAAK,yBAAyBN,GACpCF,KADA,iCAAAgP,EAAA,MACK,WAAOC,GAAP,oBAAAD,EAAA,6DACLe,EAAU,2BAAKD,GAAN,IAAeL,aAAc,GAAIC,WAAWT,EAAS/O,KAAK0Q,kBAD9D,SAE0BoE,EAAWiB,GAFrC,cAEEE,EAFF,OAGLpG,EAAU,2BAAID,GAAL,IAAaiF,YAAa,iBACnC7U,EAAKwV,OAAO,OAAQS,GACpBjW,EAAKwV,OAAO,gBAAiB,WALxB,SAMaC,MAAM,wDACrB,CAAEC,OAAQ,MACRC,KAAM3V,IARN,cAMCD,EAND,iBAUeA,EAAI6V,OAVnB,QAUCb,EAVD,OAWLlF,EAAU,2BAAKD,GAAN,IAAe+E,IAAKI,EAAKmB,cAX7B,4CADL,uDAcFjW,OAAM,SAACC,GACJ2P,EAAU,2BAAKD,GAAN,IAAeL,aAAarP,EAAI6O,SAAS/O,KAAKuP,mBAGlE,MAAMrP,GACD2P,EAAU,2BAAID,GAAL,IAAaL,aAAc,8BAxBrB,2CAAH,sDA0BZwM,EAAe,WACnBnT,EAAeK,mBAAmBhD,EAAK,CAACI,WAAYsO,EAAKyB,eAAgBxB,IACzE9U,MAAK,SAACiP,GACE/Q,aAAaW,QAAQ,OAAQb,KAAKc,UAAUmQ,EAASkI,WACrDpH,EAAU,2BACLD,GADI,IAEPL,cAAc,EACdC,WAAYT,EAAS2B,eACrBf,SAAS,QAIX1P,OAAM,SAACC,GACN2P,EAAU,2BAAKD,GAAN,IAAeL,aAAarP,EAAI6O,SAAS/O,KAAKuP,oBAmGlE,OACI,sBAAMxI,MAAO,CAACI,OAAO,SAAUN,UAAU,YAAzC,UACC8I,GAAW,cAACpE,GAAD,IACR,eAAClC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACmO,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,MAArB,SACA,cAACrO,EAAA,EAAD,CAAME,MAAI,EAAKI,GAAI,EAAnB,SAAsB,cAAC,GAAD,QAErB,cAAC8N,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,MAArB,SACD,cAACrO,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SAA2B,cAAC,EAAD,CAAQ5D,SAAUA,QAEhD,eAACwD,EAAA,EAAD,CAAME,MAAI,EAAEC,GAAI,GAAIC,GAAI,GAAIE,GAAI,GAAhC,UACF,cAAC,EAAD,CAAWjD,KAAO,oBAChB6I,GACC,cAAC,GAAD,CAAU/H,KAAK,QAAQkG,QAAS6B,EAAclK,UAAW,MAEzDwP,GACA,cAAC,GAAD,CAAUrN,KAAK,OAAOkG,QAASmH,EAAaxP,UAAW,MAExDmK,GACC,cAAC,GAAD,CAAUhI,KAAK,UAAUkG,QAAS8B,EAAYnK,UAAW,OAjH7D,eAACgE,EAAA,EAAD,CAAMC,WAAS,EAAf,UACA,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,IAC7B,cAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGE,GAAI,EAA9B,SACF,sBAAK9C,UAAU,eAAf,UAEI,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,aAAf,SACG,qBAAKI,IAAK0N,EAAK9N,UAAU,kBAEzB,uBAAOW,KAAK,OAAO6O,OAAO,UAAU3P,KAAK,eAAexF,GAAG,QAAQ8P,SAAU6E,IAC7E,qBAAKhP,UAAU,QAAf,SACD,wBAAOA,UAAU,eAAe2K,QAAQ,QAAxC,UACN,mBAAG3K,UAAU,iBAAb,iCADM,4BAKC,qBAAKA,UAAU,QAAf,SACA,yBAAQA,UAAU,sBAAuBY,cAAY,QAAQC,cAAY,sBAAsBO,QAAS,kBAAIwM,GAAe,IAA3H,UACE,mBAAG5N,UAAU,iBAAiBE,MAAQ,CAACgB,YAAY,UAAnD,0BADF,kBAIC,cAAC,KAAD,CACMhB,MAAO,CAAEK,MAAO,IAAKyD,QAAS,UAC9ByL,YAAY,sBACZ/X,MAAOmW,EAAQ6B,MAAK,SAAA1S,GAAC,OAAIA,EAAEtF,QAAUqW,KACrC/N,UAAW2E,EAAQyD,UACnByF,QAASA,EACT1D,SAAU,SAAC8E,GACTjG,EAAU,2BACLD,GADI,IAEPgF,SAASkB,EAAEvX,YAKhB,cAACqM,EAAA,EAAD,CACN7D,MAAO,CAAEkD,MAAOmH,KAAK,IACpBtG,gBAAgBsH,KAAK,KACrBtB,WAAW,OACX9G,SAAS,OACT3C,aAAa,SACbyC,UAAW,OACXO,aAAc,SACdQ,QAAS,SACTmR,cAAc,cAEhBnV,UAAW,WACXgD,QAAQ,YACRkB,WAAS,EACT9C,QAAS8T,EAdF,+BAuBnB,qBAAKlV,UAAU,aAAa3F,GAAG,qBAAqBsV,SAAS,KAAK1O,KAAK,SAAS2O,kBAAgB,0BAA0BzO,cAAY,OAAtI,SACE,qBAAKnB,UAAU,qCAAqCiB,KAAK,WAAzD,SACE,sBAAKjB,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAc3F,GAAG,wBAA/B,wBACA,wBAAQsG,KAAK,SAASX,UAAU,QAAQ6P,eAAa,QAAQ7O,aAAW,QAAxE,SACE,sBAAMG,cAAY,OAAlB,uBAGJ,qBAAKnB,UAAU,aAAf,SACE,qBAAMA,UAAU,mBAAhB,SACC,cAAC,KAAD,CACD8P,OAAO,EACPxP,OAAS,IACVC,MAAQ,IACPwP,IAAKrC,EACLsC,iBAAiB,mBAIhBrC,EAAe,qBAAK3N,UAAU,eAAf,SAChB,wBAAQW,KAAK,SAASsP,MAAM,oBAAoBJ,eAAa,QAA7D,qBAEC,sBAAK7P,UAAU,eAAf,UACD,yBAASA,UAAU,sBAAsBoB,QAAUkN,EAAnD,UACE,mBAAGtO,UAAU,iBAAiBE,MAAQ,CAACgB,YAAY,UAAnD,0BADF,mBADC,mBAUP,cAACsB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGE,GAAI,iB,8ECzRhBsS,GApDG,SAACxJ,GAEhB,IAAIyJ,EAAape,KAAKC,MAAMC,aAAaC,QAAQ,aAFvB,EAGDuE,oBAAS,GAHR,mBAIhBqQ,GAJgB,UAIHvM,qBAAWiM,IAAxBM,UAJgB,EAKMrQ,mBAAS0Z,EAAW5J,OAL1B,mBAKlB6J,EALkB,KAKRC,EALQ,KAMnBrO,EAAc,WAChB0E,EAAM4J,SAAQ,IAoBf,OAEC,eAACC,GAAA,EAAD,CAAQzO,KAAM4E,EAAM5E,KAAMU,QAASR,EAAa0I,kBAAgB,oBAAhE,UACA,eAAC8F,GAAA,EAAD,CAAarb,GAAG,oBAAhB,UAAoC,cAAC,KAAD,CAAc6F,MAAO,CAACkD,MAAM,MAAMlC,YAAY,SAASyU,cAAc,YAAY,mBAAGzV,MAAO,CAAC+J,WAAW,OAAOxJ,QAAQ,UAArC,+BACrH,eAACmV,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,2FAGA,gCACA,uBAAOlV,KAAK,WAAWjJ,MAAS4d,EAAUQ,eAAgBR,EAASlU,QAAS,SAAC6N,GAAD,OA1B3D,SAACA,GACpBvV,QAAQC,IAAIsV,EAAE9F,OAAOmM,SACrBC,EAAWtG,EAAE9F,OAAOmM,SACtBtJ,EAAS,CAAErL,KAAM,mBAAoBjJ,MAAOuX,EAAE9F,OAAOmM,UAuBgCS,CAAe9G,MAChG,mBAAG/O,MAAO,CAACkD,MAAO,QAASD,SAAU,OAAO1C,QAAQ,SAASmK,WAAW,UAAxE,wCAGF,eAACoL,GAAA,EAAD,WACE,cAACjS,EAAA,EAAD,CAAQ3C,QAAS8F,EAAchH,MAAO,CAAC+D,gBAAgB,OAAOb,MAAM,SAApE,gBAGA,cAACW,EAAA,EAAD,CAAQ3C,QAAS,kBA5BG6U,EA4BkBrK,EAAMqK,MA3B9Cvc,QAAQC,IAAI,mBAAmBsc,QAC/Bxb,EAAYU,cAAc8a,GAAOhd,MAAK,SAACC,GACrCQ,QAAQC,IAAI,aAAaT,GACzB0S,EAAM4J,SAAQ,GACd5J,EAAMsK,aAEP9c,OAAM,SAACC,GAAD,OAASK,QAAQC,IAAIN,MAPP,IAAC4c,GA4BiC/V,MAAO,CAAC+D,gBAAgB,UAAUb,MAAM,SAA7F,wBCrDK,SAAS+S,GAAevK,GAErC,IAAIyJ,EAAape,KAAKC,MAAMC,aAAaC,QAAQ,aAFL,EAGpBwN,IAAMjJ,UAAS,GAHK,gCAIrBiJ,IAAMjJ,UAAS,IAJM,mBAIrCya,EAJqC,KAIhCZ,EAJgC,OAKjB7Z,qBALiB,mBAKrC0a,EALqC,KAK1BlK,EAL0B,KAWxCmK,EAAO,KAELC,EAAiB,SAACN,IACE,IAArBZ,EAAW5J,OACZ/R,QAAQC,IAAI,qBAAqBsc,GACjCT,GAAQ,GACL/a,EAAYU,cAAc8a,GAAOhd,MAAK,SAACC,GACxCQ,QAAQC,IAAI,aAAaT,GACzB0S,EAAMsK,aAEP9c,OAAM,SAACC,GAAD,OAASK,QAAQC,IAAIN,QAGhCmc,GAAQ,GACR9b,QAAQC,IAAI,qBAAqBsc,GACjC9J,EAAM8J,KAyEN,OAtEIrK,EAAM/E,QAAQ/L,KAAO8Q,EAAMnU,KAE5B6e,EACC,gCACE,qBAAKtW,UAAU,qBAGf,eAACwC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACM,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGG,GAAI,EAAtB,SACA,qBAAM5C,MAAO,CAAC0K,WAAW,OAAO3H,UAAU,OAAOO,aAAa,OAA9D,SACE,cAAC,UAAD,UACC,wBAAQpD,IAAKwL,EAAM/E,QAAQ2P,qBAM9B,eAAChU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGG,GAAI,EAAtB,eACF8I,EAAM6K,MACN,cAAC1S,EAAA,EAAD,CAAQ/D,UAAU,SAAUE,MAAO,CAACiV,cAAc,aAAclS,UAAU,SAAUG,MAAM,UAAUD,SAAS,UAA7G,SACE,mBAAG8M,MAAM,mBAAqB7O,QAAS,kBAAImV,EAAgB3K,EAAM/E,QAAQoP,YAGzE,WAGC,qBAAKhG,MAAM,2BAAX,SACC,sBAAKA,MAAM,gBAAX,UACD,qBAAKA,MAAM,eAAX,SAA2BrE,EAAM/E,QAAQtJ,cACrC,uBAAMyC,UAAU,qBAAhB,cAAuC4L,EAAM/E,QAAQ6P,gBAO7D9K,EAAM/E,QAAQhM,OAAS+Q,EAAMnU,KACpC6e,EACE,gCAGI,eAAC9T,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,eAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGG,GAAI,EAAtB,eACF8I,EAAM6K,MACN,cAAC1S,EAAA,EAAD,CAAQ/D,UAAU,SAASE,MAAO,CAACiV,cAAc,aAAcxD,MAAM,QAAQ1O,UAAU,SAASG,MAAM,UAAUD,SAAS,UAAzH,SACG,mBAAG8M,MAAM,mBAAoB7O,QAAS,kBAAImV,EAAgB3K,EAAM/E,QAAQoP,YAEzE,QAEA,cAACzT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGG,GAAI,EAAtB,SACG,qBAAK5C,MAAO,CAACgB,YAAY,OAAO+B,UAAU,OAAOO,aAAa,OAA9D,SACD,cAAC,UAAD,UACE,wBAAQpD,IAAKwL,EAAM/E,QAAQ2P,wBAK9B,qBAAKvG,MAAM,uBAAX,SACE,sBAAKA,MAAM,gBAAX,UACA,sBAAKA,MAAM,eAAX,cAA4BrE,EAAM/E,QAAQtJ,eACzC,uBAAM0S,MAAM,iBAAZ,cAA+BrE,EAAM/E,QAAQ6P,gBAQ3Dhd,QAAQC,IAAI,WAGZ,gCAEK2c,EAEDF,EACA,cAAC,GAAD,CAAepP,KAAOoP,EAAMZ,QAASA,EAASS,MAASI,EAAWH,QAAStK,EAAMsK,UAC/E,Q,mCC3GJ3R,GAAYC,cAAW,SAAC0B,GAAD,MAAY,CAGvCyQ,WAAY,CACVzJ,YAAY,cAAD,OAAgBhH,EAAMU,QAAQ,GAA9B,OACXhJ,WAAYsI,EAAM0Q,YAAYC,OAAO,SACrClF,MAAM,OACNvO,MAAM,QACN5C,aAAc,OACdyD,gBAAgB,QAChB1D,MAAM,OACNyD,QAAQ,SACV8S,OAAQ,2BAOK,SAASC,GAAYnL,GAAQ,IAAD,EACXjQ,mBAAS,IADE,mBAClCkL,EADkC,KACzBmQ,EADyB,KAEnCrS,EAAUJ,KAChB,OACE,cAAC,IAAM0S,SAAP,UACA,eAACzU,EAAA,EAAD,CAAMC,WAAS,EAAEvC,MAAO,CAAGO,QAAQ,OAAOoM,WAAW,UAArD,UACA,cAACrK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,GAAIC,GAAI,GAAIE,GAAI,GAAhC,SACC,cAACoU,GAAA,EAAD,CACSzH,YAAY,sBACZzP,UAAW2E,EAAQgS,WACnBQ,WAAY,CAAE,aAAc,QAC5Bzf,MAAOmP,EACPsD,SAAU,SAAC8E,GAAD,OAAO+H,EAAW/H,EAAE9F,OAAOzR,YAE/C,eAAC8K,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,EAAIC,GAAI,EAAGE,GAAI,EAA/B,eAAoC,eAACiB,EAAA,EAAD,CAAQf,QAAQ,YAAYoP,KAAK,QAAQpS,UAAW,SAASE,MAAO,CAC7F+D,gBAAkB,mBACjBb,MAAQ,QACRuO,MAAM,OACJ3N,QAAQ,SACRqE,OAAO,SACT7H,aAAa,UACfY,QAAS,WACTwK,EAAMwL,YAAYvQ,GAClBmQ,EAAW,KATe,UAW1B,cAAC,KAAD,CAAW9W,MAAO,CAACgB,YAAY,SAASiC,SAAS,YAXvB,kB,2GCfzB,SAASkU,GAAWzL,GAAQ,IAAD,EACRhH,IAAMjJ,SAAS,MADP,mBACjC2b,EADiC,KACvBC,EADuB,OAEV5b,oBAAS,GAFC,mBAEjC6b,EAFiC,KAEvBC,EAFuB,KAGlCzQ,EAAO0Q,QAAQJ,GAHmB,EAQZ3b,oBAAS,GARG,mBAQjCgc,EARiC,KAQvBC,EARuB,OASfjc,oBAAS,GATM,mBASjCkc,EATiC,KAS1B5Q,EAT0B,KAUpClI,EAAUE,cACVG,EAAOnH,IAAkBoH,IAWvByY,EAAkB,SAACC,GACV,WAAXA,GACAnM,EAAMoM,QAAO,GACbJ,GAAQ,IAES,WAAXG,GACNN,GAAWD,IAQflb,qBAAU,WACKsP,EAAMqM,cAAcpf,OAGnC,IAAIyd,EAAO,KAkGX,OAjGGqB,IACDrB,EACE,sBAAMpW,MAAO,CAACO,QAAQ,SAASkR,MAAM,QAAQ1O,UAAU,UAAvD,UACA,cAAC8E,GAAA,EAAD,CACF/H,UAAW,SACXgB,aAAW,OACXF,gBAAc,YACdoX,gBAAc,OACd9W,QArCkB,SAAC+C,GACnBoT,EAAYpT,EAAMuN,eAElBzK,GAAQ,IA6BN,SAOF,cAAC,KAAD,MAEC4Q,EACC,eAACM,GAAA,EAAD,CACE9d,GAAG,YACHid,SAAUA,EACVc,aAAW,EACXpR,KAAMA,EACNU,QAzCc,SAACqQ,GACnBR,EAAY,OAyCRc,WAAY,CACZnY,MAAO,CACH+C,UAAW,OACXqV,UAAW,IACX/X,MAAO,SAVb,UAeE,cAACgY,GAAA,EAAD,CAAUvY,UAAW,WAAWoB,QAAS,kBAAI0W,EAAiB,WAA9D,SACE,gCACE,cAAC,KAAD,CAAY3U,SAAS,QAAQjD,MAAO,CAACK,MAAM,UAC3C,mBAAGL,MAAO,CAACO,QAAQ,UAAnB,yBAGJ,cAAC8X,GAAA,EAAD,CAAWvY,UAAW,WAAWoB,QAAS,kBAAI0W,EAAiB,WAA/D,SACE,gCACE,cAAC,IAAD,CAAY3U,SAAS,QAAQjD,MAAO,CAACK,MAAM,OAAOoV,cAAc,YAC7D,mBAAGzV,MAAO,CAACO,QAAQ,UAAnB,4BAMX,SAOCmL,EAAM6K,QACPH,EACE,qBAAKpW,MAAO,CAACkD,MAAM,OAAO+N,OAAO,UAAUQ,MAAM,QAAQ1O,UAAU,OAAO/B,YAAY,QAASsX,WAAS,oBAAoBC,WAAS,SAArI,SACI,cAAC,KAAD,CAAYrX,QAAS,WACnB1H,QAAQC,IAAIiS,EAAM6K,OAClB7K,EAAMoM,QAAO,GACb/Q,GAAQ,GACR2Q,GAAQ,SAOfJ,IACDlB,EACE,cAACvM,GAAA,EAAD,CACC7J,MAAO,CAACyR,MAAM,QAAQzQ,YAAY,OAAO+B,UAAU,SAASgB,gBAAgB,QAAQzD,aAAa,QACjG9I,MAAOkU,EAAM0F,WACbnH,SA9EmB,SAAChG,GAEvByH,EAAM8M,cAAcvU,EAAMuN,cAAcha,QA6EpC+X,YAAY,iBACZ2C,KAAK,SAELhI,WAAY,CACVC,eACE,cAACC,GAAA,EAAD,CAAgB7M,SAAS,MAAzB,SACE,cAAC,KAAD,CAAYyC,MAAO,CAAEkD,MAAOmH,KAAK,KAAMrJ,YAAY,SAASyQ,MAAM,aAItE7G,aACK,cAAC,KAAD,CAAY5K,MAAO,CAACkD,MAAM,OAAO+N,OAAO,UAAUjQ,YAAY,UAAWE,QAAS,WACrF1H,QAAQC,IAAIiS,EAAM6K,OAClB7K,EAAM+M,QAAQ,IACdlB,GAAU,GACVxQ,GAAQ,GACR2Q,GAAQ,MAIVgB,kBAAkB,MAsD1B,aA9CE,CA8CD,IAAM3B,SAAP,UACK,qBAAM/W,MAAO,CAAEI,OAAO,SAAUN,UAAU,WAA1C,SACA,eAACwC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACmO,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,MAArB,SACD,cAACrO,EAAA,EAAD,CAAME,MAAI,EAAEI,GAAI,EAAhB,SAAmB,cAAC,GAAD,QAGtB,eAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIG,GAAI,GAAvB,UACC,cAAC,KAAD,CAAczI,GAAG,WACb,eAACmI,EAAA,EAAD,CAAMC,WAAS,EAACmE,QAAS,EAAG1G,MAAO,CAACO,QAAQ,OAAOwC,UAAU,QAA7D,UACG,cAACT,EAAA,EAAD,CAAMG,GAAI,EAAGG,GAAI,IAClB,eAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIG,GAAK,GAAxB,UACE,sBAAK9C,UAAU,aAAf,UACE,cAAC4Q,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAK,MAApB,SACC,cAAC,KAAD,CAAuB3Q,MAAO,CAACgB,YAAY,SAAS0J,WAAW,SAASuG,OAAO,WAAa/P,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,YAAYX,QAE7I,qBACEY,UAAU,UACVI,IAAKwL,EAAMqM,cAAcpf,IACzBwH,IAAI,OAGN,sBAAQH,MAAO,CAACO,QAAQ,SAASwJ,WAAW,OAAQ9G,SAAU,QAA9D,SAAyEyI,EAAMqM,cAAcpY,OAG1FyW,KAGL,sBAAKtW,UAAU,gBAAf,UAEE4L,EAAMiN,QACNjN,EAAM9C,QACN,qBAAK9I,UAAU,OAAf,SACE,cAAC8Y,GAAA,EAAD,CAAkB1V,MAAM,gBAExB,SAGgB,IAAnBwI,EAAMmN,SACP,cAAChC,GAAD,CAAaK,YAAaxL,EAAMwL,cAEhC,cAAC,GAAD,CACAzW,KAAK,QACLkG,QAAQ,0EACRrI,UAAW,SAIT,cAACgE,EAAA,EAAD,CAAMG,GAAI,EAAGG,GAAI,iB,cClPhB,SAASkW,GAAWpN,GAAQ,IAAD,EAChBjQ,mBAAS,CAAC,CAAEd,KAAM,GAAIC,GAAI,GAAIme,SAAU,MADxB,mBACjCC,EADiC,KAC3BC,EAD2B,OAEFxd,mBAAS,CAACsd,SAAU,CAAC,MAFnB,mBAEjCG,EAFiC,KAEpBC,EAFoB,OAGJ1d,mBAAS,IAHL,mBAGjC2V,EAHiC,KAGrBC,EAHqB,OAIV5V,oBAAS,GAJC,mBAIjCmN,EAJiC,KAIxBuI,EAJwB,OAKR1V,oBAAS,GALD,mBAKjCod,EALiC,KAKvBO,EALuB,KAMlCC,EAAYld,mBACdmd,EAAQnd,iBAAO,IACfyY,EAAUzY,mBAEV5E,EAAO4E,iBAAO,CAAE8X,IAAK,GAAIsF,KAAM,GAAIC,MAAO,KAC1CC,EAAYtd,iBAAO,IACnB4b,EAAgB5b,iBAAO,CAAEwD,KAAM,GAAI+Z,KAAM,GAAI/gB,IAAK,KAClDuD,EAASC,iBAAO,IAChBwd,EAAcxd,mBACdyd,EAAmBzd,mBAEnBhC,EAAKuR,EAAMU,MAAM9S,OAAOa,GAAG0f,MAAM,KAjBG,EAkB6Bta,qBAAWnE,GAAxEY,EAlBgC,EAkBhCA,aAAaC,EAlBmB,EAkBnBA,UAAU8B,EAlBS,EAkBTA,SAAUD,EAlBD,EAkBCA,aAAcO,EAlBf,EAkBeA,UAlBf,EAmBVkB,qBAAWnE,GAnBD,KAmBhC2B,MAnBgC,EAmBzB6E,WACUnG,oBAAS,IApBM,mBAoBjC8a,EApBiC,KAoBzBuB,EApByB,OAqBZpT,IAAMjJ,UAAS,GArBH,mBAqBjCqe,GArBiC,KAqBzBC,GArByB,KAsBpCrW,GAAgBvH,mBAChB6d,GAAKjjB,KAAKC,MAAMC,aAAaC,QAAQ,SAGzCkF,qBAAU,WAAO,IAAD,EACd,UAAAid,EAAU7c,eAAV,SAAmByd,eAAe,CAAEC,SAAU,aAC7C,CAAClB,IAGFjB,EAAcvb,QAAQmD,KAAO1I,aAAaC,QAAQ,WAClD6gB,EAAcvb,QAAQkd,KAAOziB,aAAaC,QAAQ,WAClD6gB,EAAcvb,QAAQ7D,IAAM1B,aAAaC,QAAQ,cACjDyiB,EAAYnd,QAAU,WAAavF,aAAaC,QAAQ,YACxD0iB,EAAiBpd,QAAU,IAAMrC,EAAG,GACpCsf,EAAUjd,QAAUrC,EAAG,GACvB5C,EAAKiF,QAAQyX,IAAM+F,GAAG3gB,MACtB9B,EAAKiF,QAAQgd,MAAQQ,GAAGhb,UAAY,IAAMgb,GAAG/a,SAC7C1H,EAAKiF,QAAQ+c,KAAOS,GAAG1a,WAG1BiC,OAAOC,OAAS,WACfnD,IACAP,IACA,IAAIE,EAAMjH,KAAKC,MAAMC,aAAaC,QAAQ,SAASiI,IACnDpB,EAASC,GACT0F,GAAgBpH,IAAG,yBACnBL,GAAU,SAAC0H,GAOX,OANAA,EAAID,IACFzG,GAAG,WAAY,WACfzD,QAAQC,IAAI,YAAYkK,EAAExJ,IAC1BwJ,EAAE1F,KAAK,UAAU,CAAC9D,GAAGwJ,EAAExJ,GAAIwF,KAAMpI,EAAKiF,QAAQyX,SAGzCtQ,MAIP,IAAMqS,GAAU,WACdxc,QAAQC,IAAI,cAAclC,GAC1BgD,EACGG,mBAAmBnD,EAAKiF,QAAQyX,IAAKwF,EAAUjd,SAC/CzD,MAAK,SAACE,GACFA,IAEDO,QAAQC,IAAI,YAAYR,GACxBqgB,EAAM9c,QAAUvD,EAChBggB,EAAQ,CAAEF,SAAUO,EAAM9c,UAC1Bud,IAAU,OAIb7gB,OAAM,SAACC,GAAD,OAASgE,IAAMgB,MACpB,4BAA6B,CAC7BZ,SAAUJ,IAAMK,SAASC,SACzBa,UAAW,IACXZ,WAAYiE,UAOlBvF,qBAAW,WACT,IAAI+d,EAAQ,EACZvgB,EAAcS,cAAc2f,GAAG7a,KAC9BpG,MAAK,SAACE,GACL2b,EAAQpY,QAAUvD,EAClB2b,EAAQpY,QAAQ4d,SAAQ,SAACC,GACpBA,EAAEhhB,QAAUogB,EAAUjd,UACvB2d,GAAgB,MAGjBA,EAAQ,GACVf,GAAY,MAEZlgB,OAAO,SAAAC,GAAG,OAAEgE,IAAMgB,MACjB,4BAA6B,CAC7BZ,SAAUJ,IAAMK,SAASC,SACzBa,UAAW,IACXZ,WAAYiE,YAGlBvF,qBAAU,WACR4Z,OACC,IAEH5Z,qBAAU,WACR,QAAqBsD,IAAjB1D,EAgCF,OA/BAA,EAAaiC,KACX,WACA,CAAEtD,KAAMpD,EAAKiF,QAAQyX,IAAKrZ,GAAI6e,EAAUjd,UACxC,YAAsB,IAAnB2B,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACHD,EAIH3E,QAAQC,IAAI,qBAAsB0E,IAHlCjC,EAAOM,QAAU4B,EACjB5E,QAAQC,IAAI,sBAAuB2E,OAOzCpC,EAAaiB,GAAG,mBAAmB,SAACC,GAClC+b,GAAQ,SAACqB,GACP,GAAIA,EAAUvB,SAAU,CACtB,IAAIwB,EAAW,aAAOD,EAAUvB,UAEhC,OADAwB,EAAW,uBAAOA,GAAP,CAAoBrd,IACxB,2BAAKod,GAAZ,IAAuBvB,SAAUwB,IAEjC,MAAO,CAAExB,SAAU,CAAC7b,UAWnB,WACLlB,EAAa4D,IAAI,mBACjBpG,QAAQC,IAAI,iBAGf,IAEH,IA+FI2c,GAAO,KA6CX,OA5CAha,qBAAU,WACR,GAAG4c,EAAKD,SAAS,CAEjB,IAAMyB,EAAOxB,EAAKD,SAASrH,QAAO,SAAArQ,GAAG,OAAIA,EAAIhE,YAAYsU,cAAcvB,SAASgB,EAAWO,kBAC3FwH,EAAe,CAACJ,SAAWyB,SAGzBhhB,QAAQC,IAAI,aAEf,CAAC2X,SAGoB1R,IAAlBsZ,EAAKD,SAEP3C,GACE,oBAAIpW,MAAO,CAAEgD,UAAW,UAAxB,yBAIAoT,GADgB,KAAfhF,QAA8C1R,IAAzBwZ,EAAYH,SAC1BG,EAAYH,SAASlH,KAAI,SAACxQ,GAChC,OAAO,cAAC4U,GAAD,CAAgBtP,QAAStF,EAAK9J,KAAMA,EAAKiF,QAAQyX,IAAKsC,MAAOA,EAAOkE,KAAMrJ,OAK3E4H,EAAKD,SAASlH,KAAI,SAACxQ,GACzB,OAAS,qBAAKwO,IAAKwJ,EAAV,SACP,cAACpD,GAAD,CAAgBtP,QAAStF,EAAK9J,KAAMA,EAAKiF,QAAQyX,IAAKsC,MAAOA,EAAOP,QAAWA,GAAS7b,GAAIA,EAAG,GAAI+Z,IAAKuF,EAAUjd,eAMrF,IAAhC0c,EAAYH,SAASlb,SACtBrE,QAAQC,IAAI,YACZ2c,GACE,oBAAIpW,MAAO,CAAEgD,UAAW,UAAxB,+BASJ,cAACmU,GAAD,CAAYY,cAAeA,EAAcvb,QACxCsC,SAAU4M,EAAM5M,SAChB6Z,QAASvC,GACTxN,QAAWA,EACXsO,YAjJiB,SAACvQ,GACnB,IAAIoP,EAAQ2E,eACZ,GAAe,IAAX/T,EACDxJ,IAAMgB,MAAM,wBAAwB,CACjCZ,SAAUJ,IAAMK,SAASC,eAIhC,CACE0T,GAAW,GAGJ4G,EAAcvb,QAAQkd,KAChBniB,EAAKiF,QAAQ+c,KAI3BpI,GAAW,GAGX,IAAIwJ,EAAW,CACbhgB,KAAMpD,EAAKiF,QAAQyX,IACnBrZ,GAAI6e,EAAUjd,QACdoe,SAAUrjB,EAAKiF,QAAQgd,MACvBpb,KAAMlC,EAAOM,QACba,YAAasJ,EACb2P,aAAc,aACdE,MAAM,IAAIqE,MAAOC,iBACjBra,KAAM,UACNsV,MAAQA,GAEV/Z,EAAaiC,KAAK,cAAe0c,GAAU,SAACxhB,GACrCA,EAgBHgE,IAAMgB,MACJ,6CAA8C,CAC9CZ,SAAUJ,IAAMK,SAASC,SACzBa,UAAW,IACXZ,WAAYiE,OAnBdpH,EAAYE,cAAckgB,GACrB5hB,MAAK,SAACiP,GAAD,OAAYxO,QAAQC,IAAIuO,EAAS+N,MACtC7c,OAAM,SAACC,GAAD,OAAOgE,IAAMgB,MAClB,8CAA+C,CAC/CZ,SAAUJ,IAAMK,SAASC,SACzBa,UAAW,IACXZ,WAAYiE,SAGdqX,EAAKD,SACPE,EAAQ,CAAEF,SAAS,GAAD,oBAAMC,EAAKD,UAAX,CAAqB4B,MAEvC1B,EAAQ,CAAEF,SAAU,CAAC4B,SAW3B3e,EAAaiC,KACX,eACA,CACE0I,QAASgU,EACTze,OAAQ0d,EAAiBpd,QACzBmD,KAAMpI,EAAKiF,QAAQgd,QAErB,SAACrgB,GACMA,EACAK,QAAQC,IAAIN,GADPK,QAAQC,IAAI,cAM1BuC,EAAaiC,KACX,UACA,CAAE/B,OAAQyd,EAAYnd,QAASmK,QAASgU,EAAUI,QAASf,GAAG1a,aAC9D,SAACnG,GACMA,EACAK,QAAQC,IAAIN,GADPK,QAAQC,IAAI,gBAwEzB8c,MAAQA,EACRuB,OAAUA,EACVe,SAAYA,EACZiB,OAAQA,GACR9D,QAAUA,GACV5E,WAAcA,EACdqH,QAAWpH,EACXmH,cAlEuB,SAACwC,GACzB3J,GAAc,SAACoJ,GAGb,OADOO,Q,cCjPP3W,GAAYC,cAAW,SAAC0B,GAAD,MAAY,CACvCiV,UAAW,CACT1a,QAAS,OACTqG,WAAY,SACZqK,OAAQ,WAEViK,MAAO,CACLnX,gBAAiBiC,EAAME,QAAQE,QAAQD,MAEzCgV,cAAe,CACbjY,MAAO8C,EAAME,QAAQE,QAAQD,MAE/BqU,KAAM,CACJpC,UAAW,sBACXgD,UAAW,QAGbC,SAAU,CACRpY,SAAU,SACVG,WAAY,SACZsH,WAAY,SACZ3H,UAAU,OACVgH,WAAW,OACXxJ,QAAQ,UAGV+a,UAAW,CACTrY,SAAU,SACVG,WAAY,SACZF,MAAO,UACP7C,MAAM,MACNqK,WAAY,SACZnK,QAAQ,QACR0Q,OAAO,UACPsK,SAAS,SACTC,aAAa,YAIfC,SAAS,CACPxY,SAAU,SACVG,WAAY,SACZF,MAAO,OACPwH,WAAY,SACZnK,QAAQ,UAGVmb,QAAS,CACP3X,gBAAiB,mBACjBb,MAAO,QACPD,SAAU,QAEZ0Y,OAAQ,CACN5Y,UAAW,OACX2H,WAAY,QACZrK,MAAO,SAETub,QAAS,CACP9X,QAAS,QAEX8J,IAAK,CACHvN,MAAO,OACPD,OAAQ,OACRE,aAAc,YAiJHwY,GA9II,SAACpN,GAClB,IAAMjH,EAAUJ,KACZxF,EAAUE,cACVqX,EAAO,KACP7e,EAAOR,KAAKC,MAAMC,aAAaC,QAAQ,SACvC6hB,EAAW5c,iBAAO,IACfuC,EAAWa,qBAAWnE,GAAtBsD,UAEDmd,EAAwB,SAAC5I,EAAIxS,GACjClG,EAAYG,mBAAmBnD,EAAK8B,MAAO4Z,EAAG5Z,OAAON,MAAK,SAACC,GACzD+f,EAASvc,QAAUxD,EACnB+f,EAASvc,QAAQqV,KAAI,SAACiK,GACL,YAAXA,EAAErb,MAAsBqb,EAAEnhB,OAASpD,EAAK8B,OAC1CkB,EACGW,kBAAkB,CAAEuF,KAAM,QAAUqb,EAAE3c,KACtCpG,MAAK,SAACC,GACL0F,OAEDxF,OAAM,SAACC,GAAD,OAASK,QAAQC,IAAIN,MAEhCK,QAAQC,IAAI,sBAIhBxC,aAAaW,QAAQ,WAAYqb,EAAG9Y,IACpClD,aAAaW,QAAQ,UAAWqb,EAAGtT,MACnC1I,aAAaW,QAAQ,UAAWqb,EAAGyG,MACnCziB,aAAaW,QAAQ,aAAcqb,EAAGrF,KACtC/O,EAAQgB,KAAK,SAAWoT,EAAG5Z,MAAQ,IAAM4Z,EAAG9Y,KAG9C,OACE,8BACGuR,EAAMqQ,WAAWlK,KAAI,SAACwC,EAAGvC,GAExB,OADAtY,QAAQC,IAAI,eAAeiS,EAAM8I,SAG5B,cAAC5K,GAAA,EAAD,CAAO5J,MAAO,CAAC8D,QAAU,YAAaR,aAAa,QAAnD,SACC,eAAChB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACC,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACG,qBAAKvC,IAAKmU,EAAEzG,IAAKzN,IAAI,MAASH,MAAO,CAAEI,OAAQ,OAAQC,MAAO,OAAQC,aAAc,MAAMC,QAAQ,cAEzG,eAAC+B,EAAA,EAAD,CAAME,MAAI,EAAIC,GAAK,GAAnB,UACG,cAACI,EAAA,EAAD,CAAY/C,UAAW2E,EAAQ4W,SAA/B,SAA0ChH,EAAE1U,OACxC+L,EAAM8I,QAAQwH,OAAO5B,SAAQ,SAAC6B,EAAGC,GAI5BD,IAAM5H,EAAEhb,QACsB,SAA7BqS,EAAM8I,QAAQ2H,MAAMD,GAEtB9F,EACE,gCACI,cAACvT,EAAA,EAAD,CACE/C,UAAW2E,EAAQ6W,UACnBpa,QAAS,kBACP2a,EACExH,EACA3I,EAAM8I,QAAQ2H,MAAMD,GACpBxQ,EAAM8I,QAAQuB,MAAMmG,KAN1B,SAUGxQ,EAAM8I,QAAQ4H,KAAKF,KAGtB,cAACrZ,EAAA,EAAD,CAAY/C,UAAW2E,EAAQgX,SAA/B,SACCY,aAAO3Q,EAAM8I,QAAQgC,KAAK0F,SAMJ,YAA7BxQ,EAAM8I,QAAQ2H,MAAMD,IACpBxQ,EAAM8I,QAAQ8H,QAAQJ,KAAS3kB,EAAK8B,MAGpC+c,EACE,gCACA,cAACvT,EAAA,EAAD,CACD7C,MAAO,CAAE+J,WAAY,OAAQ7G,MAAO,SACjCpD,UAAW2E,EAAQ6W,UACnBpa,QAAS,kBACP2a,EACExH,EACA3I,EAAM8I,QAAQ2H,MAAMD,KAN1B,SAUGxQ,EAAM8I,QAAQ4H,KAAKF,KAEtB,cAACrZ,EAAA,EAAD,CAAY/C,UAAW2E,EAAQgX,SAA/B,SACGY,aAAO3Q,EAAM8I,QAAQgC,KAAK0F,UAM/B1iB,QAAQC,IAAI,aAAciS,EAAM8I,QAAQ2H,MAAMD,IAC7C1iB,QAAQC,IAAI,cAAeiS,EAAM8I,QAAQ8H,QAAQJ,IAClD9F,EACE,gCACE,cAACvT,EAAA,EAAD,CAEE/C,UAAW2E,EAAQ6W,UACnBpa,QAAS,kBACP2a,EACExH,EACA3I,EAAM8I,QAAQ2H,MAAMD,KAN1B,SAUGxQ,EAAM8I,QAAQ4H,KAAKF,KAEtB,cAACrZ,EAAA,EAAD,CAAY/C,UAAW2E,EAAQgX,SAA/B,SACKY,aAAO3Q,EAAM8I,QAAQgC,KAAK0F,cAQxC9F,KAKH,mCChMR/R,GAAYC,cAAW,SAAC0B,GAAD,MAAY,CACvC2V,OAAQ,CACN5Y,UAAW,OACX2H,WAAY,QACZrK,MAAO,aAwRIkc,GArRE,SAAC7Q,GACArH,KACFtF,cADd,IAEQ/C,EAAiBuD,qBAAWnE,GAA5BY,aACJiY,EAAMld,KAAKC,MAAMC,aAAaC,QAAQ,SAASmC,MAJzB,EAK2BkG,qBAAWnE,GAAzDa,EALmB,EAKnBA,UAAU8B,EALS,EAKTA,SAASD,EALA,EAKAA,aAAcO,EALd,EAKcA,UACpC2d,EAAS7f,iBAAO,IANM,EAQGV,mBAAS,CAAC+gB,MAAM,KARnB,mBAQnBC,EARmB,KAQRC,EARQ,OASIjhB,mBAAS,CACrC2gB,KAAM,GACNrG,MAAO,GACPiG,OAAQ,GACRG,MAAO,GACPG,QAAS,GACT9F,KAAO,KAfiB,mBASnBhC,EATmB,KASVmI,EATU,OAiBIlhB,qBAjBJ,mBAiBnByB,EAjBmB,KAiBV0f,EAjBU,KAmBtB1gB,EAASC,mBACTY,EAAQZ,iBAAO,GACFA,iBAAO,GACxBD,EAAOM,QAAU,WAAakP,EAAMU,MAAM9S,OAAOa,GACjD,IAAIuZ,EAAU,GAGXhQ,EAAgBvH,mBAEnBoF,OAAOC,OAAS,WACdnD,IACAP,IACA,IAAIE,EAAMjH,KAAKC,MAAMC,aAAaC,QAAQ,SAASiI,IACnDpB,EAASC,GACT0F,EAAgBpH,IAAG,yBACnBL,GAAU,SAAC0H,GAOT,OANAA,EAAID,GACFzG,GAAG,WAAY,WACfzD,QAAQC,IAAI,YAAYkK,EAAExJ,IAC1BwJ,EAAE1F,KAAK,UAAU,CAAC9D,GAAGwJ,EAAExJ,GAAIwF,KAAMsU,OAG5BtQ,MAyFXvH,qBAAU,WACRW,EAAMP,QAAU,EACZR,GACFA,EAAaiC,KACX,cACA,CAAE0b,YAAazd,EAAOM,UACtB,YAAsB,IAAnB2B,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACHD,EAGH3E,QAAQC,IAAI,qBAAsB0E,GAFlC3E,QAAQC,IAAI,sBAAuB2E,MA9F1B,SAAC6V,GAClB+H,EAAOxf,QAAU,GACjBgY,EAAQ4H,KAAO,GAAI5H,EAAQuB,MAAQ,GAAIvB,EAAQwH,OAAS,GACxDxH,EAAQ2H,MAAQ,GAAI3H,EAAQ8H,QAAU,GAAI9H,EAAQgC,KAAO,GACzDjc,EACGQ,kBAAkBkZ,GAClBlb,MAAK,SAACE,GACDA,EAAK4E,OAAS,GAEhBme,EAAOxf,QAAUvD,EAAK4jB,OACtBb,EAAOxf,QAAU2X,MAAMxZ,KAAK,IAAIyZ,IAAI4H,EAAOxf,UAC3C0W,GACGE,eAAe,CAAE0J,UAAWd,EAAOxf,UACnCzD,MAAK,SAACgkB,GACLrJ,EAAUqJ,EAEVL,GAAQ,SAACM,GAEP,OADAA,EAAER,MAAQ9I,EACHsJ,QAIbhB,EAAOxf,QAAQ4d,SAAQ,SAAC/F,EAAGvC,GACzBvX,EACGS,WAAWiZ,EAAKI,GAChBtb,MAAK,SAACwb,GAEFA,GACDoI,GAAW,SAACtb,GACV,GACEA,EAAI+a,KAAKve,QAAU,GACnBwD,EAAI2a,OAAOne,QAAU,GACrBwD,EAAI8a,MAAMte,QAAU,GACpBwD,EAAI0U,MAAMlY,QAAU,GACpBwD,EAAIib,QAAQze,QAAU,EACtB,CACA,IAAIof,EAAM,aAAO5b,EAAI+a,MACjBc,EAAI,aAAO7b,EAAI2a,QACfmB,EAAI,aAAO9b,EAAI8a,OACfhiB,EAAE,aAAOkH,EAAI0U,OACbpZ,EAAM,aAAO0E,EAAIib,SACjBc,EAAO,aAAO/b,EAAImV,MAQtB,OAPAyG,EAAM,uBAAOA,GAAP,CAAe1I,EAAMC,UAC3B0I,EAAI,uBAAOA,GAAP,CAAa7I,IACjB8I,EAAI,uBAAOA,GAAP,CAAa5I,EAAM9T,OACvBtG,EAAE,uBAAOA,GAAP,CAAWoa,EAAMwB,QACnBpZ,EAAM,uBAAOA,GAAP,CAAe4X,EAAM5X,SAC3BygB,EAAO,uBAAOA,GAAP,CAAgB7I,EAAMiC,OAEtB,2BACFnV,GADL,IAEE+a,KAAMa,EACNlH,MAAO5b,EACP6hB,OAAQkB,EACRf,MAAOgB,EACPb,QAAS3f,EACT6Z,KAAO4G,IAaT,MATa,CACXhB,KAAM,CAAC7H,EAAMC,SACbuB,MAAO,CAACxB,EAAMwB,OACdiG,OAAQ,CAAC3H,GACT8H,MAAO,CAAC5H,EAAM9T,MACd6b,QAAS,CAAC/H,EAAM5X,QAChB6Z,KAAO,CAACjC,EAAMiC,aASvBtd,OAAM,SAACC,GAAD,OAASK,QAAQC,IAAIN,UAM3BK,QAAQC,IAAI,cAEpBP,OAAM,SAACC,GAAD,OAASK,QAAQC,IAAIN,MAmB9B6a,CAAWC,GACXza,QAAQC,IAAI,cAAeiS,EAAM2R,SAChC,IAEHjhB,qBAAU,WACJJ,GACFA,EAAaiB,GAAG,gBAAgB,SAACC,GAC/B0f,GAAW,SAACU,GACV,OAAWpgB,UAIjB,IAEFd,qBAAU,WAEJ,IAAI0V,EADJ5U,IAG+B,IAA3Buf,EAAUD,MAAM3e,QAAwC,IAAxB2W,EAAQ4H,KAAKve,QAC/Cd,EAAMP,QAAU,EAGhBigB,EAAUD,MAAMpC,SAAQ,SAAC6B,EAAGsB,GAEtBrgB,EAAQyJ,QAAQhM,OAASshB,EAAE5iB,OAC7ByY,EAAQyL,EACRxgB,EAAMP,QAAUO,EAAMP,QAAU,GAIhChD,QAAQC,IAAI,YAGM,IAAlBsD,EAAMP,QACRghB,EACE1L,EACA5U,EAAQyJ,SAEiB,IAAlB5J,EAAMP,QACfihB,EACEvgB,EAAQyJ,SAELnN,QAAQC,IAAI,WAAYsD,EAAMP,UAErChD,QAAQC,IAAI,cAAe+a,MAIhC,CAACtX,IAEJ,IAAMsgB,EAAc,SAAC1L,EAAOnL,GAE1B,IAAI+W,EAAQ,GACZA,EAAK,aAAOlJ,EAAQ4H,MACpB,IAAI/iB,EAAK,aAAOmb,EAAQwH,QACpB2B,EAAM,aAAOnJ,EAAQ2H,OACrByB,EAAK,aAAOpJ,EAAQgC,MACpB7Z,EAAM,aAAO6X,EAAQ8H,SACzBoB,EAAM5L,GAASnL,EAAQtJ,YACvBsgB,EAAO7L,GAASnL,EAAQlG,KACxBmd,EAAM9L,GAASnL,EAAQ6P,KACvB7Z,EAAOmV,GAASnL,EAAQhM,KACxBtB,EAAMyY,GAASnL,EAAQhM,KACvBtB,EAAQA,EAAMwjB,OACdF,GAAW,SAACb,GACV,OAAO,2BAAKA,GAAZ,IAAeM,KAAMsB,EAAO1B,OAAQ3iB,EAAO8iB,MAAOwB,EAAQnH,KAAMoH,EAAOtB,QAAS3f,QAK9E8gB,EAAkB,SAAC9W,GACvBnN,QAAQC,IAAI,gBAAgBkN,EAAQlG,MACpCyS,GACGE,eAAe,CAAE3P,UAAWkD,EAAQhM,OACpC5B,MAAK,SAACE,GACLyjB,GAAQ,SAACM,GACP,IAAIthB,EAAM,CAAErC,MAAOsN,EAAQhM,KAAM0N,OAASpP,EAAK,GAAGoP,OAAQlO,GAAKlB,EAAK,GAAGkG,IAC3DQ,KAAO1G,EAAK,GAAG+F,UAAY,IAAK/F,EAAK,GAAGgG,SACxC2O,IAAM3U,EAAK,GAAGqG,YACtBkd,EAAK,aAAOQ,EAAER,OAGlB,OAFAA,EAAK,uBAAOA,GAAP,CAAa9gB,IAClBlC,QAAQC,IAAI,IAAI+iB,GACT,2BAAKQ,GAAZ,IAAeR,gBAGU,IAA1BC,EAAUD,MAAM3e,QACjBrE,QAAQC,IAAI,uBACZkjB,EAAW,CAACP,KAAK,GAAD,oBAAM5H,EAAQ4H,MAAd,CAAmBzV,EAAQtJ,cAAc2e,OAAO,GAAD,oBAAMxH,EAAQwH,QAAd,CAAqBrV,EAAQhM,OAClFwhB,MAAM,GAAD,oBAAK3H,EAAQ2H,OAAb,CAAmBxV,EAAQlG,OAAO6b,QAAQ,GAAD,oBAAK9H,EAAQ8H,SAAb,CAAqB3V,EAAQhM,OAC3E6b,KAAI,uBAAOhC,EAAQgC,MAAf,CAAoB7P,EAAQ6P,WAG1Chd,QAAQC,IAAI,mBACZkjB,EAAW,CAACP,KAAM,CAACzV,EAAQtJ,aAAc2e,OAAQ,CAACrV,EAAQhM,MAC9CwhB,MAAM,CAACxV,EAAQlG,MAAO6b,QAAQ,CAAC3V,EAAQhM,MAAO6b,KAAK,CAAC7P,EAAQ6P,UAO9E,OACE,qBAAMxW,MAAO,CAACI,OAAO,SAAUN,UAAU,YAAzC,SACA,eAACwC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACG,cAACmO,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,MAArB,SACD,cAACrO,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,EAAGG,GAAI,EAAvB,SAA0B,cAAC,GAAD,QAExB,cAAC8N,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,MAArB,SACF,cAACrO,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SAAoB,cAAC,EAAD,QAEvB,eAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIG,GAAI,GAAvB,UACD,cAAC,EAAD,CAAWjD,KAAM,aACW,IAA3B8c,EAAUD,MAAM3e,QAAwC,IAAvB2W,EAAQ4H,KAAKve,OAC7C,8BACI,eAACyE,EAAA,EAAD,CAAMC,WAAS,EAAGvC,MAAO,CAAC+C,UAAU,UAApC,UACF,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,EAAGG,GAAI,EAAvB,eACA,cAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,GAAIG,GAAI,GAAxB,SACA,cAAC,GAAD,CAAYmZ,WAAYU,EAAUD,MAAOhI,QAASA,MAGpD,cAAClS,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,EAAGG,GAAI,EAAvB,oBAIA,oBAAI5C,MAAO,CAAEgD,UAAW,UAAxB,oCCvMW6a,I,OA9EGvZ,aAAW,CAE3B4D,UAAW,CACTnF,UAAW,QAEbuK,UAAW,CACTvK,UAAW,YAKC,SAAC,GAAc,IAAZqJ,EAAW,EAAXA,MACd5S,QAAQC,IAAI2S,EAAM9S,OAAOa,IACzB,IAAM2jB,EAAY1R,EAAM9S,OAAOa,GACzB+B,EAAS,IAAI4hB,EACd5e,EAAKnH,IAAkBoH,IACvBoR,EAAQxY,IAAkBiH,UAAY,IAAKjH,IAAkBkH,SAC/DiR,EAASnZ,KAAKC,MAAMC,aAAaC,QAAQ,SANnB,EAOIuE,oBAASyU,EAASC,aAAaC,SAAS0N,IAP5C,mBAOnBzN,EAPmB,KAOPC,EAPO,KAQpBjR,EAActH,IAAkBuH,WAChCF,EAASrH,IAAkBsB,MAC3BmX,EAAUzY,IAAkBsQ,OAC5BoI,EAAkB1Y,IAAkBsX,eAClCrT,EAAiBuD,qBAAWnE,GAA5BY,aAqCZ,OACI,8BACKqU,EACA,cAACxM,EAAA,EAAD,CAAQ/D,UAAW,WACfE,MAAO,CAACO,QAAQ,eAAiBhD,SAAS,WAAWkU,MAAM,QAAQ1O,UAAU,OAAQgB,gBAAgB6M,KAAU,KAAK1N,MAAM,SAC3HJ,QAAQ,YACR5B,QAzCgB,WACpB1H,QAAQC,IAAI,aAAaqkB,GACzBlkB,EAAcC,YACV,CAACgX,SAASiN,EACV5e,OAAKqR,SAAOlR,eAAaD,UAAQoR,WAASC,qBAC5C1X,MAAK,SAACE,GACLhC,aAAaW,QAAQ,OAAOb,KAAKc,UAAUoB,IAEzCqX,GAAU,MAGbpX,OAAM,SAACC,GAASK,QAAQC,IAAIN,MAE7B6C,EAAaiC,KACV,gBACA,CAAEsS,SAAOrU,WACT,SAAC/C,GACMA,EACAK,QAAQC,IAAIN,GADPK,QAAQC,IAAI,qBAqB3B,wBAKD,cAACoK,EAAA,EAAD,CAAQ/D,UAAW,WACbE,MAAO,CAACO,QAAQ,eAAgBhD,SAAS,WAAWkU,MAAM,QAAS1O,UAAU,OAAQgB,gBAAgBsG,KAAK,KAAKnH,MAAM,SACvHJ,QAAQ,YACR5B,QAxBmB,WAEvBtH,EAAcE,cACV,CAAC+W,SAASiN,EAAU5e,SACtBnG,MAAK,SAACE,GACHhC,aAAaW,QAAQ,OAAOb,KAAKc,UAAUoB,IAE3CqX,GAAU,MAGbpX,OAAM,SAACC,GAASK,QAAQC,IAAIN,OAW9B,2B,UC/DO4kB,GAfG,SAAC,GAAuC,IAA1BC,EAAyB,EAApC3a,UAAyB4a,EAAW,8BACvD,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACxS,GAAD,OACN3T,KAAgD,IAA3BA,IAAkBgJ,KACrC,cAACid,EAAD,eAAetS,IAEf,cAAC,IAAD,CAAU9Q,GAAG,gBCkGRujB,GAhGW,WACtB,IAAItf,EAAUE,cACV2E,EAAgBgB,IAAMvI,SAFE,EAGsCoD,qBAAWnE,GAAtEa,EAHqB,EAGrBA,UAAU8B,EAHW,EAGXA,SAASD,EAHE,EAGFA,aAAcO,EAHZ,EAGYA,UAAWzC,EAHvB,EAGuBA,YAC7CsD,EAAMnH,IAAkBoH,IACxBC,EAAUrH,IAAkBsB,MAmBlC,OAjBAkI,OAAOC,OAAS,WACdnD,IACDP,IACA,IAAIE,EAAMjH,KAAKC,MAAMC,aAAaC,QAAQ,SAASiI,IACnDpB,EAASC,GACT0F,EAAgBpH,IAAG/D,0BACnB0D,GAAU,SAAC0H,GAOT,OANAA,EAAID,GACFzG,GAAG,WAAY,WACfzD,QAAQC,IAAI,YAAYkK,EAAExJ,IAC1BwJ,EAAE1F,KAAK,UAAU,CAAC9D,GAAGwJ,EAAExJ,GAAIwF,KAAMP,OAG5BuE,MAKV,qBAAKya,KAAG,EAACpe,MAAO,CAACI,OAAO,SAAUN,UAAU,YAA5C,SAEC,eAACwC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACmO,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,MAArB,SACC,cAACrO,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,EAAGG,GAAI,EAAvB,SAA0B,cAAC,GAAD,QAExB,cAAC8N,GAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,MAArB,SACF,cAACrO,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SAAoB,cAAC,EAAD,QAIvB,eAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIG,GAAI,GAAvB,UACK,cAAC,EAAD,CAAWjD,KAAM,gBACjB,eAAC2C,EAAA,EAAD,CAAMC,WAAS,EAACvC,MAAO,CAAC+C,UAAU,UAAlC,UACI,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGG,GAAI,IACrB,eAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIG,GAAI,EAAvB,UACJ,eAACiB,EAAA,EAAD,CAAQ/D,UAAW,WACnBE,MAAO,CAAE8D,QAAQ,YAAavD,QAAQ,QAAQwD,gBAAgB,UAAUhB,UAAU,UACnFD,QAAQ,YACRI,MAAM,YACNc,WAAS,EACT9C,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,mBAAmBX,IALlD,UAMC,cAAE,IAAF,CAAgBY,UAAU,WAC1BoD,MAAQ,UAPT,iBAUHtH,GAAe,EACd,eAACiI,EAAA,EAAD,CAAQ/D,UAAW,WACjBE,MAAO,CAAE8D,QAAQ,YAAavD,QAAQ,QAAQwD,gBAAgB,UAAUhB,UAAU,UACpFD,QAAQ,YACPI,MAAM,YACLc,WAAS,EACT9C,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,wBAAwBX,IAL1D,UAMC,cAACgF,EAAA,EAAD,CAAOC,aAAcvI,EAAasH,MAAM,YAAYlD,MAAO,CAACgB,YAAY,UAAxE,SACE,cAAC,IAAD,CAAqBlB,UAAU,WAC/BoB,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,wBAAwBX,IACxDgE,MAAQ,YATX,wBAeF,eAACW,EAAA,EAAD,CAAQ/D,UAAW,WACfE,MAAO,CAAE8D,QAAQ,YAAcvD,QAAQ,QAAQwD,gBAAgB,UAAUhB,UAAU,UACrFD,QAAQ,YACPI,MAAM,YACNc,WAAS,EACR9C,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,wBAAwBX,IAL5D,UAMC,cAAC,IAAD,CAAqBY,UAAU,WAC3BoD,MAAQ,UAPb,0BAYD,eAACW,EAAA,EAAD,CAAQ/D,UAAW,WACdE,MAAO,CAAC8D,QAAQ,YAAYvD,QAAQ,QAAQwD,gBAAgB,UAAUhB,UAAU,UACjFD,QAAQ,YACRI,MAAM,YACLc,WAAS,EACV9C,QAAS,SAAA+C,GAAK,OAAKpF,EAAQgB,KAAK,iBAAiBX,IALrD,UAMM,cAAC,IAAD,CAAeY,UAAU,WACzBoD,MAAQ,UAPd,2BAWK,cAACZ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGG,GAAI,aCHpByb,GAvEJ,WAAM,IAAD,EACS5iB,qBADT,mBACPX,EADO,KACAmR,EADA,OAEOxQ,qBAFP,mBAEP6iB,EAFO,KAEHC,EAFG,OAGa9iB,oBAAS,GAHtB,mBAGPF,EAHO,KAGCuD,EAHD,OAIYrD,mBAAS,IAJrB,mBAIP4hB,EAJO,KAIA7Z,EAJA,KAad,OACE,qBAAK1D,UAAU,MAAf,SACA,cAACyT,GAAD,CAAiBzY,OAAQA,EAAzB,SACA,cAAC,EAAD,CAAqBA,OAAQA,EAAQS,QAASA,EAA9C,SACA,cAACD,EAAD,CAAgBnB,GAAImkB,EAAKjlB,MAAOyB,EAAQS,QAASA,EAAjD,SACA,eAAC,GAAD,WACF,cAAC,IAAD,IACE,cAAC,IAAD,UACE,eAAC,IAAD,WACM,cAAC,IAAD,CAAOijB,KAAK,IAAIC,OAAK,EAArB,SAAsB,cAAC,GAAD,CAAOzS,WAAYC,EAAOA,MAAOsS,EAAQhjB,QAASA,EAASuD,SAAUA,MAC3F,cAAC,IAAD,CAAO2f,OAAK,EAACD,KAAK,UAAUnb,UAAW+E,KACvC,cAAC,IAAD,CAAOqW,OAAK,EAACD,KAAK,SAAlB,SAA2B,cAAC,GAAD,CAAOxS,WAAYC,EAAQA,MAAOsS,EAAQhjB,QAASA,EAASuD,SAAUA,MACjG,cAAC,IAAD,CAAO2f,OAAK,EAACD,KAAK,wBAAwBnb,UAAW8I,KACrD,cAAC,GAAD,CAAWsS,OAAK,EAACD,KAAK,iBAAtB,SAAuC,cAAC,GAAD,CAAe1f,SAAUA,EAAU0E,SAAUA,MACpF,cAAC,IAAD,CAAOib,OAAK,EAACD,KAAK,yBAAyBnb,UAAW6J,KACtD,cAAC,IAAD,CAAOuR,OAAK,EAACD,KAAK,mBAAmBnb,UAAWwJ,KAChD,cAAC,IAAD,CAAO4R,OAAK,EAACD,KAAK,wBAAwBnb,UAAWkK,KACrD,cAAC,GAAD,CAAWiR,KAAK,+BAA+BN,OAAQ,SAACxS,GAAD,OACrD,wBAAC,GAAD,2BAAwBA,GAAxB,IAA+B5U,IAAK4U,EAAMgT,SAAS5nB,IAAKgI,SAAUA,MACjE2f,OAAK,EAACpb,UAAW0R,KAEpB,cAAC,GAAD,CAAWyJ,KAAM,oBAAoBN,OAAQ,SAACxS,GAAD,OAC3C,wBAAC,GAAD,2BAAgBA,GAAhB,IAAuB5U,IAAK4U,EAAMgT,SAAS5nB,IAAKgI,SAAUA,MACzD2f,OAAK,EAACpb,UAAW6N,KAEpB,cAAC,GAAD,CAAWsN,KAAO,2BAClBN,OAAQ,SAACxS,GAAD,OACN,wBAAC,GAAD,2BAAsBA,GAAtB,IAA6B5U,IAAK4U,EAAMgT,SAAS5nB,IAAKgI,SAAUA,MAC/D2f,OAAK,EAACpb,UAAWoP,KAEpB,cAAC,GAAD,CAAW+L,KAAM,sBACfN,OAAQ,SAACxS,GAAD,OACN,wBAAC,GAAD,2BAAgBA,GAAhB,IAAuB5U,IAAK4U,EAAMgT,SAAS5nB,IAAKgI,SAAUA,MACzD2f,OAAK,EAACpb,UAAWsR,KAErB,cAAC,GAAD,CAAW8J,OAAK,EAACD,KAAM,mBAAmBnb,UAAYwa,KACvD,cAAC,IAAD,CAAOY,OAAK,EAACD,KAAK,YAAYnb,UAAWuJ,KACzC,cAAC,GAAD,CAAW4R,KAAK,YAAYN,OAAQ,SAACxS,GAAD,OAClC,wBAAC,GAAD,2BAAUA,GAAV,IAAiB5U,IAAK4U,EAAMgT,SAAS5nB,IAAKgI,SAAUA,MACnD2f,OAAK,EAACpb,UAAWsb,KAEpB,cAAC,GAAD,CAAWH,KAAK,eAAeN,OAAQ,SAACxS,GAAD,OACrC,wBAAC,GAAD,2BAAaA,GAAb,IAAoB5U,IAAK4U,EAAMgT,SAAS5nB,IAAKgI,SAAUA,EAAUue,MAASA,MACzEoB,OAAK,EAACpb,UAAWub,KAEpB,cAAC,GAAD,CAAWH,OAAK,EAACD,KAAM,uBAAuBnb,UAAY8a,KAC1D,cAAC,IAAD,CAAUvjB,GAAG,+BC7EVikB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhmB,MAAK,YAAkD,IAA/CimB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCqCdO,IAASnB,OAAO,cAAC,GAAD,IAAQoB,SAASC,eAAe,SAIhDV,M","file":"static/js/main.a9077b43.chunk.js","sourcesContent":["export const setLocalStorage = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\nexport const getLocalStorage = (key) => {\r\n  return JSON.parse(localStorage.getItem(key));\r\n};\r\nexport const removeLocalStorage = (key) => {\r\n  localStorage.removeItem(key);\r\n};","import { setCookie, getCookie, removeCookie } from \"./cookies\";\r\nimport {\r\n  setLocalStorage,\r\n  getLocalStorage,\r\n  removeLocalStorage,\r\n} from \"./localStorage\";\r\nexport const authentication = (token, user) => {\r\n  setCookie(\"token\", token);\r\n  setLocalStorage(\"user\", user);\r\n};\r\nexport const isAuthenticated = () => {\r\n  if (getCookie(\"token\") && getLocalStorage(\"user\"))\r\n    return getLocalStorage(\"user\");\r\n};\r\nexport const logout = (next) => {\r\n  removeCookie(\"token\");\r\n  removeLocalStorage(\"user\");\r\n  removeLocalStorage(\"friendId\");\r\n  removeLocalStorage(\"recName\");\r\n  removeLocalStorage(\"profileUrl\");\r\n  removeLocalStorage(\"recLang\");\r\n  removeLocalStorage(\"messagecount\");\r\n  removeLocalStorage(\"friendRequests\");\r\n  next();\r\n};\r\n\r\nexport const isLogin = () => {\r\n  \r\n};","import Cookies from \"js-cookie\";\r\nexport const setCookie = (key, value) => {\r\n  Cookies.set(key, value, { expires: 1 });\r\n};\r\nexport const getCookie = (key) => {\r\n  return Cookies.get(key);\r\n};\r\nexport const removeCookie = (key) => {\r\n  return Cookies.remove(key);\r\n};","import axios from \"axios\";\r\naxios.defaults.baseURL = process.env.REACT_APP_IP_URL+\"api/\";\r\naxios.defaults.headers.common[\"x-auth-token\"] = localStorage.getItem(\"token\");\r\nclass GenericService {\r\n    get = (url) => {\r\n       return new Promise((resolve,reject) => {\r\n            axios.get(url)\r\n            .then((res) => {\r\n              resolve(res.data);\r\n            })\r\n            .catch((err) => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    getMessage = (url,email) => {\r\n        return new Promise((resolve,reject) => {\r\n             axios.get(url,{params:{email: email}})\r\n             .then((res) => {\r\n               resolve(res.data);\r\n             })\r\n             .catch((err) => {\r\n                 reject(err);\r\n             });\r\n         });\r\n     }\r\n\r\n    post = (url,data) => {\r\n        return new Promise((resolve,reject) => {\r\n            axios.post(url,data).then((res) => {\r\n                resolve(res.data);\r\n            }).catch((err) => {\r\n                console.log(\"Errrr\");\r\n                reject(err);\r\n            });\r\n            });\r\n        }\r\n    put = (url,data)=>{\r\n        return new Promise((resolve,reject)=>{\r\n            axios.put(url,data).then((res)=>{\r\n                resolve(res.data)\r\n            }).catch((err)=>{\r\n                reject(err)\r\n            });\r\n            });\r\n    }\r\n    delete = (url)=>{\r\n        return new Promise((resolve,reject)=>{\r\n            axios.delete(url).then((res)=>{\r\n                resolve(res.data)\r\n            }).catch((err)=>{\r\n                reject(err)\r\n            });\r\n            });\r\n    }\r\n}\r\nexport default GenericService;","import GenericService from \"./GenericService\";\r\nclass FriendService extends GenericService {\r\n  \r\n  sendRequest   = (data) => this.post(\"friends/send-friend-request\", data);\r\n  cancelRequest = (data) => this.post(\"friends/cancel-friend-request\", data);\r\n  acceptRequest = (data) => this.post(\"friends/accept-friend-request\", data);\r\n  rejectRequest = (data) => this.post(\"friends/reject-friend-request\", data);\r\n  deleteFriend  = (data) => this.post(\"friends/delete-friend\", data);\r\n  getFriendRequest =(id) =>  this.get(\"friends/my-friend-requests/\" + id);\r\n  getSentFriendRequest =(id) =>  this.get(\"friends/sent-friend-requests/\" + id);\r\n  getAllFriends =(id) =>  this.get(\"friends/my-friends-list/\" + id);\r\n  getFriendRequestsCount =(id)=> this.get(\"friends/my-friend-requests-count/\" + id);\r\n}\r\n\r\nlet friendService = new FriendService();\r\nexport default friendService;","import GenericService from \"./GenericService\";\r\nclass ChatService extends GenericService{\r\n\r\n    getMessages = () => {\r\n        return this.get(\"chatapi\");\r\n    }\r\n    createMessage = (data) => {\r\n        return this.post(\"chatapi\",data);\r\n    }\r\n    getMessagesbyEmail = (from,to) =>{\r\n        return this.get(\"chatapi/msgbyemail/\"+from+\" \"+to)\r\n    }\r\n    getMessagesbyUserId = (userId) =>{\r\n        return this.get(\"chatapi/msgbyuserid/\"+userId)\r\n    }\r\n    getChatRecipients = (userId) =>{\r\n        return this.get(\"chatapi/chatrecipients/\"+userId)\r\n    }\r\n    getLastMsg = (from,to) =>{\r\n        return this.get(\"chatapi/lastmsg/\"+from+\" \"+to)\r\n    }\r\n    deleteMessage = (id) =>{\r\n        return this.delete(\"chatapi/\"+ id)\r\n    }\r\n    changeMessageType = (data,id)=>{\r\n        return this.put(\"chatapi/\"+id, data)\r\n    }\r\n    offlinemessages = (id)=>{\r\n        return this.get(\"chatapi/offlinemessages/\"+id);\r\n    }\r\n}\r\n\r\nlet chatservice = new ChatService();\r\nexport default chatservice;","import React ,{createContext,useEffect,useState,useRef} from 'react'\r\nimport io from \"socket.io-client\";\r\nimport { toast } from 'react-toastify';\r\nimport { isAuthenticated } from \"../components/FrontendComponents/clientStorages/auth\";\r\nimport friendService from \"../services/friendService\";\r\nimport chatservice from '../services/ChatService';\r\nimport { Slide, Zoom, Flip, Bounce } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const SocketContext = createContext();\r\nexport function SocketProvider({id,email,isLogin,children}) {\r\n  \r\n  const [obj, setObj] = useState({})\r\n  const [frndcounter,setFrndCounter]= useState(0)\r\n  const [msgCount,setMsgCount]=useState(0);\r\n  const [clientSocket, setSocket] = useState()\r\n  //let msgCount = useRef(0)\r\n  let count=0;\r\n  let roomId = useRef()\r\n  \r\n  useEffect(() => {\r\n    \r\n    const socket = io(\r\n      process.env.REACT_APP_IP_URL,\r\n    )\r\n    setSocket(socket)\r\n    return () => socket.close()\r\n    \r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    roomId.current= '/'+id\r\n    console.log(roomId)\r\n  },[])\r\n\r\n  const messageCounter=()=>{\r\n\r\n    chatservice.offlinemessages(email)\r\n        .then((res)=>{  \r\n          setObj((o)=>{\r\n            o = {sender: res.info.sender, receiver: res.info.receiver}\r\n            return o\r\n          })\r\n                setMsgCount((c)=>{   \r\n                      c= res.count\r\n                   return c\r\n                })\r\n                console.log(\"Message Count is\",msgCount);\r\n                 localStorage.setItem(\"messagecount\",JSON.stringify(msgCount))\r\n        })\r\n        .catch((err)=>console.log(err))}\r\n\r\n  useEffect(()=>messageCounter,[])\r\n\r\n  useEffect(()=>{\r\n    if(isLogin){\r\n    newMessageEvent()\r\n    console.log(\"new message event mounted\")\r\n    }\r\n  },[isLogin])\r\n  \r\n\r\n  const newMessageEvent = () => {\r\n    let counter = JSON.parse(localStorage.getItem(\"messagecount\"))\r\n    console.log(\" new msg event \")\r\n    if(clientSocket){\r\n      clientSocket.on(\"newMessage\", (payload) => {\r\n      toast(payload.RecipientName +':'+\r\n        payload.payload.messageBody, {\r\n          onOpen: () => console.log('Called when I open'),\r\n          position: toast.POSITION.TOP_LEFT,\r\n          //toastId: '007',\r\n          transition: Bounce\r\n        })\r\n      //count=count+1\r\n      console.log(\"new message\",payload)\r\n      //messageCounter();\r\n      \r\n      setMsgCount((c)=>{\r\n        c =  c + 1\r\n        localStorage.setItem(\"messagecount\",JSON.stringify(c))\r\n        localStorage.setItem(\"MyC\",JSON.stringify(c))\r\n        return c\r\n      })\r\n      })\r\n    }\r\n    else {\r\n      console.log(\"no socket\")\r\n    }  \r\n  //return () => {clientSocket.removeAllListeners(\"newMessage\");}\r\n  }\r\n\r\n  const roomJoin = (did) =>{\r\n    //did = did || roomId.current\r\n    did = '/'+did\r\n    if(clientSocket){\r\n      clientSocket.emit(\r\n        \"NotificationRoom\",\r\n        { myNotificationRoom : did},\r\n        ({error,room}) => {\r\n          if (!error) {\r\n            console.log(\"joined room with id\", room);\r\n          } else {\r\n            console.log(\"error joining room\", error);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  const getAllRequests=()=>{\r\n    friendService.getFriendRequest(id).then((data)=>{\r\n      setFrndCounter(data.length);\r\n      localStorage.setItem(\"friendRequests\",JSON.stringify(data.length))\r\n     })\r\n     .catch((err=>{console.log(err)}))\r\n}\r\n  useEffect(()=>getAllRequests,[frndcounter])\r\n\r\n  const getFriendRequest = () => {\r\n    if(clientSocket)\r\n    {\r\n    clientSocket.on(\"newRequest\", () => getAllRequests())\r\n    clientSocket.on(\"rejectRequest\", (payload) => getAllRequests())\r\n    }\r\n    else\r\n    console.log(\"no socket\")\r\n  }\r\n\r\n  const friendReqEvent = () =>{\r\n    console.log(\"friend Req event\")\r\n    if(clientSocket){\r\n      clientSocket.on(\"newRequest\", (payload) => {\r\n          console.log(\"payload : \",payload)\r\n          toast.info(\r\n          payload.sender+ ' has sent you a friend request!', {\r\n          position: toast.POSITION.TOP_LEFT,\r\n          //toastId: '009',\r\n          autoClose: 7000,\r\n          transition: Bounce\r\n        })\r\n      })\r\n    }\r\n    else{\r\n      console.log(\"no socket\")\r\n    }\r\n  }\r\n  \r\n\r\n  let value={\r\n    clientSocket : clientSocket,\r\n    setSocket : setSocket,\r\n    messageEvent : newMessageEvent,\r\n    roomJoin : roomJoin,\r\n    friendReq : friendReqEvent,\r\n    getRequest: getFriendRequest,\r\n    frndcounter:frndcounter,\r\n    acceptRejectCounter:getAllRequests,\r\n    msgCounter:msgCount,\r\n    msgNotify:messageCounter,\r\n    obj : obj\r\n  }\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  )\r\n\r\n  \r\n}","import React, { Fragment,useContext } from \"react\";\r\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\r\nimport { isAuthenticated, logout } from \"../clientStorages/auth\";\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nconst Header = ({ history,setLogin }) => {\r\n  history = useHistory();\r\n  const firstName= isAuthenticated().firstName;\r\n  const lastName = isAuthenticated().lastName;\r\n  const myId = isAuthenticated()._id;\r\n  const myEmail = isAuthenticated().email\r\n  const myProfileImg =isAuthenticated().profileImg;\r\n  const {clientSocket} = useContext(SocketContext);\r\n  const handleLogOut = (evt) => {\r\n    logout(() => {\r\n      setLogin(false)\r\n      if(clientSocket!==undefined){\r\n        clientSocket.emit(\"removeuser\",{id:clientSocket.id, name: myEmail})\r\n        clientSocket.off(\"newMessage\");\r\n        clientSocket.off(\"newrequest\");\r\n        clientSocket.off(\"messageSend1\");\r\n      }\r\n      else{\r\n        console.log(\"no socket\")\r\n      }\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  const showNavbar = () => (\r\n    <div>\r\n      <nav id=\"nav\" className=\"navbar navbar-expand-lg navbar-light mt-0\">\r\n         \r\n        <div className=\"navbar-brand\"> \r\n       <Link to={{ pathname: `/update-my-profile-setup/${myId}` }} style={{textDecoration:\"none\"}}>\r\n        <img\r\n          src= {myProfileImg}\r\n          alt=\"Profile\"\r\n           \r\n          style={{ height: \"50px\", width: \"50px\", borderRadius: \"50%\",display:\"inline\" }}\r\n         onclick={()=>history.push('/update-my-profile-setup/'+myId)}\r\n        /> </Link> \r\n        <span className=\"header_name\">{firstName +\" \" + lastName}</span></div>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNavDropdown\"\r\n          aria-controls=\"navbarNavDropdown\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n          <ul\r\n            className=\"\r\n              navbar-nav\r\n              ml-auto\r\n              mt-2\r\n              mt-lg-0\"\r\n           \r\n          >\r\n            \r\n\r\n            {isAuthenticated() && isAuthenticated().role === 0 && (\r\n              <Fragment>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/notFound\" className=\"nav-link \">\r\n                     \r\n                  </Link>\r\n                </li>\r\n                 <li className=\"nav-item\" style ={{marginRight:\"1rem\"}}>\r\n                  <Link to={{pathname: '/dashboard/'+myId}} className=\"nav-link\">\r\n                     <i className=\"fa fa-home\" aria-hidden=\"true\"></i>  Dashboard\r\n                  </Link>\r\n                </li>\r\n                 <li className=\"nav-item\">\r\n                  <button\r\n                    className=\"btn text-decoration-none btn-link   pl-0 nav-link\"\r\n                    style={{textDecoration:\"none\"}}\r\n                    onClick={handleLogOut}\r\n                  >\r\n                    <i className=\"fas fa-sign-out-alt\" aria-hidden=\"true\"></i> Logout\r\n                  </button> \r\n                </li>\r\n              </Fragment>\r\n            )}\r\n             \r\n            \r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n  return <header>{showNavbar()}</header>;\r\n};\r\n\r\nexport default withRouter(Header);","import React ,{createContext, useEffect, useState} from 'react'\r\nimport chatservice from '../services/ChatService'\r\n//import {showNotification} from '../components/FrontendComponents/Alerts/showMessage'\r\n//import Notification from '../components/FrontendComponents/Alerts/Notification'\r\nimport { toast } from 'react-toastify';\r\nimport { Slide, Zoom, Flip, Bounce } from 'react-toastify';\r\nimport { isAuthenticated } from \"../components/FrontendComponents/clientStorages/auth\";\r\nexport const ChatContext = createContext();\r\n\r\nexport const ChatContextProvider = ({userId,isLogin, children}) =>{\r\n    let elem = null\r\n    let msg = ''\r\n    let email;\r\n    const [obj, setObj] = useState({})\r\n    const [count,setCount]= useState(0)\r\n    window.onload =()=>{\r\n        email = JSON.parse(localStorage.getItem(\"user\").email)\r\n        getUnreadMsgs(email)\r\n    }\r\n    useEffect(()=>{\r\n        console.log(\"is Login\",isLogin)\r\n        if(isLogin){\r\n            getUnreadMsgs(userId)\r\n        }\r\n        \r\n    },[isLogin])\r\n\r\n    useEffect(()=>{\r\n        setCountObject()\r\n    },[])\r\n\r\n    const getUnreadMsgs =(email)=>{\r\n        chatservice.offlinemessages(email)\r\n        .then((res)=>{\r\n            if(res.count > 0){\r\n                console.log(\"count\",res.count)\r\n                msg = 'You have '+res.count+ ' new messages!'\r\n                if(res.info.sender[0] !== userId){\r\n                    console.log(\"sender\",res.info.sender)\r\n                    console.log(\"user\",userId)\r\n                toast.info(msg,{\r\n                position: toast.POSITION.TOP_LEFT,\r\n                transition: Zoom\r\n            })\r\n                }\r\n                else{\r\n                    console.log(\"is sender\")\r\n                }\r\n        \r\n            }\r\n        })\r\n        .catch((err)=>console.log(err))\r\n    }\r\n\r\n    const setCountObject = ()=>{\r\n        chatservice.offlinemessages(email)\r\n            .then((res)=>{\r\n                if(res.count > 0){\r\n                  setObj((o)=>{\r\n                    o = {sender: res.info.sender, receiver: res.info.receiver}\r\n                    return o\r\n                  })\r\n                  //obj = {sender: res.info.sender, receiver: res.info.receiver}\r\n                  console.log(\"obj\",obj)\r\n                  setCount((c)=>{\r\n                    c = res.count\r\n                    return c\r\n                  })\r\n           \r\n                }\r\n            })\r\n            .catch((err)=>console.log(err))\r\n    }\r\n    \r\n    \r\n    return (\r\n        <ChatContext.Provider value = {{getUnreadMsgs: getUnreadMsgs, count: count, obj:obj, setCounter : setCount}}>\r\n        \r\n            {children}\r\n        </ChatContext.Provider>\r\n    );\r\n}\r\n","import GenericService from \"./GenericService\";\r\nclass AccountService extends GenericService {\r\n \r\n   accountActivation = (data) => this.post(\"users/activation\", data);\r\n   forgotPassword = (data) => this.put(\"users/forgot-password\", data);\r\n   resetPassword = (data) => this.put(\"users/reset-password\", data);\r\n   profileSetup =(data)=>this.post(\"users/profile-setup\",data);\r\n   updateProfileSetup = (_id, data) =>this.put(\"users/update-profile-setup/\" + _id, data);\r\n   getMyAccount =(id) => this.get(\"users/my-account/\" + id);\r\n   deleteMyAccount =(id)=> this.delete(\"users/delete-my-account/\"+id);\r\n}\r\nlet accountService = new AccountService();\r\nexport default accountService;","import React from \"react\";\r\nimport {Grid,Typography} from \"@material-ui/core\";\r\n import {brown} from '@material-ui/core/colors';\r\nconst PageTitle = ({name}) => {\r\n  return <div>\r\n     <Grid container >\r\n      <Grid item xs={1} sm={2} xm={5} md={4}></Grid>\r\n      <Grid item xs={10} sm={8} xm={2} md={4}>\r\n      <Typography variant=\"headline\" \r\n         style={{ \r\n          marginTop:\"1.5rem\",\r\n         textAlign:\"center\",\r\n         fontSize:\"4rem\",\r\n         color:brown[300],\r\n         fontFamily:\"Brush Script MT, Brush Script Std, cursive\"}}\r\n          component=\"h1\">{name}</Typography>\r\n        <hr style ={{marginBottom:\"1rem\"}}/>  \r\n      </Grid>\r\n      \r\n    <Grid item  xs={1} sm={2} xm={5} md={4}></Grid>\r\n    </Grid>\r\n \r\n    </div>;\r\n};\r\n\r\nexport default PageTitle;","import React, { useEffect, useState,useContext,useRef } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport {ChatContext} from '../../../context/ChatContext';\r\nimport io from \"socket.io-client\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport GroupAddRoundedIcon from '@material-ui/icons/GroupAddRounded';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport chatservice from '../../../services/ChatService';\r\nimport accountService from '../../../services/accountService';\r\nimport friendService from '../../../services/friendService';\r\n //import { ToastContainer } from 'react-toastify';\r\n//import Toast from 'react-bootstrap/Toast' \r\nimport '../../ChatComponents/chat.css'\r\nimport PageTitle from \"./pageTitle\";\r\n\r\n\r\nconst UserDashboard = ({setLogin,setUsers}) => {\r\n  //const {chatRecipients,setRecipients,getRecData} = useContext(MyChatsContext);\r\n  //const [obj, setObj] = useState({})\r\n  const myId= isAuthenticated()._id;\r\n  //const [msgCounter,setMsgCounter]= useState(0)\r\n  //const [friendCount,setFriendCount]=useState(0);\r\n  let showBtn = useRef(0)\r\n  let userEmail = useRef()\r\n  let history = useHistory()\r\n  userEmail.current = JSON.parse(localStorage.getItem(\"user\")).email\r\n  console.log(userEmail)\r\n  const {clientSocket,setSocket,messageEvent,roomJoin,friendReq,getRequest,frndcounter,msgNotify,msgCounter,acceptRejectCounter} = useContext(SocketContext);\r\n  //const {count, obj} = useContext(ChatContext);\r\n\r\n  console.log(\"counter in dashbord\",msgCounter)\r\n  let clientSocket1 = useRef()\r\n  useEffect(()=>msgNotify,[])\r\n   window.onload = () => {\r\n       friendReq()\r\n       acceptRejectCounter()\r\n       msgNotify()\r\n     messageEvent()\r\n     getRequest()\r\n    roomJoin(myId)\r\n    clientSocket1 = io(process.env.REACT_APP_IP_URL)\r\n  setSocket((s)=>{\r\n      s = clientSocket1\r\n      s.on('connect' , () => {\r\n        console.log(\"connected\",s.id);\r\n        s.emit(\"adduser\",{id:s.id, name: userEmail.current})\r\n        \r\n      });\r\n      return s;\r\n    })\r\n  };\r\nconst DeleteAccount =()=>{\r\naccountService.deleteMyAccount(myId)\r\n .then((res) =>history.push('/signup'))\r\n  .catch((err) => console.log(err));\r\n}\r\n  /* useEffect(()=>{\r\n\r\n    clientSocket.on(\"messagecounter\", (payload) => {\r\n      // console.log(\" counter : \",payload)\r\n      //setCount(payload.counter) \r\n    });\r\n    chatservice.offlinemessages(isAuthenticated().email)\r\n        .then((res)=>{\r\n            if(res.count > 0){\r\n              setObj((o)=>{\r\n                o = {sender: res.info.sender, receiver: res.info.receiver}\r\n                return o\r\n              })\r\n              //obj = {sender: res.info.sender, receiver: res.info.receiver}\r\n              console.log(\"obj\",obj)\r\n              setCount((c)=>{\r\n                c = res.count\r\n                return c\r\n              })\r\n       \r\n            }\r\n        })\r\n        .catch((err)=>console.log(err))\r\n\r\n  },[]) */\r\n/* useEffect(()=>{\r\n  console.log(\"count value\",count)\r\n  friendService.getFriendRequestsCount(myId)\r\n  .then((res)=>{ \r\n     if(res> 0)\r\n     setFriendCount(res)\r\n  })\r\n  .catch((err)=>console.log(err))\r\n},[]) */\r\n  \r\n  \r\n   useEffect(()=>{\r\n    if(clientSocket!==undefined){\r\n        console.log(clientSocket)\r\n        clientSocket.emit(\"adduser\",{id:clientSocket.id, name: userEmail.current}, (usersArray)=>{\r\n          //console.log(\"users array\",usersArray)\r\n          setUsers(usersArray)\r\n        })\r\n      }\r\n      else{\r\n        console.log(\"no socket\")\r\n      }\r\n   },[])\r\n\r\n   useEffect (()=>{\r\n    //friendReq()\r\n     //messageEvent()\r\n     //console.log(\"message event\")\r\n     //friendReq()\r\n   },[]);\r\n\r\n   useEffect (()=>{\r\n    roomJoin(myId)\r\n  },[]);\r\n\r\n  return <div style={{height:\"100vh\"}} className=\"back_divs\">\r\n    <Header setLogin={setLogin}/>\r\n    <PageTitle name={\"Dashboard\"}/>\r\n   {/* <ToastContainer/> */}\r\n     <Grid container>\r\n       <Grid item xs={1} md={4}></Grid>\r\n       <Grid item xs={10} md={4}>\r\n          <Button className= \"loginbtn\"\r\n             style={{padding:\"10px 20px\",display:\"block\",backgroundColor:\"#C8906A\"}}\r\n            variant=\"contained\" \r\n            color=\"Secondary\"\r\n            fullWidth\r\n            onClick={event =>  history.push('/all-contacts/'+myId)}>\r\n              <PersonAddIcon className='chaticon'\r\n              color = \"white\"/> Add New friend\r\n            </Button>\r\n            <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 40px\",marginTop:\"2rem\",display:\"block\",backgroundColor:\"#C0C86A\"}}\r\n            variant=\"contained\" \r\n            color=\"Secondary\"\r\n            fullWidth\r\n            onClick={event =>  history.push('/all-my-friends/'+myId)}>\r\n              < PeopleAltIcon className='chaticon'\r\n              color = \"white\"/> My Friends\r\n            </Button>\r\n    {/*         {\r\n    obj.sender !== undefined ?\r\n        obj.sender.forEach((o)=>\r\n        {\r\n            o !== userEmail.current ?\r\n            showBtn.current = showBtn.current + 1\r\n          :\r\n          showBtn.current = 0\r\n          })\r\n    :\r\n    null\r\n    } */}\r\n    \r\n        {\r\n          //showBtn.current >= 1 ?\r\n          msgCounter>=1 ?\r\n           <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 20px\" , marginTop:\"2rem\",display:\"block\",backgroundColor:\"#D582BD\"}}\r\n           variant=\"contained\" \r\n            color=\"Secondary\" \r\n            fullWidth\r\n             onClick={event =>  history.push('/mychats/'+myId)}>\r\n            <Badge badgeContent={msgCounter} color=\"secondary\" style={{marginRight:\"0.5rem\"}}>\r\n              <ChatIcon className='chaticon'\r\n              onClick={event =>  history.push('/mychats/'+myId)}\r\n              color = \"white\"\r\n              />  \r\n            </Badge>\r\n            My Chats\r\n            </Button>\r\n          :\r\n         <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 50px\" ,marginTop:\"2rem\",display:\"block\",backgroundColor:\"#D582BD\"}}\r\n           variant=\"contained\" \r\n            color=\"Secondary\" \r\n            fullWidth\r\n             onClick={event =>  history.push('/mychats/'+myId)}>\r\n          <ChatIcon className='chaticon'\r\n              color = \"white\"\r\n              />  My Chats\r\n            </Button>\r\n            \r\n        }    \r\n         {\r\n          frndcounter >= 1 ?\r\n           <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 20px\" , marginTop:\"2rem\",display:\"block\",backgroundColor:\"#8298D5\"}}\r\n           variant=\"contained\" \r\n            color=\"Secondary\" \r\n            fullWidth\r\n             onClick={event =>  history.push('/all-friend-requests/'+myId)}>\r\n            <Badge badgeContent={frndcounter} color=\"secondary\" style={{marginRight:\"0.5rem\"}}>\r\n              <GroupAddRoundedIcon className='chaticon'\r\n              onClick={event =>  history.push('/all-friend-requests/'+myId)}\r\n              color = \"white\"\r\n              />  \r\n            </Badge>\r\n            My Friend Requests\r\n            </Button>\r\n          :\r\n         <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 50px\" ,marginTop:\"2rem\",display:\"block\",backgroundColor:\"#8298D5\"}}\r\n           variant=\"contained\" \r\n            color=\"Secondary\" \r\n            fullWidth\r\n             onClick={event =>  history.push('/all-friend-requests/'+myId)}>\r\n          <GroupAddRoundedIcon className='chaticon'\r\n              color = \"white\"\r\n              />  My Friend Requests\r\n            </Button>\r\n            \r\n        }\r\n         <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 27px\",marginTop:\"2rem\",display:\"block\",backgroundColor:\"#69B6CF\"}}\r\n           variant=\"contained\" \r\n            color=\"Secondary\"\r\n            fullWidth\r\n            onClick={event =>  history.push('/update-my-profile-setup/'+myId)}>\r\n              <SettingsIcon className='chaticon'\r\n              color = \"white\"/>Update Profile\r\n            </Button>\r\n       \r\n             <Button className= \"loginbtn\"\r\n             style={{padding:\"10px 20px\",marginTop:\"2rem\",display:\"block\",backgroundColor:\"#C3767F\"}}\r\n            variant=\"contained\" \r\n            color=\"Secondary\"\r\n            fullWidth\r\n            onClick={DeleteAccount}>\r\n              <DeleteIcon className='chaticon'\r\n              color = \"white\"/> Delete Account\r\n            </Button>\r\n             \r\n       </Grid>\r\n        <Grid item xs={1} md={4}></Grid>\r\n     </Grid>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    </div>\r\n};\r\n\r\nexport default UserDashboard;","import React from \"react\"\r\nimport { Grid ,Typography} from \"@material-ui/core\"\r\nimport { brown } from \"@material-ui/core/colors\";\r\n\r\nconst LogoPage = ({ name }) => {\r\nreturn(\r\n <Grid container >\r\n      <Grid item xs={1} sm={2} xm={5} md={4}></Grid>\r\n      <Grid item xs={10} sm={8} xm={2} md={6}>\r\n        \r\n     <Typography variant=\"headline\" \r\n         style={{ \r\n          marginTop:\"1rem\",\r\n         position: \"relative\",\r\n         fontSize:\"5rem\",\r\n         color:brown[300],\r\n          marginBottom:\"1rem\",\r\n         fontFamily:\"Brush Script MT, Brush Script Std, cursive\"}}\r\n          component=\"h1\">\r\n               <img className=\"loginImg\" src={process.env.PUBLIC_URL + '/images/logo.png'} />{name}\r\n          </Typography>\r\n      \r\n      </Grid>\r\n      \r\n    <Grid item  xs={1} sm={2} xm={5} md={2}></Grid>\r\n    </Grid>\r\n    )}\r\nexport default LogoPage;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nexport default function LinearBuffer() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [buffer, setBuffer] = React.useState(10);\r\n\r\n  const progressRef = React.useRef(() => {});\r\n  React.useEffect(() => {\r\n    progressRef.current = () => {\r\n      if (progress > 100) {\r\n        setProgress(0);\r\n        setBuffer(10);\r\n      } else {\r\n        const diff = Math.random() * 10;\r\n        const diff2 = Math.random() * 10;\r\n        setProgress(progress + diff);\r\n        setBuffer(progress + diff + diff2);\r\n      }\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      progressRef.current();\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress variant=\"buffer\" value={progress} valueBuffer={buffer} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { amber, green } from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\nconst AlertBar = ({ type, message, autoClose }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const Icon = variantIcon[type];\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={open}\r\n      autoHideDuration={autoClose}\r\n      onClose={handleClose}\r\n    >\r\n      <SnackbarContent\r\n        className={clsx(classes[type])}\r\n        aria-describedby=\"client-snackbar\"\r\n        message={\r\n          <span id=\"client-snackbar\" className={classes.message}>\r\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n\r\n            {message}\r\n          </span>\r\n        }\r\n        action={[\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"close\"\r\n            color=\"inherit\"\r\n            onClick={handleClose}\r\n          >\r\n            <CloseIcon className={classes.icon} />\r\n          </IconButton>,\r\n        ]}\r\n      />\r\n    </Snackbar>\r\n  );\r\n};\r\nexport default AlertBar;\r\n","import axios from \"axios\";\r\naxios.defaults.headers.common[\"x-auth-token\"] =localStorage.getItem(\"token\");\r\nexport const signup = async (data) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const response = await axios.post(process.env.REACT_APP_IP_URL+\"api/users/signup\", data);\r\n  return response;\r\n};\r\nexport const login = async (data) => {\r\n  console.log(process.env.REACT_APP_IP_URL)\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const response = await axios.post(process.env.REACT_APP_IP_URL+\"api/users/login\", data);\r\n  return response;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport clsx from 'clsx';\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  InputAdornment,\r\n  InputLabel,\r\n  FormControl,\r\n  Input,\r\n  IconButton,\r\n  Typography,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Radio,\r\n  Paper,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\nimport LogoPage from \"./LogoPage\"\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { grey, cyan} from '@material-ui/core/colors';\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport isEmpty from \"validator/lib/isEmpty\";\r\nimport equals from \"validator/lib/equals\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { signup } from \"../api/auth\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\n \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   \r\n  textfield: {\r\n     marginTop: theme.spacing(2.5),\r\n  },\r\n  margin:{\r\n         marginTop: theme.spacing(2.5),\r\n  }\r\n   \r\n}));\r\nconst SignUp = () => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    if (isAuthenticated() && isAuthenticated().role === 1)\r\n      history.push(\"/dashboard\");\r\n    else if (isAuthenticated() && isAuthenticated().role === 0)\r\n      history.push(\"/dashboard\");\r\n  }, [history]);\r\n  const [values, setValues] = useState({\r\n    firstName: \"\",\r\n    lastName:\"\",\r\n    email: \"\",\r\n    gender:\"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    errorMessage: \"\",\r\n    successMsg: \"\",\r\n    showPassword: false,\r\n    showPassword1: false,\r\n    loading: false,\r\n  });\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    gender,\r\n    password,\r\n    confirmPassword,\r\n    errorMessage,\r\n    successMsg,\r\n    loading,\r\n  } = values;\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n      errorMessage: \"\",\r\n      successMsg: \"\",\r\n    });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n  const handleClickShowConfirmPassword = () => {\r\n    setValues({ ...values, showPassword1: !values.showPassword1 });\r\n  };\r\n   \r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const handleTextChange = (evt) => {\r\n    setValues({\r\n      ...values,\r\n      [evt.target.name]: evt.target.value,\r\n      errorMessage: \"\",\r\n      successMsg: \"\",\r\n    });\r\n  };\r\n  const Register = (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      isEmpty(firstName) ||\r\n      isEmpty(lastName) ||\r\n      isEmpty(email) ||\r\n      isEmpty(password) ||\r\n      isEmpty(confirmPassword)||isEmpty(gender)) \r\n      {\r\n      setValues({ ...values, errorMessage: \"All fields are required\" });\r\n      } else if (!isEmail(email)) {\r\n      setValues({ ...values, errorMessage: \"Invalid Email\" });\r\n      } else if (!equals(password, confirmPassword)) {\r\n      setValues({ ...values, errorMessage: \"Password do not matched\" });\r\n      } else {\r\n      const { firstName,lastName, email, password ,gender} = values;\r\n      const data = { firstName,lastName,  email, password ,gender};\r\n      setValues({ ...values, loading: true });\r\n      signup(data)\r\n        .then((response) => {\r\n          setValues({\r\n            ...values,\r\n            firstName: \"\",\r\n            lastName:\"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            gender:\"\",\r\n            errorMessage: false,\r\n            successMsg: response.data.successMessage,\r\n            loading: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setValues({\r\n            ...values,\r\n            loading: false,\r\n            errorMessage: err.response.data.errorMessage,\r\n          });\r\n        });\r\n    }\r\n  };\r\n    \r\n  const SignUpForm = () => (\r\n    <div className=\"signup-container\">\r\n      <Grid container>\r\n        <Grid item xs={1} sm={3} md={4}></Grid>\r\n        <Grid item xs={10} sm ={6} md={4}>\r\n        <Paper  className=\"Login-container\" style={{padding: '30px 30px'}} >\r\n              <Grid container style={{textAlign:\"center\"}}>\r\n          <Grid item xs={6} >\r\n            <Link className=\"header\"  to=\"/login\">Sign In</Link>      \r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Link className=\"active-header\" to=\"/signup\">Sign Up</Link>\r\n          </Grid>\r\n\r\n        </Grid>\r\n          <TextField\r\n            className={classes.textfield}\r\n            id=\"filled-start-adornment\"\r\n             \r\n            value={values.firstName}\r\n            label= {\r\n              <div> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> firstName </Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\"}}>*</Typography>\r\n                  </div>\r\n            }\r\n            name=\"firstName\"\r\n            \r\n            fullWidth\r\n            onChange={handleTextChange}\r\n             InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n             <AccountCircleIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n          />\r\n           <TextField\r\n            className={classes.textfield}\r\n            id=\"filled-start-adornment1\"\r\n            value={values.lastName}\r\n            label= {\r\n              <div> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> lastName </Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\"}}>*</Typography>\r\n                  </div>\r\n            }\r\n            name=\"lastName\"\r\n            \r\n            fullWidth\r\n            onChange={handleTextChange}\r\n             InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n             <AccountCircleIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n          />\r\n          <TextField\r\n            className={classes.textfield}\r\n            label= {\r\n              <div> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\" }}> Email Address </Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\"  }}>*</Typography>\r\n                  </div>\r\n            }\r\n            id=\"filled-start-adornment1\"\r\n            \r\n            name=\"email\"\r\n            value={values.email}\r\n            fullWidth\r\n            onChange={handleTextChange}\r\n             InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n             <EmailIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n          />\r\n              \r\n        <FormControl className={clsx(classes.margin, classes.textField)} fullWidth>\r\n         <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\" }}>*</Typography>\r\n         </InputLabel>\r\n                    <Input\r\n            id=\"standard-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n              \r\n          startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <LockIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n        \r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n         \r\n          <FormControl className={clsx(classes.margin, classes.textField)} fullWidth>\r\n                 <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> Confirm Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\" }}>*</Typography>\r\n         </InputLabel>\r\n           <Input\r\n            id=\"standard-adornment-confirmPassword\"\r\n            type={values.showPassword1 ? 'text' : 'password'}\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange('confirmPassword')}\r\n             startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <VpnKeyIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowConfirmPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword1 ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n    <FormControl component=\"fieldset\" className={classes.margin}>\r\n      <FormLabel component=\"legend\">  \r\n            <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\", fontSize:\"0.9rem\",marginLeft:\"0.4rem\"  }}> Gender</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\" }}>*</Typography>\r\n             </FormLabel>\r\n      <RadioGroup aria-label=\"gender\" name=\"gender1\" style={{display:'initial',marginLeft:\"4rem\"}} value={values.gender} onChange={handleChange('gender')}>\r\n        <FormControlLabel value=\"female\" control={<Radio style={{color:cyan[900]}} />} label=\"Female\" />\r\n        <FormControlLabel value=\"male\" control={<Radio style={{color:cyan[900]}}/>} label=\"Male\" />\r\n        <FormControlLabel value=\"other\" control={<Radio style={{color:cyan[900]}} />} label=\"Other\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n         <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n             \r\n              padding: \"0.5rem\",}}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={Register}\r\n          >\r\n            Next\r\n          </Button>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={1} sm={3} md={4}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"signup_div\">\r\n      {loading && <LinearBuffer />}\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={4000} />\r\n      )}\r\n       <LogoPage className=\"title\" name= {\"TalkSee\"}/>\r\n      {SignUpForm()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;","export const deletePermission = (state, action) => {\r\n     switch (action.type) {\r\n    case \"updatePermission\":\r\n      return {state: action.value };\r\n    default:\r\n      return state;\r\n  }\r\n}"," import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport { deletePermission } from \"../reducers/DeletePermissionReducer\";\r\nexport const DeletePermission = createContext();\r\nconst DeletePermissionProvider = (props) => {\r\n  const [deletemsg, dispatch] = useReducer(deletePermission, \"1\", () => {\r\n    const localData = localStorage.getItem(\"deletion\");\r\n    return localData ? JSON.parse(localData) : \"\";\r\n  });\r\n  useEffect(\r\n    () => {localStorage.setItem(\"deletion\",  JSON.stringify(deletemsg))},\r\n    [deletemsg]\r\n  );\r\n  return (\r\n    <DeletePermission.Provider value={{ deletemsg, dispatch }}>\r\n      {props.children}\r\n    </DeletePermission.Provider>\r\n  );\r\n};\r\nexport default DeletePermissionProvider;","import React, { useState, useEffect ,useContext} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from 'clsx';\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  Input,\r\n  InputAdornment,\r\n  Typography,\r\n  Paper,\r\n  IconButton,\r\n  InputLabel\r\n} from \"@material-ui/core\";\r\nimport { grey, cyan} from '@material-ui/core/colors';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport isEmpty from \"validator/lib/isEmpty\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport { login } from \"../api/auth\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport io from \"socket.io-client\";\r\nimport LogoPage from \"./LogoPage\"\r\n//import { toast } from \"react-toastify\";\r\n\r\n\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport {ChatContext} from '../../../context/ChatContext';\r\n//import { v4 as uuidv4 } from 'uuid';\r\nimport { authentication, isAuthenticated } from \"../clientStorages/auth\";\r\nimport { DeletePermission } from \"../../../context/DeletePermissionContext\";\r\n \r\nconst useStyles = makeStyles((theme) => ({\r\n   textField: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  margin:{\r\n    marginBottom: theme.spacing(2),\r\n    \r\n  }\r\n}));\r\nconst LogIn = ({onIdSubmit,setId, isLogin,setLogin}) => {\r\n  let history = useHistory();\r\n  const {setSocket,roomJoin,messageEvent, friendReq} = useContext(SocketContext);\r\n  const classes = useStyles(); \r\n  const { dispatch } = useContext(DeletePermission);\r\n  const { getUnreadMsgs } = useContext(ChatContext);\r\n  let clientSocket1 = React.useRef()\r\n  useEffect(() => {\r\n    if (isAuthenticated() && isAuthenticated().role === 1)\r\n      history.push(\"/admin/dashboard\");\r\n    else if (isAuthenticated() && isAuthenticated().role === 0)\r\n      history.push(\"/user/dashboard\");\r\n     \r\n      \r\n  }, [history]);\r\n  window.onload = () => {\r\n    friendReq()\r\n    messageEvent()\r\n    //getUnreadMsgs()\r\n  }\r\n  \r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    errorMessage: \"\",\r\n    showPassword: false,\r\n    loading: false,\r\n  });\r\n  const { email, password, errorMessage, loading } = values;\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n      errorMessage: \"\",\r\n    });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    console.log(\"helloooo\")\r\n    //if(isLogin){\r\n      /* friendReq()\r\n      messageEvent() */\r\n    //}\r\n  // console.log(\"not authentiated\")\r\n \r\n  },[])\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n   const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const handleTextChange = (evt) => {\r\n    setValues({\r\n      ...values,\r\n      [evt.target.name]: evt.target.value,\r\n      errorMessage: \"\",\r\n    });\r\n  };\r\n  const Register = (event) => {\r\n    event.preventDefault();\r\n    if (isEmpty(email) || isEmpty(password)) {\r\n      setValues({ ...values, errorMessage: \"Both fields are required\" });\r\n    } else if (!isEmail(email)) {\r\n      setValues({ ...values, errorMessage: \"Invalid Email\" });\r\n    } else {\r\n      setValues({ ...values, loading: true });\r\n      const { email, password } = values;\r\n      const data = { email, password };\r\n\r\n      login(data)\r\n        .then((response) => {\r\n          authentication(response.data.token, response.data.user);\r\n          console.log(response)\r\n          if (isAuthenticated() && isAuthenticated().role === 1)\r\n            history.push(\"/dashboard/\"+isAuthenticated()._id);\r\n          else {\r\n            /* friendReq()\r\n            messageEvent() */\r\n            setLogin(true)\r\n            history.push(\"/dashboard/\"+isAuthenticated()._id);\r\n      };\r\n          setValues({ ...values, loading: false });\r\n          setId(isAuthenticated()._id)\r\n         var del=  JSON.parse(localStorage.getItem(\"deletion\"));\r\n         if (del == \"\")\r\n            dispatch({ type: \"updatePermission\", value: false })\r\n         \r\n           \r\n        })\r\n        .catch((err) => {\r\n          setValues({\r\n            ...values,\r\n            password:\"\",\r\n            loading: false,\r\n            errorMessage: err.response.data.errorMessage,\r\n          });\r\n        });\r\n       \r\n        onIdSubmit(email)\r\n        \r\n        console.log(\"email\",email)\r\n        \r\n    }\r\n  };\r\n  \r\n  const LogInForm = () => (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item xs={1} sm={3} md={4}></Grid>\r\n        <Grid item xs={10} sm={6} md={4}>\r\n        <Paper  className=\"Login-container\" style={{padding: '30px 50px'}} > \r\n            <Grid container style={{textAlign:\"center\"}}>\r\n          <Grid item xs={6} >\r\n            <Link className=\"active-header\"  to=\"/login\">Sign In</Link>      \r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Link className=\"header\" to=\"/signup\">Sign Up</Link>\r\n          </Grid>\r\n\r\n        </Grid>\r\n           <TextField\r\n           className={classes.textField}\r\n           style={{marginTop:\"2rem\"}}\r\n            label={\r\n              <div> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"   }}> Email Address </Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\"}}>*</Typography>\r\n                  </div>\r\n                  }\r\n            id=\"email-field\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            fullWidth\r\n            onChange={handleTextChange}\r\n             InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n             <EmailIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          ),\r\n         }}\r\n          />\r\n          \r\n         <FormControl className={clsx(classes.margin, classes.textField)} fullWidth>\r\n         <InputLabel htmlFor=\"standard-adornment-password\"> \r\n         <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"    }}> Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\"}}>*</Typography>\r\n         </InputLabel>\r\n                    <Input\r\n            id=\"standard-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n              \r\n          startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <VpnKeyIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n        \r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n         </FormControl>\r\n            <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginBottom: \"1.2rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={Register}\r\n          >\r\n            Sign in\r\n          </Button>\r\n           <Link to=\"/forgot-password\" style={{textDecoration:\"none\",marginLeft:\"1rem auto\"}}  >Forgot Password?</Link>\r\n   </Paper>\r\n         </Grid>\r\n         <Grid item xs={1} sm={3} md={4} >\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"login_div\">\r\n      {loading && <LinearBuffer />}\r\n     \r\n      <LogoPage className=\"title\" name= {\"TalkSee\"}/>\r\n                  {LogInForm()} \r\n     \r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n       \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;","import React, { useState, useEffect } from 'react';\r\nimport accountService from \"../../../services/accountService\";\r\nimport jwt from 'jsonwebtoken';\r\nimport { grey,green, cyan,red} from '@material-ui/core/colors';\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\nimport PageTitle from \"./pageTitle\";\r\nimport { useHistory } from 'react-router-dom';\r\nconst Activate = ({ match }) => {\r\n let token1 = match.params.token;\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    token: '',\r\n    errorMessage: \"\",\r\n    successMsg: \"\",\r\n  });\r\n   const { firstName,lastName, token, errorMessage, successMsg} = formData;\r\n   let history = useHistory()\r\n  useEffect(() => {\r\n    let token = match.params.token;\r\n    let { firstName } = jwt.decode(token);\r\n    let { lastName } = jwt.decode(token);\r\n    if (token) {\r\n      setFormData({ ...formData, firstName,lastName,  token });  \r\n      accountService.accountActivation({token})\r\n      .then(response => {\r\n        setFormData({\r\n          ...formData,\r\n          errorMessage: false,\r\n          successMsg: response.successMessage,\r\n          firstName: response.firstName,\r\n          lastName: response.lastName,\r\n        });\r\n      })\r\n      .catch(err => {\r\n      setFormData({\r\n          ...formData,\r\n          successMsg: false,\r\n         errorMessage: err.response.data.errorMessage,\r\n          firstName: err.response.data.firstName,\r\n          lastName: err.response.data.lastName,\r\n        });\r\n      });\r\n    }}, [match.params]);\r\n     \r\n  \r\n  const ActivationSuccess=()=>(\r\n<div> \r\n  <Grid container > \r\n <Grid item xs={1} sm={3} md={4}></Grid>\r\n  <Grid item xs={1} sm={3} md={4}> \r\n  \r\n      <p><strong>Hi {firstName +\" \"+lastName}</strong></p>\r\n        <div>  <CheckCircleRoundedIcon \r\n              style = {{ color: green[600],paddingTop:\"0.3rem\" }}/>  \r\n           <span style ={{fontSize:\"1.3rem\"}} > Your account has been successfully verified. Click below to create your profile</span></div>\r\n      <Button\r\n             style={{ \r\n               color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\" }}\r\n              variant=\"contained\"\r\n              className= \"loginbtn\"\r\n              onClick={event =>  history.push('/profile-setup/'+token1)}\r\n             \r\n          >\r\n            Create Profile\r\n          </Button>\r\n          </Grid>\r\n          <Grid item xs={1} sm={3} md={4}></Grid>\r\n          </Grid>\r\n   </div>\r\n\r\n\r\n  );\r\n   const ActivationFailure=()=>(\r\n<div> \r\n  <Grid container > \r\n <Grid item xs={1} sm={3} md={4}></Grid>\r\n  <Grid item xs={1} sm={3} md={4}> \r\n  \r\n      <p><strong>Hi {firstName+\" \"+lastName}</strong></p>\r\n        <div>  <CancelRoundedIcon \r\n              style = {{ color: red[600]  }}/>  \r\n           <span style ={{fontSize:\"1.3rem\"}} > <strong>{errorMessage}</strong> </span></div>\r\n      <Button\r\n             style={{ \r\n               color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\" }}\r\n            variant=\"contained\"\r\n             className= \"loginbtn\"\r\n            onClick={event =>  history.push('/signup')}\r\n             \r\n          >\r\n               Try  Again   \r\n          </Button>\r\n          </Grid>\r\n          <Grid item xs={1} sm={3} md={4}></Grid>\r\n          </Grid>\r\n   </div>\r\n\r\n\r\n  );\r\n  return (\r\n  <div>\r\n        <PageTitle name= {\"Activation\"}/>\r\n       {errorMessage && ( ActivationFailure())}\r\n       {successMsg && (ActivationSuccess())}\r\n  </div>)\r\n      }\r\nexport default Activate;","import React from \"react\";\r\nimport {Grid} from  \"@material-ui/core\";\r\nconst notFound = () => {\r\n  return <div style={{marginTop:\"10rem\"}}>\r\n    <Grid container > \r\n   <Grid item xs={1} sm={3} md={4}></Grid>\r\n        <Grid item xs={10} sm={6} md={4}>\r\n    <h1  > Error 404</h1>\r\n    <h5 style ={{marginLeft:\"2rem\"}}>Page Not Found</h5>\r\n    </Grid>\r\n     <Grid item xs={1} sm={3} md={4}></Grid>\r\n    </Grid>\r\n    </div>;\r\n};\r\n\r\nexport default notFound;\r\n","import React,{useState} from \"react\";\r\nimport accountService from \"../../../services/accountService\";\r\nimport {Grid,Button, Typography, InputAdornment,TextField,Paper} from \"@material-ui/core\";\r\nimport { grey, cyan,indigo} from '@material-ui/core/colors';\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport isEmpty from \"validator/lib/isEmpty\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport PageTitle from \"./pageTitle\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n \r\nconst ForgotPassword = () => {\r\n      \r\n const [values, setValues] = useState({\r\n    email: \"\",\r\n    errorMessage: \"\",\r\n    successMsg:\"\",\r\n    loading: false,\r\n  });\r\n  const { email, successMsg, errorMessage, loading } = values;\r\n\r\n const handleTextChange = (evt) => {\r\n    setValues({\r\n      ...values,\r\n      [evt.target.name]: evt.target.value,\r\n      errorMessage: \"\",\r\n      successMsg: \"\",\r\n    });\r\n  };\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (isEmpty(email)   ) {\r\n      setValues({ ...values, errorMessage: \"Field is required\" });\r\n    } else if (!isEmail(email)) {\r\n      setValues({ ...values, errorMessage: \"Invalid Email  syntax\" });\r\n    } else {\r\n      const { email} = values;\r\n      setValues({ ...values, loading: true });\r\n        accountService.forgotPassword({email})\r\n        .then((response) => {\r\n          setValues({\r\n            ...values,\r\n            email: \"\",\r\n            errorMessage: false,\r\n            successMsg: response.successMessage,\r\n            loading: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setValues({\r\n            ...values,\r\n            loading: false,\r\n            email: \"\",\r\n            successMsg:false,\r\n            errorMessage: err.response.data.errorMessage,\r\n          });\r\n        });\r\n    }\r\n  };\r\n \r\nconst ResetPageForm = () =>(\r\n<div>\r\n    <Grid container >\r\n          <Grid item xs={1} sm={3} md={4}></Grid>\r\n          <Grid item xs={10} sm ={6} md={4} >\r\n        <Paper style={{padding: '30px 50px'}} >\r\n          <Button  \r\n            className= \"loginbtn\"\r\n            href=\"/login\"\r\n            color=\"primary\"\r\n           style={{marginBottom:\"2rem\" ,paddingLeft:\"0rem\",color:indigo[800]  }}\r\n          >\r\n            <ArrowBackIcon style={{fontWeight:\"bold\",marginRight:\"0.3rem\"}}/> Go Back\r\n          </Button>\r\n              <TextField\r\n            label= {\r\n              <div> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\" }}> Email Address </Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\"  }}>*</Typography>\r\n                  </div>\r\n            }\r\n            id=\"filled-start-adornment1\"\r\n             variant=\"outlined\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            fullWidth\r\n            onChange={handleTextChange}\r\n             InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n             <EmailIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n          />\r\n              <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"12rem\" , \r\n              marginTop: \"1.5rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n             fullWidth\r\n            onClick={onSubmit}\r\n          >\r\n           Submit  \r\n          </Button>\r\n                </Paper>\r\n          </Grid>\r\n          <Grid item xs={1} sm={3} md={4}></Grid>\r\n    </Grid>\r\n</div>\r\n)\r\nreturn (<div>\r\n    \r\n    {loading && <LinearBuffer />}\r\n     <PageTitle name= {\"Forgot Password\"}/>\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={4000} />\r\n      )}\r\n      {ResetPageForm()}\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default ForgotPassword;","import React, { useState, useEffect } from \"react\";\r\nimport clsx from 'clsx';\r\nimport accountService from \"../../../services/accountService\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  InputAdornment,\r\n  InputLabel,\r\n  FormControl,\r\n  Input,\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\n import { grey, cyan,indigo} from '@material-ui/core/colors';\r\nimport isEmpty from \"validator/lib/isEmpty\";\r\nimport equals from \"validator/lib/equals\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n const useStyles = makeStyles((theme) => ({\r\n  textfield: {\r\n     margin: theme.spacing(1),\r\n  },\r\n   margin:{\r\n     marginTop: \"1.2rem\"\r\n   } \r\n}));\r\n\r\nconst ResetPassword = ({ match }) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [values, setValues] = useState({\r\n    token: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    errorMessage: \"\",\r\n    successMsg: \"\",\r\n    showPassword: false,\r\n    showPassword1: false,\r\n    loading: false,\r\n  });\r\n  \r\n   const {\r\n    token,\r\n    password,\r\n    confirmPassword,\r\n    errorMessage,\r\n    successMsg,\r\n    loading,\r\n  } = values;\r\n\r\n    useEffect(() => {\r\n        let token = match.params.token\r\n        if(token) {\r\n            setValues({...values, token})\r\n        }\r\n    }, [])\r\n    const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n   const handleChange = (prop) => (event) => {\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n      errorMessage: \"\",\r\n      successMsg: \"\",\r\n    });\r\n  };\r\n const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n  const handleClickShowConfirmPassword = () => {\r\n    setValues({ ...values, showPassword1: !values.showPassword1 });\r\n  };\r\n   const ResetPasswordBtn = (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      isEmpty(password) ||\r\n      isEmpty(confirmPassword)\r\n    ) {\r\n      setValues({ ...values, errorMessage: \"All fields are required\" });\r\n    } else if (!equals(password, confirmPassword)) {\r\n      setValues({ ...values, errorMessage: \"Passwords do not match\" });\r\n    } else {\r\n  \r\n     \r\n      setValues({ ...values, loading: true });\r\n     accountService.resetPassword( { newPassword: password, resetPasswordLink: token})\r\n        .then((response) => {\r\n          setValues({\r\n            ...values,\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errorMessage: false,\r\n            successMsg: response.successMessage,\r\n            loading: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setValues({\r\n            ...values,\r\n             password: \"\",\r\n            confirmPassword: \"\",\r\n            loading: false,\r\n            errorMessage: err.response.data.errorMessage,\r\n          });\r\n        });\r\n    }\r\n  };\r\n     \r\n  const ResetPasswordForm=()=>(\r\n      \r\n    <Grid container >\r\n      <Grid item xs={1} sm={3} md={4}></Grid>\r\n        <Grid item xs={10} sm ={6} md={4}>\r\n          <Paper style={{padding: '30px 50px'}} >\r\n          <Button  \r\n            className= \"loginbtn\"\r\n            href=\"https://mail.google.com/mail/u/0/#inbox\"\r\n            color=\"primary\"\r\n           style={{marginBottom:\"2rem\" ,paddingLeft:\"0rem\",color:indigo[800]  }}\r\n          >\r\n           <ArrowBackIcon style={{fontWeight:\"bold\",marginRight:\"0.3rem\"}}/> Go Back\r\n          </Button>\r\n             <FormControl className={clsx( classes.textField)} fullWidth>\r\n         <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> New Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\" }}>*</Typography>\r\n         </InputLabel>\r\n                    <Input\r\n            id=\"standard-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n              \r\n          startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <LockIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n        \r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n         \r\n          <FormControl className={clsx(classes.margin, classes.textField)} fullWidth>\r\n                 <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> Confirm Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\" }}>*</Typography>\r\n         </InputLabel>\r\n           <Input\r\n            id=\"standard-adornment-confirmPassword\"\r\n            type={values.showPassword1 ? 'text' : 'password'}\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange('confirmPassword')}\r\n             startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <VpnKeyIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowConfirmPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword1 ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n    \r\n         <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n              }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={ResetPasswordBtn}\r\n          >\r\n            Reset Password \r\n          </Button>\r\n          {successMsg &&  <Button\r\n                     style={{  \r\n                     backgroundColor:grey[500],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"outline\"\r\n            fullWidth\r\n            onClick={event =>  history.push('/login')}\r\n                  >\r\n                      Login\r\n                  </Button>}\r\n           </Paper>\r\n        </Grid>\r\n     <Grid item xs={1} sm={3} md={4}></Grid>\r\n    </Grid>\r\n       \r\n  );   \r\n  return (\r\n  <div>\r\n        {loading && <LinearBuffer />}\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={4000} />\r\n      )}\r\n       <PageTitle name= {\"Reset Password\"}/>\r\n      {ResetPasswordForm()}\r\n      \r\n  </div>)\r\n      }\r\nexport default ResetPassword;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport Select from \"react-select\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport { grey, cyan} from '@material-ui/core/colors';\r\nimport {Button} from \"@material-ui/core\";\r\nimport axios from 'axios';\r\nimport accountService from \"../../../services/accountService\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Webcam from \"react-webcam\";\r\nconst useStyles = makeStyles({\r\n  \r\n  textfield: {\r\n    marginTop: \"2rem\",\r\n  },\r\n  Submitbtn: {\r\n    marginTop: \"0.6rem\",\r\n  },\r\n});\r\n\r\n\r\n\r\nconst ProfileSetup = ( {match}) => {\r\n    const classes = useStyles();\r\n      let history = useHistory();\r\n    const webcamRef = React.useRef(null);\r\n    const [capturedPic, setCapturedPic]=React.useState(false);\r\nconst options = [\r\n  { label: 'Afrikaans',value:'af' },\r\n  { label: 'Albanian',value:'sq'},\r\n  { label: 'Amharic',value:'am'},\r\n  { label: 'Arabic',value:'ar'},\r\n  { label: 'Armenian',value:'hy'},\r\n  { label: 'Azerbaijani',value:'az'},\r\n  { label: 'Basque',value:'eu'},\r\n  { label: 'Belarusian',value:'be'},\r\n  { label: 'Bengali',value:'bn'},\r\n  { label: 'Bosnian',value:'bs'},\r\n  { label: 'Bulgarian',value:'bg'},\r\n  { label: 'Catalan',value:'ca'},\r\n  { label: 'Cebuano',value:'ceb'},\r\n  { label: 'Chichewa',value:'ny'},\r\n  { label: 'Chinese',value:'zh-cn'},\r\n  { label: 'Corsican',value:'co'},\r\n  { label: 'Croatian',value:'hr'},\r\n  { label: 'Czech',value:'cs'},\r\n  { label: 'Danish',value:'da'},\r\n  { label: 'Dutch',value:'nl'},\r\n  { label: 'English',value:'en'},\r\n  { label: 'Esperanto',value:'eo'},\r\n  { label: 'Estonian',value:'et'},\r\n  { label: 'Filipino',value:'tl'},\r\n  { label: 'Finnish',value:'fi'},\r\n  { label: 'French',value:'fr'},\r\n  { label: 'Danish',value:'da'},\r\n  {label: 'Frisian',value: \"fy\"},\r\n  {label: 'Galician',value: \"gl\"},\r\n  {label: 'Georgian',value: \"ka\"},\r\n  {label: 'German',value: \"de\"},\r\n  {label: 'Greek',value: \"el\"},\r\n  {label: 'Gujarati',value: \"gu\"},\r\n  {label: 'Haitian creole',value: \"ht\"},\r\n  {label:'Hausa',value: \"ha\"},\r\n  {label:'Hawaiian',value: \"haw\"},\r\n  {label:'Hebrew',value: \"iw\"},\r\n  {label: 'Hindi',value: \"hi\"},\r\n  {label:'Hmong',value: \"hmn\"},\r\n  {label:'Hungarian',value: \"hu\"},\r\n  {label:'Icelandic',value: \"is\"},\r\n  {label:'Igbo',value: \"ig\"},\r\n  {label:'Indonesian',value: \"id\"},\r\n  {label:'Irish',value: \"ga\"},\r\n  {label:'Italian',value: \"it\"},\r\n  {label:'Japanese',value: \"ja\"},\r\n  {label:'Javanese',value: \"jw\"},\r\n  {label:'Kannada',value: \"kn\"},\r\n  {label:'Kazakh',value: \"kk\"},\r\n  {label:'Khmer',value:'km'},\r\n  {label:'Korean',value:'ko'},\r\n  {label:'Kurdish',value:'ku'},\r\n  {label: 'Kyrgyz',value: \"ky\"},\r\n  {label: 'Lao',value: \"lo\"},\r\n  {label: 'Latin',value: \"la\"},\r\n  {label: 'Latvian',value: \"lv\"},\r\n  {label: 'Lithuanian',value: \"lt\"},\r\n  {label: 'Luxembourgish',value: \"lb\"},\r\n  {label: 'Macedonian',value: \"mk\"},\r\n  {label:'Malagasy',value: \"mg\"},\r\n  {label:'Malay',value: \"ms\"},\r\n  {label:'Malayalam',value: \"ml\"},\r\n  {label: 'Maltese',value: \"mt\"},\r\n  {label:'Maori',value: \"mi\"},\r\n  {label:'Marathi',value: \"mr\"},\r\n  {label:'Mongolian',value: \"mn\"},\r\n  {label:'Myanmar (burmese)',value: \"my\"},\r\n  {label:'Nepali',value: \"ne\"},\r\n  {label:'Norwegian',value: \"no\"},\r\n  {label:'Odia',value: \"or\"},\r\n  {label:'Pashto',value: \"ps\"},\r\n  {label:'Persian',value: \"fa\"},\r\n  {label:'Polish',value: \"pl\"},\r\n  {label:'Portuguese',value: \"pt\"},\r\n  {label:'Punjabi',value: \"pa\"},\r\n  {label :'Romanian', value:\"ro\"},\r\n  {label :'Russian', value:\"ru\"},\r\n  {label:'Samoan',value: \"sm\"},\r\n  {label:'Scots gaelic',value: \"gd\"},\r\n  {label:'Serbian',value: \"sr\"},\r\n  {label:'Sesotho',value: \"st\"},\r\n  {label:'Shona',value: \"sn\"},\r\n  {label:'Sindhi',value: \"sd\"},\r\n  {label:'Sinhala',value: \"si\"},\r\n  {label:'Slovak',value: \"sk\"},\r\n  {label:'Slovenian', value:\"sl\"},\r\n  {label:'Somali', value:\"so\"},\r\n  {label:'Spanish', value:'es' },\r\n  {label:'Sundanese',value: \"su\"},\r\n  {label:'Swahili',value: \"sw\"},\r\n  {label:'Swedish',value: \"sv\"},\r\n  {label:'Tajik',value: \"tg\"},\r\n  {label:'Tamil',value: \"ta\"},\r\n  {label:'Telugu',value: \"te\"},\r\n  {label:'Thai',value: \"th\"},\r\n  {label:'Turkish',value: \"tr\"},\r\n  {label :'Ukrainian', value:\"uk\"},\r\n  {label:'Urdu',value: \"ur\"},\r\n  {label :'Uyghur', value:\"ug\"},\r\n  {label:'Uzbek', value:'uz' },\r\n  {label:'Vietnamese',value: \"vi\"},\r\n  {label :'Welsh', value:\"cy\"},\r\n  {label:'Xhosa',value: \"xh\"},\r\n  {label :'Yiddish', value:\"yi\"},\r\n  {label:'Yoruba', value:'yo' },\r\n  {label:'Zulu',value: \"zu\"},\r\n  \r\n];\r\n    const [values, setValues] = useState({\r\n    img: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\r\n    language:\"\",\r\n    token:\"\",\r\n    errorMessage: \"\",\r\n    successMsg:\"\",\r\n    infoMessage:\"\",\r\n    loading: false,\r\n  });\r\n  const { img,language,token, successMsg, errorMessage,infoMessage, loading } = values;\r\nuseEffect(() => {\r\n        let token = match.params.token\r\n        if(token) {\r\n            setValues({...values, token})\r\n        }\r\n    }, [])\r\n\r\nconst resizeFile = (file) => new Promise(resolve => {\r\n    Resizer.imageFileResizer(file, 300, 300, 'JPEG', 100, 0,\r\n    uri => {resolve(uri);},'base64' );\r\n});\r\nconst capture =  React.useCallback(() => {\r\n   try{\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n       setValues({...values, infoMessage: \"Picture Captured\"}); \r\n       const data = new FormData();\r\n      data.append(\"file\", imageSrc);\r\n      axios.post(\"http://127.0.0.1:5000/webcam-face-detection\",data)\r\n         .then(async (response) => {\r\n          setValues({ ...values , errorMessage :\"\", successMsg:response.data.successMessage})\r\n           setValues({...values, infoMessage: \"Loading....\"});\r\n           data.append(\"file\", imageSrc);\r\n           data.append(\"upload_preset\", \"TalkSee\");\r\n          fetch(\"https://api.cloudinary.com/v1_1/fariha31/image/upload\",\r\n              { method: \"POST\",\r\n                body: data,\r\n             } ).then(response => response.json())\r\n      .then(data =>   setValues({ ...values , img: data.url}))\r\n      .catch(err => console.error('Error:', err));;   \r\n          })\r\n         }\r\n catch(err)\r\n     {setValues({...values, errorMessage: \"error in uploading photo\"}); }\r\n   \r\n    },\r\n    [webcamRef]\r\n  );\r\n const uploadImage = async (e) => {\r\n  try {\r\n           const imageFile = e.target.files[0];\r\n           const data = new FormData();\r\n           data.append(\"file\", imageFile);\r\n           axios.post(\"http://127.0.0.1:5000/\",data)\r\n         .then(async (response) => {\r\n         setValues({ ...values , errorMessage :\"\", successMsg:\"response.data.successMessage\"})\r\n            const compressedImage = await resizeFile(imageFile);\r\n           setValues({...values, infoMessage: \"Loading....\"});\r\n           data.append(\"file\", compressedImage);\r\n           data.append(\"upload_preset\", \"TalkSee\");\r\n           const res = await fetch(\"https://api.cloudinary.com/v1_1/fariha31/image/upload\",\r\n              { method: \"POST\",\r\n                body: data,\r\n             } );   \r\n           const file =  await res.json();\r\n           setValues({ ...values , img: file.secure_url});\r\n        })\r\n        .catch((err) => {\r\n            setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n      }\r\n catch(err)\r\n     {setValues({...values, errorMessage: \"error in uploading photo\"}); }\r\n}\r\nconst SetProfile =()=>{\r\n  accountService.profileSetup({profileImg: img, langPreference: language, token})\r\n .then((response) => {\r\n          setValues({\r\n            ...values,\r\n            img: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\r\n            language:\"\",\r\n            errorMessage: false,\r\n            successMsg: response.successMessage,\r\n            loading: false,\r\n          });\r\n        })\r\n         .catch((err) => {\r\n           setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n}\r\n \r\n  const ProfilePage = () =>( \r\n  <div className=\"profile-page\">\r\n      <div className=\"profile-container\">\r\n          <div className=\"img-holder\">\r\n             <img src={img} className=\"profile-img\"/>\r\n              </div>\r\n             <input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={uploadImage}  />\r\n             <div className=\"label\">\r\n                   <label className=\"image-upload\" htmlFor=\"input\">\r\n\t\t\t\t\t\t<i className=\"material-icons\">add_photo_alternate</i>\r\n\t\t\t\t\t\tChoose Profile Photo\r\n\t\t\t\t\t</label>\r\n                 </div>\r\n                 <div className=\"label\">   \r\n             <button className=\"take-photo loginbtn\"  data-toggle=\"modal\" data-target=\"#exampleModalCenter\" onClick={()=>setCapturedPic(false)}>\r\n               <i className=\"material-icons\" style ={{marginRight:\"0.2rem\"}}>photo_camera</i>\r\n               Take Photo</button> \r\n              </div> \r\n              <Select\r\n                    style={{ width: 210, padding: \"0.4rem\" }}\r\n                    placeholder=\"Select Language ---\"\r\n                    value={options.find(c => c.label === language)}\r\n                    className={classes.textfield}\r\n                    options={options}\r\n                    onChange={(e) => {\r\n                      console.log(e)\r\n                      setValues({\r\n                        ...values,\r\n                        language:e.value ,\r\n                      });\r\n                      \r\n                    }}\r\n                  />\r\n                   <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"0.5rem\" , \r\n              marginTop: \"1.5rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={SetProfile}\r\n            \r\n          >\r\n            Set Profile\r\n          </Button>\r\n                   {successMsg &&  <Button\r\n                     style={{  \r\n                     backgroundColor:grey[500],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"outline\"\r\n            fullWidth\r\n            onClick={event =>  history.push('/login')}\r\n                  >\r\n                      Login\r\n                  </Button>}\r\n      </div> \r\n         \r\n     \r\n \r\n\r\n \r\n<div className=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div className=\"modal-content\">\r\n      <div className=\"modal-header\">\r\n        <h3 className=\"modal-title\" id=\"exampleModalLongTitle\">Take Photo</h3>\r\n        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <div  className=\"webcam-container\">\r\n         <Webcam  \r\n        audio={false}\r\n        height= {200}\r\n       width ={460}\r\n        ref={webcamRef}\r\n        screenshotFormat=\"image/jpeg\" />\r\n        </div>\r\n      </div>\r\n       \r\n        {capturedPic ? (<div className=\"modal-footer\"> \r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        </div> ):\r\n        (<div className=\"modal-footer\"> \r\n        <button  className=\"take-photo loginbtn\" onClick ={capture}>\r\n          <i className=\"material-icons\" style ={{marginRight:\"0.2rem\"}}>\r\n            photo_camera</i>Capture photo</button> </div>)\r\n        }\r\n    </div>\r\n  </div>\r\n</div>             \r\n  </div>\r\n)\r\nreturn (<div>\r\n    \r\n    {loading && <LinearBuffer />}\r\n     <PageTitle name= {\"Profile Setup\"}/>\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={3000} />\r\n      )}\r\n       {infoMessage && (\r\n        <AlertBar type=\"info\" message={infoMessage} autoClose={8000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={2500} />\r\n      )}\r\n      {ProfilePage()}\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default ProfileSetup;\r\n","import { Button, Typography,Paper, Grid, Hidden } from \"@material-ui/core\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport React, { useState, useContext} from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { SocketContext } from \"../../../context/SocketContext\";\r\nimport { lightBlue, grey} from '@material-ui/core/colors';\r\n\r\nconst SingleContact = (props) => {\r\n    const { contact } = props;\r\n    const roomId = '/'+contact._id\r\n    let history = useHistory()\r\n    var userData=JSON.parse(localStorage.getItem(\"user\")) \r\n    const [showAddBtn, setAddBtn]=useState(userData.sentRequests.includes(contact._id)?false:true)\r\n    const { clientSocket } = useContext(SocketContext);\r\n    //const [showAddBtn, setAddBtn]=useState(state?!state.sentRequests.includes(contact._id):true);\r\n    const myId=isAuthenticated()._id;\r\n    const myName =isAuthenticated().firstName + \" \" +isAuthenticated().lastName;\r\n    const myProfileImg =isAuthenticated().profileImg;\r\n    const myEmail =isAuthenticated().email;\r\n    const myGender =isAuthenticated().gender;\r\n    const myLangPreference =isAuthenticated().langPreference;\r\n    const sentFriendRequest=() => {\r\n        console.log(\"contact Id\",contact._id)\r\n        friendService.sendRequest(\r\n            {friendId:contact._id,\r\n            myId,myName,myProfileImg,myEmail,myGender,myLangPreference})\r\n         .then((data) => {\r\n           localStorage.setItem(\"user\",JSON.stringify(data));\r\n              // dispatch({type:\"FRIEND_REQUESTED\",payload:{sentRequests:data.sentRequests }})\r\n             setAddBtn(false)\r\n            \r\n            })\r\n         .catch((err) => {console.log(err);});\r\n\r\n         clientSocket.emit(\r\n            \"friendRequest\",\r\n            { myName,roomId },\r\n            (err) => {\r\n              if (!err) console.log(\"emitted event\");\r\n              else console.log(err);\r\n            }\r\n          );\r\n    }\r\n\r\n     const cancelFriendRequest=()=>{\r\n         \r\n        friendService.cancelRequest(\r\n            {friendId:contact._id,myId})\r\n         .then((data) => {\r\n             localStorage.setItem(\"user\",JSON.stringify(data));\r\n            // dispatch({type:\"FRIEND_REQUESTED\",payload:{sentRequests:data.sentRequests }})\r\n             setAddBtn(true)\r\n             \r\n         })\r\n         .catch((err) => {console.log(err);});\r\n\r\n         clientSocket.emit(\r\n            \"rejectfriendRequest\",\r\n            { myName,roomId },\r\n            (err) => {\r\n              if (!err) console.log(\"emitted event\");\r\n              else console.log(err);\r\n            }\r\n          );\r\n    }\r\n \r\n    const contactClickHandler = ()=>{\r\n        localStorage.setItem('contact',JSON.stringify(contact))\r\n        //console.log(\"clicked\",'/profile'+props.roomId+'/'+contact._id)\r\n        history.push('/profile'+props.roomId+'/'+contact._id)\r\n    }\r\n    return (\r\n        <div>\r\n       <Paper style={{padding: '10px 20px', marginBottom:\"1rem\"}} //onClick={contactClickHandler}\r\n        >\r\n            <Grid container>\r\n                 <Grid item xs={3} md={1}>  <img src={contact.profileImg}   \r\n          style={{ height: \"60px\", width: \"60px\", borderRadius: \"20%\" ,display:\"inline\" }} alt=\"img\"/> </Grid>\r\n                <Grid item xs={9} md={9}> \r\n            \r\n             <div style={{display:\"inline\"}}><p  className=\"user_names\"   >{contact.firstName + \" \"+ contact.lastName}</p>\r\n               <Typography style={{color:\"gray\",  fontStyle: \"italic\" , fontSize:\"0.9rem\" }}>{contact.email}</Typography>\r\n               </div>\r\n               </Grid>\r\n               <Hidden only={['md', 'lg']}> \r\n                   <Grid item xs={3}></Grid></Hidden>\r\n               <Grid item xs={9} md={2}>\r\n        {showAddBtn ?  \r\n         <Button className= \"loginbtn\"\r\n             style={{marginTop:\"0.7rem\",backgroundColor:lightBlue[600],color:\"white\"}}\r\n            variant=\"contained\" \r\n            onClick={sentFriendRequest}>Add friend</Button>\r\n        : \r\n        <Button className= \"loginbtn\"\r\n              style={{marginTop:\"0.7rem\",backgroundColor:grey[500],color:\"white\"}}\r\n            variant=\"contained\" \r\n            onClick={cancelFriendRequest}>Requested</Button> \r\n             }\r\n             </Grid>\r\n      </Grid>\r\n     </Paper>       \r\n   \r\n    </div>\r\n    );\r\n}\r\n \r\nexport default SingleContact;","import GenericService from \"./GenericService\";\r\nclass ContactService extends GenericService {\r\n  \r\n  getAllContact = () => this.get(\"contacts/getContact\");\r\n  getSingleContact = (id) => this.get(\"contacts/get-contact/\" + id);\r\n  }\r\n\r\nlet contactService = new ContactService();\r\nexport default contactService;","import React,{useEffect,useContext} from 'react';\r\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport { isAuthenticated, logout } from \"../clientStorages/auth\";\r\n \r\n\r\nconst SideBar = ({ history }) => {\r\n     history = useHistory();\r\n    \r\n      const myId = isAuthenticated()._id;\r\n      const myProfileImg =isAuthenticated().profileImg;\r\n    \r\nconst firstName= isAuthenticated().firstName;\r\n  const lastName = isAuthenticated().lastName;\r\n  const {clientSocket,setSocket,messageEvent,roomJoin,friendReq,getRequest,frndcounter,msgCounter} = useContext(SocketContext);\r\n     const handleLogOut = (evt) => {\r\n    logout(() => {\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n  useEffect(()=>{\r\n    getRequest()\r\n  },[frndcounter])\r\n     useEffect (()=>{\r\n    roomJoin(myId)\r\n  },[]);\r\n  \r\n    return (<div class=\"wrapper\">\r\n    <div class=\"sidebar\">\r\n         <div id =\"profile_div\">\r\n        <img\r\n          src= {myProfileImg}\r\n          alt=\"Profile\"\r\n          style={{ height: \"90px\", width: \"90px\", borderRadius: \"50%\" ,cursor:\"pointer\" }}\r\n         onClick={()=>history.push('/update-my-profile-setup/'+myId)}\r\n        /> \r\n        </div>  \r\n         <h4>{firstName +\" \"+lastName}</h4>\r\n        <ul>\r\n          \r\n            <li>\r\n               \r\n                 {msgCounter >= 1 ?\r\n                 <Link to={{pathname: '/mychats/'+myId}} style={{textDecoration:\"none\"}}  >\r\n                     <i class=\"fas fa-comments\"  ><span className=\"friendCounter\">{msgCounter}</span></i> My Chats\r\n                  </Link>\r\n                  :<Link to={{pathname: '/mychats/'+myId}} style={{textDecoration:\"none\"}}  >\r\n                     <i class=\"fas fa-comments\"  ></i> My Chats\r\n                  </Link>}\r\n                 \r\n            </li>\r\n            <li> \r\n                <Link to={{pathname: `/update-my-profile-setup/${myId}`}} style={{textDecoration:\"none\"}} >\r\n                     <i class=\"fas fa-user-cog\"  ></i> Profile Setting\r\n                  </Link>\r\n            </li>\r\n            <li>\r\n              {frndcounter >=1   ?\r\n               <Link to={{pathname: '/my-contact-list/'+myId}} style={{textDecoration:\"none\"}}  >\r\n                     <i class=\"fas fa-address-book\"  ><span className=\"friendCounter\">{frndcounter}</span></i> Contacts\r\n                  </Link>:\r\n                   \r\n                <Link to={{pathname: '/my-contact-list/'+myId}} style={{textDecoration:\"none\"}}  >\r\n                     <i class=\"fas fa-address-book\"></i> Contacts\r\n                  </Link>}\r\n            </li>\r\n            \r\n            \r\n        </ul> \r\n        <div class=\"social_media\">\r\n        <button\r\n                    className=\"btn text-decoration-none btn-link\"\r\n                    onClick={handleLogOut}\r\n                  >\r\n                    <i className=\"fas fa-sign-out-alt\" ></i> Logout\r\n                  </button> \r\n          \r\n      </div>\r\n    </div>\r\n   {/*  <div class=\"main_content\">\r\n        <div class=\"header\">Welcome!! Have a nice day.</div>  \r\n        <div class=\"info\">\r\n           \r\n                </div>\r\n    </div>  */}\r\n</div>  );\r\n}\r\n \r\nexport default  withRouter(SideBar);","import React, { useEffect, useContext, useRef,useState } from \"react\";\r\nimport SingleContact from \"./SingleContact\";\r\nimport contactService from \"../../../services/contactService\";\r\nimport { Button, Grid,Hidden,InputAdornment, TextField  } from \"@material-ui/core\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport io from \"socket.io-client\";\r\nimport Header from \"./Header\";\r\nimport { grey } from '@material-ui/core/colors';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SideBar from \"./SideBar\";\r\n\r\nconst AllContact = (props) => {\r\n    const myId=isAuthenticated()._id;\r\n    let userEmail = isAuthenticated().email;\r\n    const[loading,setLoading]=useState(false);\r\n    let history = useHistory()\r\n     const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const onChangeSearch = (event) => \r\n        setSearchTerm(event.currentTarget.value)\r\n    const [contacts, setContacts] = React.useState([]);\r\n    let roomId = useRef()\r\n    let clientSocket1 = useRef()\r\n    roomId.current = '/'+props.match.params.id;\r\n    const {clientSocket,setSocket,roomJoin,messageEvent, friendReq} = useContext(SocketContext);\r\n    window.onload = () => {\r\n       friendReq()\r\n      messageEvent()\r\n      let did = JSON.parse(localStorage.getItem('user'))._id\r\n      roomJoin(did)\r\n      clientSocket1 = io(process.env.REACT_APP_IP_URL)\r\n      setSocket((s)=>{\r\n        s = clientSocket1\r\n        s.on('connect' , () => {\r\n          console.log(\"connected\",s.id);\r\n          s.emit(\"adduser\",{id:s.id, name: userEmail})\r\n          \r\n        });\r\n        return s;\r\n      })\r\n    };\r\n\r\n    const getData = () => {\r\n   friendService.getSentFriendRequest(myId)\r\n   .then((data)=>{\r\n      localStorage.setItem(\"user\",JSON.stringify(data));})\r\n   .catch((err=>{console.log(err)}))\r\n   }\r\n     \r\n  const getSingleContact = () => {\r\n    contactService.getSingleContact(myId)\r\n    .then((data) => { setContacts(data);\r\n      setLoading(true)\r\n    })\r\n    .catch((err) => {console.log(err);});\r\n  };\r\n\r\n   useEffect(()=> {\r\n     getData();\r\n     getSingleContact();\r\n }, []);\r\n \r\n   useEffect(()=>{\r\n    //roomJoin(myId)\r\n    //messageEvent()\r\n   },[])\r\n    \r\n   \r\n    return ( \r\n      <div style={{height:\"100vh\"}} className=\"back_divs\"  >\r\n       <Grid container>\r\n       <Hidden only={['xs', 'sm']}>\r\n          <Grid item xs ={5} md={2}><SideBar/></Grid>\r\n          </Hidden>\r\n            <Hidden only={['md', 'lg']}>\r\n          <Grid item xs={12} ><Header setLogin={props.setLogin}/></Grid>\r\n          </Hidden>\r\n           <Grid item xs={12} md={10}>\r\n      <PageTitle name= {\"Add Friend\"}/>\r\n      {loading?\r\n      <div>{\r\n      contacts.length === 0 ? \r\n        ( <div style= {{textAlign: \"center\", fontSize:\"1.4rem\",\r\n    padding: \"6rem\", fontWeight:\"bold\"}}>No TalkSee User Found😞</div>) \r\n        :\r\n        (<div >\r\n          \r\n            <Grid container  style={{marginTop:\"0.9rem\"}}>\r\n          <Grid item xs ={1} md={1}> </Grid>\r\n          <Grid item xs ={10} md={10} >\r\n            <Grid container   style={{marginBottom:\"1rem\" }}>\r\n          <Grid item xs ={0} md={8}> </Grid>\r\n          <Grid item xs ={12} md={4}  >\r\n            <TextField\r\n                value={searchTerm}\r\n                onChange={onChangeSearch}\r\n                placeholder=\"Search by typing name\"\r\n                 \r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"end\">\r\n             <SearchIcon style={{ color: \"black\" ,marginRight:\"0.4rem\",float:\"right\"}}/>\r\n            </InputAdornment>\r\n          ),\r\n         }}\r\n            />\r\n            </Grid>\r\n            </Grid>\r\n     \r\n           { contacts.filter((contact)=>{\r\n             if(searchTerm === \"\") return contact\r\n             else if (contact.firstName.toLowerCase().startsWith(searchTerm.toLowerCase()) || contact.lastName.toLowerCase().startsWith(searchTerm.toLowerCase()) )\r\n                return contact\r\n           }).map((contact, index) => {\r\n              return contact._id === myId ? \r\n              <div></div>\r\n            : <SingleContact key={index} contact={contact}  roomId={roomId.current}/>\r\n                 \r\n            } )\r\n          }\r\n           \r\n           </Grid>\r\n          <Grid item xs={1}   md={1}></Grid>\r\n        </Grid>\r\n         \r\n         \r\n       </div> )\r\n          }\r\n          </div>:\r\n          \r\n       <div class=\"d-flex justify-content-center\">\r\n         <strong style={{marginRight:\"1rem\"}}>Loading...</strong>\r\n  <div class=\"spinner-border\" role=\"status\">\r\n    \r\n  </div>\r\n</div>\r\n  }\r\n        \r\n        \r\n      \r\n        </Grid>\r\n  \r\n      </Grid>\r\n             \r\n    </div>\r\n    );\r\n}\r\n \r\nexport default AllContact;","import { Button,Grid,Paper,  } from \"@material-ui/core\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport { lightBlue,grey} from '@material-ui/core/colors';\r\nconst SingleFriendRequest = (props) => {\r\n  const { friendreq ,onAcceptReject} = props;\r\n  const myId=isAuthenticated()._id;\r\n  const myName =isAuthenticated().firstName + \" \" +isAuthenticated().lastName;\r\n  const myProfileImg =isAuthenticated().profileImg;\r\n  const myEmail = isAuthenticated().email;\r\n  const myGender =isAuthenticated().gender;\r\n  const myLangPreference =isAuthenticated().langPreference;\r\n  const RejectFriendRequest =()=>{\r\n     friendService.rejectRequest({friendId: friendreq.id, myId}) \r\n      .then((data) => {\r\n       onAcceptReject()\r\n         localStorage.setItem(\"user\",JSON.stringify(data));\r\n         })\r\n     .catch((err) => {console.log(err);});\r\n  } \r\n\r\n    const AcceptFriendRequest =()=>{\r\n     friendService.acceptRequest({\r\n     friendId: friendreq.id,\r\n     friendName:friendreq.name,\r\n     friendProfileImg:friendreq.profileImg, \r\n      chatId:friendreq.email +\"/\"+myEmail,\r\n      friendEmail:friendreq.email,\r\n      friendGender:friendreq.gender,\r\n      friendLangPreference:friendreq.langPreference,\r\n      myId,myName,myProfileImg,myEmail,myGender,myLangPreference }) \r\n      .then((data) => {\r\n       onAcceptReject()\r\n         localStorage.setItem(\"user\",JSON.stringify(data));\r\n         console.log(data);\r\n         })\r\n     .catch((err) => {console.log(err);});\r\n  } \r\n\r\n  return (\r\n      <div>\r\n   <Paper style={{padding:'20px 10px', marginBottom:\"1rem\" }}  >\r\n      <Grid container style={{display:\"flex\"}}>\r\n           <Grid item    xs ={12} sm={12} md={9}>\r\n             <img src={friendreq.profileImg} \r\n              style={{ marginRight:\"0.5rem\",height: \"60px\", width: \"60px\",borderRadius: \"50%\",display:\"inline\",padding:\"0.2rem\" }} alt=\"img\"/>\r\n              <p  className=\"user_names\" >{friendreq.name}</p>\r\n           </Grid>\r\n           <Grid item   xs={12} sm={12} md={3}  >\r\n             <Button className= \"loginbtn\"\r\n          style={{ backgroundColor:lightBlue[700],color:\"white\",margin:\"0.4rem\" }}\r\n        variant=\"contained\" \r\n        size=\"medium\" \r\n        onClick ={AcceptFriendRequest} \r\n        >Accept</Button>\r\n        <Button className= \"loginbtn\"\r\n         style={{  backgroundColor:grey[600],color:\"white\" }}\r\n        variant=\"contained\" \r\n        onClick ={RejectFriendRequest} \r\n        >Reject</Button>\r\n           </Grid>\r\n           </Grid>\r\n           \r\n      \r\n       </Paper>\r\n </div>\r\n  )\r\n}\r\nexport default SingleFriendRequest;","import React, { useEffect, useContext, useRef,useState } from \"react\";\r\nimport SingleFriendRequest from \"./SingleFriendRequest\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport { Button, Grid,Hidden,InputAdornment, TextField  } from \"@material-ui/core\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport io from \"socket.io-client\";\r\nimport SideBar from \"./SideBar\";\r\n \r\nconst AllFriendRequest = (props) => {\r\n     const myId=isAuthenticated()._id;\r\n     const [friendreqs, setFrndRequest] =React.useState([]);\r\n      const [searchTerm, setSearchTerm] = useState(\"\");\r\n      const[loading,setLoading]=useState(false);\r\n    const onChangeSearch = (event) => \r\n        setSearchTerm(event.currentTarget.value)\r\n     let clientSocket1 = useRef()\r\n     let userEmail = isAuthenticated().email\r\n     const {setSocket,roomJoin,messageEvent,friendReq,getRequest,acceptRejectCounter} = useContext(SocketContext);\r\n     let roomId = useRef()\r\n     roomId.current = '/'+props.match.params.id\r\n     let history = useHistory()\r\n\r\n     window.onload = () => {\r\n        friendReq()\r\n       messageEvent()\r\n       getRequest()\r\n      let did = JSON.parse(localStorage.getItem('user'))._id\r\n      roomJoin(did)\r\n      clientSocket1 = io(process.env.REACT_APP_IP_URL)\r\n      setSocket((s)=>{\r\n        s = clientSocket1\r\n        s.on('connect' , () => {\r\n          console.log(\"connected\",s.id);\r\n          s.emit(\"adduser\",{id:s.id, name: userEmail.current})\r\n          \r\n        });\r\n        return s;\r\n      })\r\n    };\r\n\r\n     const getFriendRequest = () => \r\n     {\r\n      friendService.getFriendRequest(myId).then((data)=>{\r\n                setFrndRequest(data)\r\n                setLoading(true);\r\n                acceptRejectCounter();\r\n              })\r\n            .catch((err=>{console.log(err)}))\r\n     }\r\n    useEffect(getFriendRequest , []);\r\n\r\n    useEffect(()=>{\r\n      //roomJoin(myId)\r\n      \r\n     },[])\r\n\r\n   /*  useEffect(()=>{\r\n      if(clientSocket){\r\n        clientSocket.emit(\r\n          \"myChatsRoom\",\r\n          { myChatsRoom : roomId.current},\r\n          ({error,room}) => {\r\n            if (!error) {\r\n              console.log(\"joined room with id\", room);\r\n            } else {\r\n              console.log(\"error joining room\", error);\r\n            }\r\n          }\r\n        );\r\n      }\r\n     },[]) */\r\n\r\n     return ( \r\n      <div  style={{height:\"100vh\"}} className=\"back_divs\">\r\n      <Grid container>\r\n        <Hidden only={['xs', 'sm']}>\r\n           <Grid item xs ={5} md={2}><SideBar/></Grid>\r\n           </Hidden>\r\n             <Hidden only={['md', 'lg']}>\r\n           <Grid item xs={12} ><Header setLogin={props.setLogin}/></Grid>\r\n           </Hidden>\r\n            <Grid item xs={12} md={10}>\r\n       <PageTitle name= {\"Friend Requests\"}/>\r\n       {loading?\r\n       <div> {\r\n       friendreqs.length === 0 ? \r\n         ( <div style= {{textAlign: \"center\",fontSize:\"1.4rem\",\r\n     padding: \"6rem\", fontWeight:\"bold\"}}>You have no friend request😞</div>) \r\n         :\r\n         (\r\n           <div>\r\n         <Grid container   style={{marginTop:\"0.9rem\" }}>\r\n           <Grid item xs ={1} md={1}> </Grid>\r\n           <Grid item xs ={10} md={10}>\r\n             <Grid container   style={{marginBottom:\"1rem\" }}>\r\n           <Grid item xs ={0} md={7}> </Grid>\r\n           <Grid item xs ={12} md={5}  >\r\n             <TextField\r\n                 value={searchTerm}\r\n                 onChange={onChangeSearch}\r\n                 placeholder=\"Search by typing name\"\r\n                  \r\n         InputProps={{\r\n           startAdornment: (\r\n             <InputAdornment position=\"end\">\r\n              <SearchIcon style={{ color: \"black\" ,marginRight:\"0.4rem\",float:\"right\"}}/>\r\n             </InputAdornment>\r\n           ),\r\n          }}\r\n             />\r\n             </Grid>\r\n               \r\n             </Grid>\r\n           {\r\n           friendreqs.filter((friendreq)=>{\r\n              if(searchTerm == \"\") return friendreq\r\n              else if (friendreq.name.toLowerCase().startsWith(searchTerm.toLowerCase()))\r\n                 return friendreq\r\n            }).map((friendreq, index) => (\r\n                <SingleFriendRequest key={index} friendreq={friendreq} onAcceptReject={getFriendRequest}/> )\r\n           )}\r\n            \r\n           </Grid>\r\n           <Grid item xs={1}   md={10}></Grid>\r\n         </Grid>\r\n         </div> )\r\n          \r\n       }\r\n        </div>:\r\n           \r\n        <div class=\"d-flex justify-content-center\">\r\n          <strong style={{marginRight:\"1rem\"}}>Loading...</strong>\r\n   <div class=\"spinner-border\" role=\"status\">\r\n     \r\n   </div>\r\n </div>\r\n   }\r\n          </Grid>\r\n   \r\n       </Grid>\r\n     </div>\r\n       );\r\n\r\n}\r\nexport default AllFriendRequest;","import { Button,Grid,Paper } from \"@material-ui/core\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport React from \"react\";\r\nimport {   red  ,lightGreen} from '@material-ui/core/colors';\r\nconst SingleFriend = (props) => {\r\n    const { friend ,onRemove, chatRec} = props;\r\n    console.log(chatRec)\r\n    const myId=isAuthenticated()._id;\r\n    //const myEmail= isAuthenticated().email;\r\n    const friendEmail =  friend.email;\r\n     const RemoveFriend =()=>{\r\n         friendService.deleteFriend({friendId: friend.id, myId}) \r\n          .then((data) => {\r\n            //console.log(data)\r\n           onRemove()\r\n             localStorage.setItem(\"user\",JSON.stringify(data));\r\n             })\r\n         .catch((err) => {console.log(err);});\r\n      }\r\n    const chatButtonHandler = (fr)=>{\r\n      console.log(\"Fr\",fr)\r\n      console.log(\"pth\",\"/chat/\"+friendEmail+'/ '+fr.id)\r\n      localStorage.setItem(\"friendId\",fr.id)\r\n      localStorage.setItem(\"recName\",fr.name)\r\n      localStorage.setItem(\"recLang\",fr.langPreference)\r\n      localStorage.setItem(\"profileUrl\",fr.profileImg)\r\n      history.push(\"/chat/\"+friendEmail+' '+fr.id)\r\n    } \r\n    let history = useHistory()\r\n    return (\r\n       <Paper style={{padding:  '20px 10px', marginBottom:\"1rem\" }}  >\r\n         <Grid container style={{display:\"flex\"}}>\r\n           <Grid item    xs ={12} sm={12} md={9}>\r\n           <img src={friend.profileImg}\r\n          style={{  marginRight:\"0.5rem\",height: \"60px\", width: \"60px\", borderRadius: \"20%\",display:\"inline\",padding:\"0.2rem\" }} alt=\"img\"/>\r\n              <p   className=\"user_names\"  >{friend.name}</p>\r\n           </Grid>\r\n           <Grid item   xs={12} sm={12} md={3}  >\r\n             <Button className= \"loginbtn\"\r\n              style={{ backgroundColor:lightGreen[700],color:\"white\",margin:\"0.4rem\" }}\r\n            variant=\"contained\" \r\n            size=\"medium\"\r\n            onClick={()=> chatButtonHandler(friend)} \r\n            >Chat</Button>\r\n \r\n            <Button className= \"loginbtn\"\r\n             style={{  backgroundColor:red[400],color:\"white\" }}\r\n            variant=\"contained\" \r\n             onClick ={RemoveFriend}\r\n            >Remove</Button>\r\n           </Grid>\r\n         </Grid>\r\n             \r\n        \r\n      \r\n               </Paper> \r\n   \r\n     );\r\n}\r\n \r\nexport default SingleFriend;","import GenericService from \"./GenericService\";\r\nclass UserService extends GenericService{\r\n\r\n    getUsers = () => {\r\n        return this.get(\"users\");\r\n    }\r\n    getUserByEmail = (data) =>{\r\n        return this.post(\"users/userbyemail\",data);\r\n    }\r\n    getUserNameByEmail = (id) =>{\r\n        return this.get(\"users/usernamebyemail/\"+id);\r\n    }\r\n    \r\n}\r\n\r\nlet userservice = new UserService();\r\nexport default userservice;","import React ,{createContext, useRef,useEffect,useState} from 'react'\r\nimport chatservice from \"../services/ChatService\"\r\nimport userservice from \"../services/UserService\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const MyChatsContext = createContext();\r\nexport function MyChatsProvider({userId,children}) {\r\n    const [chatRecipients,setChatRecipients] = useState([])\r\n    let recData = []\r\n    let recMsgs = []\r\n    let msgType = []\r\n    let recName = []\r\n    let recId=[]\r\n    let imgUrl =[]\r\n    useEffect(()=>{\r\n        //userId.current = localStorage.getItem(\"userId\")\r\n        if(userId !== undefined){\r\n        getRecData(userId,undefined)\r\n        //console.log(userId)\r\n        }\r\n        console.log(\"undefined\")\r\n        \r\n    },[userId])\r\n\r\n    const getRecData = (uId)=>{\r\n         recData = []; recName =[]; recMsgs = []; msgType = []; imgUrl=[]; recId=[]\r\n        //console.log(\"in getdata\")\r\n        chatservice.getChatRecipients(uId).then((data)=>{    \r\n            if(data.length>0){\r\n                //console.log(\"data getchat\",data)\r\n                /* dataFromDb.push(data)\r\n                console.log(\"data from db getchat\",dataFromDb) */\r\n                data.map((rec) =>{\r\n                    //console.log('single rec',rec)\r\n                    return recData.push(rec)\r\n                })\r\n                console.log(\"rec data\",recData)\r\n                recData = Array.from(new Set(recData));\r\n                console.log(\"rec data updated\",recData)\r\n                setChatRecipients((r)=>{\r\n                    r.Rname=recData\r\n                    //console.log(chatRecipients)\r\n                    return r\r\n                })\r\n                chatRecipients.Rname.map((r)=>{\r\n                    //console.log(\"r\",r)\r\n                    chatservice.getLastMsg(uId, r)\r\n                    .then((data1)=>{\r\n                        //console.log(\"data\",data1.type)\r\n                        recMsgs.push(data1.lastMsg)\r\n                        msgType.push(data1.type)\r\n                        //return {recMsgs,msgType}\r\n                    })\r\n                    .catch((err)=>console.log(err))\r\n\r\n                    userservice.getUserByEmail(r).then((data2)=>{\r\n                        //console.log(\"data 2\",data2)\r\n                        recId.push(data2[0]._id)\r\n                        imgUrl.push(data2[0].profileImg)\r\n                        recName.push(data2[0].firstName+' '+data2[0].lastName)\r\n                        setChatRecipients((r)=>{\r\n                            r.lastMsg = recMsgs\r\n                            r.msgType = msgType\r\n                            r.recId = recId\r\n                            r.imgUrl= imgUrl\r\n                            r.name = recName\r\n                            console.log(chatRecipients)\r\n                            return r\r\n                        })\r\n                       /*  if(cb === undefined)\r\n                            console.log(\"do nothing\")\r\n                        else\r\n                            cb() */\r\n                    }).catch((err)=>console.log(err))\r\n                })\r\n                \r\n            }\r\n            else\r\n                console.log(\"no data\")\r\n            \r\n            })\r\n            .catch((err)=>console.log(err))\r\n            return chatRecipients\r\n    }\r\n\r\n    /* useEffect(()=>{\r\n        \r\n    },[chatRecipients]) */\r\n    //getRecData()\r\n  const value = {\r\n      chatRecipients : chatRecipients,\r\n      getRecData : getRecData,\r\n      setRecipients : setChatRecipients,\r\n      /* setuuIdFunc : setuuId,\r\n      uuId : uuId */\r\n  }\r\n  return (\r\n    <MyChatsContext.Provider value={value}>\r\n      {children}\r\n    </MyChatsContext.Provider>\r\n  )\r\n}\r\n\r\n","import React, { useEffect,useRef,useContext,useState } from \"react\";\r\nimport SingleFriend from \"./SingleFriend\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport { Button, Grid,Hidden,InputAdornment, TextField  } from \"@material-ui/core\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport {MyChatsContext} from '../../../context/MyChatsContext';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport io from \"socket.io-client\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SideBar from \"./SideBar\";\r\n\r\nconst AllFriends = (props) => {\r\n     const myId=isAuthenticated()._id;\r\n     const [friends, setFriends] =React.useState([]);\r\n     const [loading,setLoading]=useState(false);\r\n     let history = useHistory()\r\n      const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const onChangeSearch = (event) => \r\n        setSearchTerm(event.currentTarget.value)\r\n     let clientSocket1 = useRef()\r\n      const {clientSocket,setSocket,roomJoin, messageEvent, friendReq} =  useContext(SocketContext);\r\n     let userEmail = useRef()\r\n     userEmail.current = JSON.parse(localStorage.getItem(\"user\")).email\r\n\r\n     window.onload = () => {\r\n         friendReq()\r\n       messageEvent()\r\n      let did = JSON.parse(localStorage.getItem('user'))._id\r\n      roomJoin(did)\r\n      clientSocket1 = io(process.env.REACT_APP_IP_URL)\r\n      setSocket((s)=>{\r\n        s = clientSocket1\r\n        s.on('connect' , () => {\r\n          console.log(\"connected\",s.id);\r\n          s.emit(\"adduser\",{id:s.id, name: userEmail.current})\r\n          \r\n        });\r\n        return s;\r\n      })\r\n    };\r\n\r\n     const getAllMyFriends = () => \r\n     {\r\n       friendService.getAllFriends(myId)\r\n        .then((data)=>{\r\n         setFriends(data);\r\n         setLoading(true);\r\n        })\r\n      .catch((err=>{console.log(err)}))\r\n   \r\n     }\r\n    useEffect(()=>{\r\n\r\n      getAllMyFriends()\r\n      \r\n    }, []);\r\n    \r\n\r\n     return (\r\n      <div style={{height:\"100vh\"}} className=\"back_divs\">\r\n      <Grid container>\r\n       <Hidden only={['xs', 'sm']}>\r\n          <Grid item xs ={5} md={2}><SideBar/></Grid>\r\n          </Hidden>\r\n            <Hidden only={['md', 'lg']}>\r\n          <Grid item xs={12} ><Header setLogin={props.setLogin}/></Grid>\r\n          </Hidden>\r\n           <Grid item xs={12} md={10}>\r\n      <PageTitle name= {\"My Friends\"}/>\r\n    {loading?\r\n      <div> {\r\n      friends.length === 0 ? \r\n        ( <div style= {{textAlign: \"center\",fontSize:\"1.4rem\",\r\n    padding: \"6rem\", fontWeight:\"bold\"}}>You have no TalkSee Friend😞</div>) \r\n        :\r\n        (\r\n          <div>\r\n             \r\n        <Grid container   style={{marginTop:\"0.9rem\", display :\"flex\"}}>\r\n          <Grid item xs ={1} md={1}> </Grid>\r\n          <Grid item xs ={10} md={10}>\r\n            <Grid container   style={{marginBottom:\"1rem\"}}>\r\n          <Grid item xs ={0} md={7}> </Grid>\r\n          <Grid item xs ={12} md={5}  >\r\n            <TextField\r\n                value={searchTerm}\r\n                onChange={onChangeSearch}\r\n                placeholder=\"Search by typing name\"\r\n                 \r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"end\">\r\n             <SearchIcon style={{ color: \"black\" ,marginRight:\"0.4rem\",float:\"right\"}}/>\r\n            </InputAdornment>\r\n          ),\r\n         }}\r\n            />\r\n            </Grid>\r\n            </Grid>\r\n     \r\n          {\r\n          friends.filter((friend)=>{\r\n             if(searchTerm == \"\") return friend\r\n             else if (friend.name.toLowerCase().startsWith(searchTerm.toLowerCase()))\r\n                return friend\r\n           }).map((friend, index) => (\r\n               <SingleFriend key={index} friend={friend} onRemove={getAllMyFriends} /> )\r\n          )}\r\n            \r\n          </Grid>\r\n          <Grid item xs={1}   md={1}></Grid>\r\n        </Grid>\r\n         </div>)\r\n         \r\n      }\r\n       </div>:\r\n          \r\n       <div class=\"d-flex justify-content-center\">\r\n         <strong style={{marginRight:\"1rem\"}}>Loading...</strong>\r\n  <div class=\"spinner-border\" role=\"status\">\r\n    \r\n  </div>\r\n</div>\r\n  }\r\n      </Grid>\r\n  \r\n      </Grid>\r\n \r\n    </div> \r\n    \r\n    );\r\n\r\n}\r\nexport default AllFriends;","import React, { useState, useEffect,useContext, useRef } from \"react\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport Select from \"react-select\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport { grey, cyan} from '@material-ui/core/colors';\r\nimport {Button, Grid, Hidden} from \"@material-ui/core\";\r\nimport Header from \"./Header\";\r\nimport axios from 'axios';\r\nimport accountService from \"../../../services/accountService\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport SideBar from \"./SideBar\";\r\n \r\nimport io from \"socket.io-client\";\r\nimport Webcam from \"react-webcam\";\r\nconst useStyles = makeStyles({\r\n  \r\n  textfield: {\r\n    marginTop: \"2rem\",\r\n  },\r\n  Submitbtn: {\r\n    marginTop: \"0.6rem\",\r\n  },\r\n});\r\n\r\n\r\n\r\nconst UpdateProfileSetup = ({setLogin}) => {\r\n    const classes = useStyles();\r\n    const myId=isAuthenticated()._id;\r\n    let uId = JSON.parse(localStorage.getItem(\"user\")).email;\r\n    const {clientSocket,setSocket,roomJoin,messageEvent, friendReq} = useContext(SocketContext);\r\n    let clientSocket1 = useRef()\r\n    const webcamRef = React.useRef(null);\r\n    const [capturedPic, setCapturedPic]=React.useState(false);\r\nconst options = [\r\n  { label: 'Afrikaans',value:'af' },\r\n  { label: 'Albanian',value:'sq'},\r\n  { label: 'Amharic',value:'am'},\r\n  { label: 'Arabic',value:'ar'},\r\n  { label: 'Armenian',value:'hy'},\r\n  { label: 'Azerbaijani',value:'az'},\r\n  { label: 'Basque',value:'eu'},\r\n  { label: 'Belarusian',value:'be'},\r\n  { label: 'Bengali',value:'bn'},\r\n  { label: 'Bosnian',value:'bs'},\r\n  { label: 'Bulgarian',value:'bg'},\r\n  { label: 'Catalan',value:'ca'},\r\n  { label: 'Cebuano',value:'ceb'},\r\n  { label: 'Chichewa',value:'ny'},\r\n  { label: 'Chinese',value:'zh-cn'},\r\n  { label: 'Corsican',value:'co'},\r\n  { label: 'Croatian',value:'hr'},\r\n  { label: 'Czech',value:'cs'},\r\n  { label: 'Danish',value:'da'},\r\n  { label: 'Dutch',value:'nl'},\r\n  { label: 'English',value:'en'},\r\n  { label: 'Esperanto',value:'eo'},\r\n  { label: 'Estonian',value:'et'},\r\n  { label: 'Filipino',value:'tl'},\r\n  { label: 'Finnish',value:'fi'},\r\n  { label: 'French',value:'fr'},\r\n  { label: 'Danish',value:'da'},\r\n  {label: 'Frisian',value: \"fy\"},\r\n  {label: 'Galician',value: \"gl\"},\r\n  {label: 'Georgian',value: \"ka\"},\r\n  {label: 'German',value: \"de\"},\r\n  {label: 'Greek',value: \"el\"},\r\n  {label: 'Gujarati',value: \"gu\"},\r\n  {label: 'Haitian creole',value: \"ht\"},\r\n  {label:'Hausa',value: \"ha\"},\r\n  {label:'Hawaiian',value: \"haw\"},\r\n  {label:'Hebrew',value: \"iw\"},\r\n  {label: 'Hindi',value: \"hi\"},\r\n  {label:'Hmong',value: \"hmn\"},\r\n  {label:'Hungarian',value: \"hu\"},\r\n  {label:'Icelandic',value: \"is\"},\r\n  {label:'Igbo',value: \"ig\"},\r\n  {label:'Indonesian',value: \"id\"},\r\n  {label:'Irish',value: \"ga\"},\r\n  {label:'Italian',value: \"it\"},\r\n  {label:'Japanese',value: \"ja\"},\r\n  {label:'Javanese',value: \"jw\"},\r\n  {label:'Kannada',value: \"kn\"},\r\n  {label:'Kazakh',value: \"kk\"},\r\n  {label:'Khmer',value:'km'},\r\n  {label:'Korean',value:'ko'},\r\n  {label:'Kurdish',value:'ku'},\r\n  {label: 'Kyrgyz',value: \"ky\"},\r\n  {label: 'Lao',value: \"lo\"},\r\n  {label: 'Latin',value: \"la\"},\r\n  {label: 'Latvian',value: \"lv\"},\r\n  {label: 'Lithuanian',value: \"lt\"},\r\n  {label: 'Luxembourgish',value: \"lb\"},\r\n  {label: 'Macedonian',value: \"mk\"},\r\n  {label:'Malagasy',value: \"mg\"},\r\n  {label:'Malay',value: \"ms\"},\r\n  {label:'Malayalam',value: \"ml\"},\r\n  {label: 'Maltese',value: \"mt\"},\r\n  {label:'Maori',value: \"mi\"},\r\n  {label:'Marathi',value: \"mr\"},\r\n  {label:'Mongolian',value: \"mn\"},\r\n  {label:'Myanmar (burmese)',value: \"my\"},\r\n  {label:'Nepali',value: \"ne\"},\r\n  {label:'Norwegian',value: \"no\"},\r\n  {label:'Odia',value: \"or\"},\r\n  {label:'Pashto',value: \"ps\"},\r\n  {label:'Persian',value: \"fa\"},\r\n  {label:'Polish',value: \"pl\"},\r\n  {label:'Portuguese',value: \"pt\"},\r\n  {label:'Punjabi',value: \"pa\"},\r\n  {label :'Romanian', value:\"ro\"},\r\n  {label :'Russian', value:\"ru\"},\r\n  {label:'Samoan',value: \"sm\"},\r\n  {label:'Scots gaelic',value: \"gd\"},\r\n  {label:'Serbian',value: \"sr\"},\r\n  {label:'Sesotho',value: \"st\"},\r\n  {label:'Shona',value: \"sn\"},\r\n  {label:'Sindhi',value: \"sd\"},\r\n  {label:'Sinhala',value: \"si\"},\r\n  {label:'Slovak',value: \"sk\"},\r\n  {label:'Slovenian', value:\"sl\"},\r\n  {label:'Somali', value:\"so\"},\r\n  {label:'Spanish', value:'es' },\r\n  {label:'Sundanese',value: \"su\"},\r\n  {label:'Swahili',value: \"sw\"},\r\n  {label:'Swedish',value: \"sv\"},\r\n  {label:'Tajik',value: \"tg\"},\r\n  {label:'Tamil',value: \"ta\"},\r\n  {label:'Telugu',value: \"te\"},\r\n  {label:'Thai',value: \"th\"},\r\n  {label:'Turkish',value: \"tr\"},\r\n  {label :'Ukrainian', value:\"uk\"},\r\n  {label:'Urdu',value: \"ur\"},\r\n  {label :'Uyghur', value:\"ug\"},\r\n  {label:'Uzbek', value:'uz' },\r\n  {label:'Vietnamese',value: \"vi\"},\r\n  {label :'Welsh', value:\"cy\"},\r\n  {label:'Xhosa',value: \"xh\"},\r\n  {label :'Yiddish', value:\"yi\"},\r\n  {label:'Yoruba', value:'yo' },\r\n  {label:'Zulu',value: \"zu\"},\r\n  \r\n];\r\n \r\n    const [values, setValues] = useState({\r\n    img: \"\",\r\n    language:\"\",\r\n    errorMessage: \"\",\r\n    successMsg:\"\",\r\n    infoMessage:\"\",\r\n    loading: false,\r\n  });\r\n  const { img,language, successMsg, errorMessage,infoMessage, loading } = values;\r\n \r\n   window.onload = () => {\r\n    friendReq()\r\n    messageEvent()\r\n    let did = JSON.parse(localStorage.getItem('user'))._id\r\n    roomJoin(did)\r\n    clientSocket1 = io(process.env.REACT_APP_IP_URL)\r\n    setSocket((s)=>{\r\n      s = clientSocket1\r\n      s.on('connect' , () => {\r\n        console.log(\"connected\",s.id);\r\n        s.emit(\"adduser\",{id:s.id, name: uId})\r\n      });\r\n      return s;\r\n    })\r\n  };\r\n\r\n useEffect(() => {\r\n     accountService.getMyAccount(myId).then((data) => {\r\n     setValues({ ...values , img: data.profileImg, language:data.langPreference});\r\n    }).catch((err) => {\r\n           setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n  }, []);\r\n\r\nconst resizeFile = (file) => new Promise(resolve => {\r\n    Resizer.imageFileResizer(file, 300, 300, 'JPEG', 100, 0,\r\n    uri => {resolve(uri);},'base64' );\r\n});\r\nconst capture =  React.useCallback(() => {\r\n   try{\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n       setValues({...values, infoMessage: \"Picture Captured\"}); \r\n       setCapturedPic(true);\r\n       const data = new FormData();\r\n       data.append(\"file\", imageSrc);\r\n       axios.post(\"http://127.0.0.1:5000/webcam-face-detection\",data)\r\n         .then(async (response) => {\r\n          setValues({ ...values , errorMessage :\"\", successMsg:response.data.successMessage})\r\n           setValues({...values, infoMessage: \"Loading.... \"});\r\n           data.append(\"file\", imageSrc);\r\n           data.append(\"upload_preset\", \"TalkSee\");\r\n          fetch(\"https://api.cloudinary.com/v1_1/fariha31/image/upload\",\r\n              { method: \"PUT\",\r\n                body: data,\r\n             } ).then(response => response.json())\r\n      .then(data =>   setValues({ ...values , img: data.url}))\r\n      .catch(err => console.error('Error:', err));;   \r\n           }\r\n        )\r\n         }\r\n catch(err)\r\n     {setValues({...values, errorMessage: \"error in uploading photo\"}); }\r\n    \r\n    },\r\n    [webcamRef]\r\n  );\r\n const uploadImage = async (e) => {\r\n  try {\r\n           const imageFile = e.target.files[0];\r\n           const data = new FormData();\r\n           data.append(\"file\", imageFile);\r\n           axios.post(\"http://127.0.0.1:5000/\",data).\r\n           then(async (response) => {\r\n           setValues({ ...values , errorMessage :\"\", successMsg:response.data.successMessage})\r\n            const compressedImage = await resizeFile(imageFile);\r\n           setValues({...values, infoMessage: \"Loading....\"});\r\n           data.append(\"file\", compressedImage);\r\n           data.append(\"upload_preset\", \"TalkSee\");\r\n           const res = await fetch(\"https://api.cloudinary.com/v1_1/fariha31/image/upload\",\r\n              { method: \"PUT\",\r\n                body: data,\r\n             } );   \r\n           const file =  await res.json();\r\n           setValues({ ...values , img: file.secure_url});\r\n        })\r\n        .catch((err) => {\r\n            setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n      }\r\n catch(err)\r\n     {setValues({...values, errorMessage: \"error in uploading photo\"}); }\r\n}\r\nconst updateProfile =()=>{\r\n  accountService.updateProfileSetup(myId,{profileImg: img, langPreference: language})\r\n .then((response) => {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.userData));\r\n          setValues({\r\n            ...values,\r\n            errorMessage: false,\r\n            successMsg: response.successMessage,\r\n            loading: false,\r\n          });\r\n           \r\n        })\r\n         .catch((err) => {\r\n           setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n}\r\n \r\n  const ProfilePage = () =>( \r\n    <Grid container>\r\n    <Grid item xs={1} sm={4} md={4}></Grid>\r\n    <Grid item xs={10} sm={4} md={4}>\r\n  <div className=\"profile-page\">\r\n    \r\n      <div className=\"profile-container\">\r\n          <div className=\"img-holder\">\r\n             <img src={img} className=\"profile-img\"/>\r\n              </div>\r\n             <input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={uploadImage}  />\r\n             <div className=\"label\">\r\n            <label className=\"image-upload\" htmlFor=\"input\">\r\n\t\t\t\t\t\t<i className=\"material-icons\">add_photo_alternate</i>\r\n\t\t\t\t\t\tChoose Profile Photo\r\n\t\t\t\t\t</label>\r\n                 </div> \r\n             <div className=\"label\">   \r\n             <button className=\"take-photo loginbtn\"  data-toggle=\"modal\" data-target=\"#exampleModalCenter\" onClick={()=>setCapturedPic(false)}>\r\n               <i className=\"material-icons\" style ={{marginRight:\"0.2rem\"}}>photo_camera</i>\r\n               Take Photo</button> \r\n              </div>\r\n              <Select\r\n                    style={{ width: 210, padding: \"0.4rem\" }}\r\n                    placeholder=\"Select Language ---\"\r\n                    value={options.find(c => c.value === language)}\r\n                    className={classes.textfield}\r\n                    options={options}\r\n                    onChange={(e) => { \r\n                      setValues({\r\n                        ...values,\r\n                        language:e.value ,\r\n                      });\r\n                      \r\n                    }}\r\n                  />\r\n                   <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              fontSize:\"1rem\",\r\n              borderRadius:\"0.5rem\" , \r\n              marginTop: \"1rem\",\r\n              marginBottom: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n              textTransform:\"capitalize\"\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={updateProfile}\r\n            \r\n          >\r\n            Update Profile\r\n          </Button>\r\n                   \r\n      </div> \r\n                \r\n  \r\n<div className=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div className=\"modal-content\">\r\n      <div className=\"modal-header\">\r\n        <h3 className=\"modal-title\" id=\"exampleModalLongTitle\">Take Photo</h3>\r\n        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <div  className=\"webcam-container\">\r\n         <Webcam  \r\n        audio={false}\r\n        height= {200}\r\n       width ={460}\r\n        ref={webcamRef}\r\n        screenshotFormat=\"image/jpeg\" />\r\n        </div>\r\n      </div>\r\n       \r\n        {capturedPic ? (<div className=\"modal-footer\"> \r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        </div> ):\r\n        (<div className=\"modal-footer\"> \r\n        <button  className=\"take-photo loginbtn\" onClick ={capture}>\r\n          <i className=\"material-icons\" style ={{marginRight:\"0.2rem\"}}>\r\n            photo_camera</i>Capture photo</button> </div>)\r\n        }\r\n    </div>\r\n  </div>\r\n</div>             \r\n  </div>\r\n  </Grid>\r\n  <Grid item xs={1} sm={4} md={3}></Grid>\r\n  </Grid>\r\n)\r\nreturn (\r\n    <div  style={{height:\"100vh\"}} className=\"back_divs\">    \r\n    {loading && <LinearBuffer />}\r\n        <Grid container>\r\n          <Hidden only={['xs', 'sm']}>\r\n          <Grid item     md={2}><SideBar/></Grid>\r\n          </Hidden>\r\n           <Hidden only={['md', 'lg']}>\r\n          <Grid item xs={12} sm={12}><Header setLogin={setLogin}/></Grid>\r\n          </Hidden>\r\n       <Grid item  xs={12} sm={12} md={10}>\r\n     <PageTitle name= {\"Update Profile \"}/>\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={3000} />\r\n      )}\r\n       {infoMessage && (\r\n        <AlertBar type=\"info\" message={infoMessage} autoClose={8000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={2500} />\r\n      )}\r\n      {ProfilePage()}\r\n      </Grid>\r\n       </Grid>\r\n    </div>\r\n     )\r\n};\r\n\r\nexport default UpdateProfileSetup;\r\n","import React,{useContext,useState} from \"react\";\r\nimport \"./chat.css\"\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport \"video-react/dist/video-react.css\"\r\nimport { Button } from \"@material-ui/core\";\r\nimport chatservice from \"../../services/ChatService\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Typography } from '@material-ui/core';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { DeletePermission } from \"../../context/DeletePermissionContext\";\r\n\r\n\r\nconst DeleteMsg = (props) => {\r\n \r\n   var boxchecked = JSON.parse(localStorage.getItem(\"deletion\"));\r\n    const [open, setOpen] = useState(true);\r\n     const { dispatch } = useContext(DeletePermission);\r\n    const [checked , setChecked] = useState(boxchecked.state)\r\n    const handleClose = () => {\r\n        props.setShow(false);\r\n    };\r\n\r\n    const checkedHandler = (e)=>{\r\n        console.log(e.target.checked)\r\n        setChecked(e.target.checked)\r\n      dispatch({ type: \"updatePermission\", value: e.target.checked })\r\n    }\r\n\r\n    const deleteMsgHandler = (msgId) =>{\r\n        console.log(\"mid in deleteMsg\",msgId)\r\n        chatservice.deleteMessage(msgId).then((res)=>{\r\n          console.log(\"response: \",res)\r\n          props.setShow(false)\r\n          props.getData()\r\n        })\r\n        .catch((err)=>  console.log(err))\r\n      \r\n       }\r\n\r\n       return (\r\n         \r\n        <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\"><WarningIcon  style={{color:\"red\",marginRight:\"0.3rem\",paddingBottom:'0.3rem'}}/><p style={{fontWeight:\"bold\",display:\"inline\" }}>Delete Warning</p></DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            This message will be permanently deleted. Are you sure you want to continue?\r\n          </DialogContentText>\r\n          <div>\r\n          <input type='checkbox' value = {checked}  defaultChecked={checked} onClick={(e)=>checkedHandler(e)}/>\r\n          <p style={{color: \"black\", fontSize: '16px',display:\"inline\",marginLeft:\"0.7rem\"}}>Do not ask me again?</p>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}  style={{backgroundColor:\"gray\",color:\"white\"}}>\r\n            No\r\n          </Button>\r\n          <Button onClick={()=>deleteMsgHandler(props.msgId)}  style={{backgroundColor:\"#0e7be9\",color:\"white\"}}>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog> \r\n     );\r\n}\r\n \r\nexport default DeleteMsg;","import React, {useState,useRef} from \"react\";\r\nimport \"./chat.css\"\r\nimport { Player } from 'video-react';\r\nimport \"video-react/dist/video-react.css\"\r\nimport {  Grid, Button } from \"@material-ui/core\";\r\nimport DeleteMessage from './DeleteMsg'\r\nimport chatservice from \"../../services/ChatService\";\r\nexport default function SettingMessage(props) {\r\n \r\n  var boxchecked = JSON.parse(localStorage.getItem(\"deletion\"));\r\n  const [open, setOpen] = React.useState(false);\r\n  const [show,setShow] = React.useState(false)\r\n  const [messageId, setId] = useState()\r\n \r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  let elem = null;\r\n  \r\n  const handleClickOpen= (msgId)=>{\r\n    if(boxchecked.state === true){\r\n      console.log(\"mid in settingmsg1\",msgId);\r\n      setShow(false)\r\n         chatservice.deleteMessage(msgId).then((res)=>{\r\n        console.log(\"response: \",res)\r\n        props.getData()\r\n      })\r\n      .catch((err)=>  console.log(err))\r\n   }\r\n   else{\r\n  setShow(true)\r\n  console.log(\"mid in settingmsg2\",msgId);\r\n  setId(msgId)}\r\n  }\r\n\r\n  if (props.message.to === props.user) {\r\n\r\n     elem = (\r\n      <div >\r\n        <div className='incoming_msg_img'>\r\n          \r\n        </div>\r\n        <Grid container >\r\n              <Grid item xs={6} md={3}>  \r\n              <div  style={{marginLeft:\"15px\",marginTop:\"12px\",marginBottom:\"8px\"}}> \r\n                <Player   >\r\n                 <source src={props.message.messageVideo} />\r\n              </Player>\r\n\r\n              \r\n                </div>\r\n                </Grid>\r\n              <Grid item xs={6} md={9}  >  {\r\n            props.isDel ?\r\n            <Button className=\"Allbtn\"  style={{textTransform:\"capitalize\" ,marginTop:\"0.8rem\", color:\"#EC5454\",fontSize:\"1.2rem\"}}>\r\n              <i class=\"fas fa-trash-alt\"   onClick={()=>handleClickOpen(props.message.msgId)}></i>\r\n            </Button>\r\n\r\n            : null\r\n          }</Grid> \r\n              </Grid>\r\n               <div class=\"chat-message is-received\">\r\n                <div class=\"message-block\">\r\n               <div class=\"message-text\">{props.message.messageBody}</div>\r\n                   <span className=\"received_time_date\"> {props.message.time}</span>\r\n                </div>\r\n                </div>\r\n      </div>\r\n    );\r\n  \r\n  }\r\n  else if (props.message.from === props.user) {\r\n    elem = (\r\n      <div >\r\n        \r\n         \r\n          <Grid container >\r\n              <Grid item xs={6} md={9}>  {\r\n            props.isDel ?\r\n            <Button className=\"Allbtn\" style={{textTransform:\"capitalize\" ,float:\"right\",marginTop:\"0.8rem\",color:\"#EC5454\",fontSize:\"1.2rem\"}}  >\r\n               <i class=\"fas fa-trash-alt\"  onClick={()=>handleClickOpen(props.message.msgId)}></i>\r\n            </Button>\r\n            : null\r\n               }</Grid>\r\n              <Grid item xs={6} md={3}  >\r\n                 <div style={{marginRight:\"15px\",marginTop:\"12px\",marginBottom:\"8px\"}}> \r\n                <Player   >\r\n                  <source src={props.message.messageVideo} />\r\n              </Player>\r\n              \r\n                </div></Grid>\r\n              </Grid>\r\n               <div class=\"chat-message is-sent\" >\r\n                 <div class=\"message-block\">  \r\n                 <div class=\"message-text\"> {props.message.messageBody}</div>\r\n                  <span class=\"sent_time_date\"> {props.message.time}</span>\r\n                 </div>\r\n                </div>\r\n      </div>\r\n    );\r\n  } \r\n   else {\r\n\r\n    console.log(\"nothing\");\r\n  }\r\n  return (\r\n    <div>\r\n        \r\n        {elem}\r\n        {\r\n        show ?\r\n        <DeleteMessage open ={show} setShow={setShow} msgId = {messageId} getData={props.getData}/>\r\n        : null}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    \r\n  inputInput: {\r\n    paddingLeft: `calc(1em + ${theme.spacing(1)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    float:\"left\",\r\n    color:\"black\",\r\n    borderRadius: \"2rem\",\r\n    backgroundColor:\"white\",\r\n    width:\"100%\",\r\n    padding:\"0.4rem\",\r\n  border: \"1.4px solid #c4c4c4\",\r\n    \r\n  },\r\n  \r\n   \r\n  \r\n}));\r\nexport default function TypeMessage(props) {\r\n  const [message, setMessage] = useState(\"\");\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment >\r\n    <Grid container  style={{  display:\"flex\",paddingTop:\"0.5rem\" }}> \r\n    <Grid item xs ={10} sm={11} md={11}> \r\n     <InputBase\r\n              placeholder=\"Type a message here\"\r\n              className={classes.inputInput}\r\n              inputProps={{ 'aria-label': 'type' }}\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            /></Grid>\r\n    <Grid item xs ={2}  sm={1} md={1}>  <Button variant=\"contained\" size=\"small\" className= \"Allbtn\" style={{\r\n               backgroundColor:  'rgb(0, 172, 193)',\r\n                color : 'white',\r\n                float:\"left\",\r\n                  padding:\"0.5rem\",\r\n                  margin:\"0.2rem\",\r\n                borderRadius:\"0.3rem\"}}\r\n              onClick={() => {\r\n              props.sendMessage(message);\r\n              setMessage(\"\");\r\n            }}>\r\n              <SendIcon  style={{marginRight:\"0.4rem\",fontSize:\"0.8rem\"}}/>\r\n            Send\r\n          </Button></Grid>\r\n         \r\n      \r\n     </Grid>\r\n              </React.Fragment>\r\n  );\r\n}\r\n","import TypeMessage from \"./TypeMessage\";\r\nimport React , {useEffect,useState}from \"react\";\r\nimport \"./chat.css\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Alert from '../FrontendComponents/Alerts/AlertBar'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { useHistory } from 'react-router-dom';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Header from \"../FrontendComponents/components/Header\";\r\nimport {Button, Grid ,Hidden,InputAdornment, TextField} from \"@material-ui/core\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SideBar from \"../FrontendComponents/components/SideBar\";\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport {isAuthenticated} from '../FrontendComponents/clientStorages/auth'\r\nimport { grey } from '@material-ui/core/colors';\r\nimport ReactTooltip from 'react-tooltip';\r\n \r\n\r\nexport default function RenderChat(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [isSearch, setSearch] = useState(false)\r\n  const open = Boolean(anchorEl);\r\n  const options = [\r\n    'Search',\r\n    'Delete'\r\n  ];\r\n  const [openMenu, setMenu] = useState(true)\r\n  const [open1, setOpen] = useState(false)\r\n  let history = useHistory()\r\n  let myId = isAuthenticated()._id\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    //props.setMyOpen(true)\r\n    setOpen(true)\r\n  };\r\n\r\n  const handleClose = (option) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const itemClickHandler= (option)=>{\r\n   if(option === 'Delete'){\r\n      props.setDel(true)\r\n      setMenu(false)\r\n   }\r\n    else if(option === 'Search')\r\n      setSearch(!isSearch)\r\n  }\r\n\r\n\r\n   const onChangeSearch = (event)=>{\r\n    //props.setTerm(event.currentTarget.value)\r\n    props.searchHandler(event.currentTarget.value)\r\n  }\r\n  useEffect(()=>{\r\n    let imgUrl = props.recipientInfo.url;\r\n\r\n  })\r\n  let elem = null;\r\n  if(openMenu){\r\n    elem = (\r\n      <div  style={{display:\"inline\",float:\"right\",marginTop:\"0.6rem\"}}>\r\n      <IconButton\r\n    className =\"Allbtn\" \r\n    aria-label=\"more\"\r\n    aria-controls=\"long-menu\"\r\n    aria-haspopup=\"true\"\r\n    onClick={handleClick}\r\n    >\r\n    <MoreVertIcon />\r\n    </IconButton>\r\n    {open1 ?\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n        style: {\r\n            marginTop: '40px',\r\n            maxHeight: 48 * 4.5,\r\n            width: '20ch',\r\n            \r\n        },\r\n      }}\r\n      >\r\n        <MenuItem className =\"Menu_div\" onClick={()=>itemClickHandler('Search')}>\r\n          <div >\r\n            <SearchIcon fontSize=\"small\" style={{width:\"2rem\"}}/>\r\n            <p style={{display:\"inline\"}}>Search</p>\r\n          </div>\r\n        </MenuItem>\r\n        <MenuItem  className =\"Menu_div\" onClick={()=>itemClickHandler('Delete')}>\r\n          <div>\r\n            <DeleteIcon fontSize=\"small\" style={{width:\"2rem\",paddingBottom:\"0.1rem\"}} />\r\n               <p style={{display:\"inline\"}}>Delete</p>\r\n          </div>\r\n      \r\n        </MenuItem>\r\n    </Menu>\r\n    :\r\n    null\r\n    }\r\n      \r\n    \r\n      </div>\r\n    )\r\n  }\r\n  if(props.isDel){\r\n    elem = (\r\n      <div style={{color:\"gray\",cursor:\"pointer\",float:\"right\",marginTop:\"1rem\",marginRight:\"1rem\"}} data-tip='Close delete Menu' data-for='delete'>\r\n          <CancelIcon onClick={() => {\r\n            console.log(props.isDel)\r\n            props.setDel(false)\r\n            setOpen(false)\r\n            setMenu(true)\r\n            }} />\r\n          \r\n            </div>\r\n\r\n    )\r\n  }\r\n  if(isSearch){\r\n    elem = (\r\n      <TextField\r\n       style={{float:\"right\",marginRight:\"1rem\",marginTop:\"0.8rem\",backgroundColor:\"white\",borderRadius:\"1rem\"}}\r\n       value={props.searchTerm}\r\n       onChange={onChangeSearch}\r\n        placeholder=\"Search Message\"\r\n        size=\"medium\"\r\n          \r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <SearchIcon style={{ color: grey[600] ,marginRight:\"0.2rem\",float:\"right\"}}/>\r\n       \r\n            </InputAdornment>\r\n          ),\r\n          endAdornment :(\r\n               <CancelIcon style={{color:\"gray\",cursor:\"pointer\",marginRight:\"0.4rem\"}} onClick={() => {\r\n            console.log(props.isDel)\r\n            props.setTerm(\"\")\r\n            setSearch(false)\r\n            setOpen(false)\r\n            setMenu(true)\r\n            }} />\r\n      \r\n          ),\r\n          disableUnderline: true \r\n         }}\r\n         \r\n      />\r\n      \r\n    )\r\n  }\r\n  return (\r\n    /* <React.Fragment> \r\n       <div  style={{ height:\"100vh\"}} className=\"chat_div\"> \r\n      <Header setLogin={props.setLogin} />     \r\n        <ReactTooltip id='delete'/>\r\n            <Grid container spacing={0} style={{display:\"flex\"}}>\r\n              <Grid item xs ={1} md={2}></Grid>\r\n              <Grid item xs ={10} md={8} style={{marginTop:\"1rem\" }}>\r\n                <div className='profilediv'>\r\n\r\n              <img\r\n                className='profile'\r\n                src={props.recipientInfo.url}\r\n                alt='dp'\r\n              />\r\n \r\n              <span   style={{display:\"inline\",fontWeight:\"bold\", fontSize: \"21px\" }}>{props.recipientInfo.name}</span>\r\n              \r\n              {      \r\n                 elem\r\n              }\r\n            </div>\r\n            <div className=\"content_body \">\r\n              \r\n             {props.element}\r\n             {props.loading ? (\r\n              <div className='load'>\r\n                <CircularProgress color='secondary' />\r\n              </div>\r\n            ) : null}\r\n \r\n            </div>\r\n           { props.isFriend === true?\r\n            <TypeMessage sendMessage={props.sendMessage} />\r\n            :\r\n            <Alert\r\n            type='error' \r\n            message='This person is not your friend anymore. Add them again to start a chat.'\r\n            autoClose={5000}\r\n            />\r\n          }\r\n              </Grid>\r\n              <Grid item xs ={1} md={2}></Grid>\r\n              </Grid>\r\n              </div>\r\n              </React.Fragment>\r\n  */\r\n  <React.Fragment>\r\n       <div  style={{ height:\"100vh\"}} className=\"chat_div\"> \r\n       <Grid container>\r\n           <Hidden only={['sm', 'xs']}>\r\n          <Grid item  md={2}><SideBar/></Grid>\r\n          </Hidden>\r\n            \r\n       <Grid item xs={12} md={10}>\r\n        <ReactTooltip id='delete'/>\r\n            <Grid container spacing={0} style={{display:\"flex\",marginTop:\"1rem\"}}>\r\n               <Grid xs={0} md={1}></Grid>\r\n              <Grid item xs={12} md ={10}   >\r\n                <div className='profilediv'>\r\n                  <Hidden only={['md','lg']}>\r\n                   <KeyboardBackspaceIcon style={{marginRight:\"0.1rem\",marginLeft:\"0.1rem\",cursor:\"pointer\"}}  onClick={event =>  history.push('/mychats/'+myId)} /> \r\n                  </Hidden>\r\n              <img\r\n                className='profile'\r\n                src={props.recipientInfo.url}\r\n                alt='dp'\r\n              />\r\n \r\n              <span   style={{display:\"inline\",fontWeight:\"bold\", fontSize: \"21px\" }}>{props.recipientInfo.name}</span>\r\n              \r\n              {      \r\n                 elem\r\n              }\r\n            </div>\r\n            <div className=\"content_body \">\r\n              \r\n             {props.element}\r\n             {props.loading ? (\r\n              <div className='load'>\r\n                <CircularProgress color='secondary' />\r\n              </div>\r\n            ) : null}\r\n \r\n            </div>\r\n           { props.isFriend === true?\r\n            <TypeMessage sendMessage={props.sendMessage} />\r\n            :\r\n            <Alert\r\n            type='error' \r\n            message='This person is not your friend anymore. Add them again to start a chat.'\r\n            autoClose={5000}\r\n            />\r\n          }\r\n              </Grid>\r\n              <Grid xs={0} md={1}></Grid>\r\n              </Grid>\r\n              </Grid>\r\n       </Grid>\r\n              </div>\r\n              </React.Fragment>\r\n \r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef, useContext } from \"react\";\r\nimport chatservice from \"../../services/ChatService\";\r\nimport friendService from \"../../services/friendService\";\r\nimport \"./chat.css\";\r\nimport SettingMessage from \"./SettingMessage\";\r\nimport { SocketContext } from \"../../context/SocketContext\";\r\nimport { ChatContext } from \"../../context/ChatContext\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport RenderChat from './RenderChat'\r\nimport { toast } from 'react-toastify';\r\nimport { Zoom } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport io from \"socket.io-client\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function SingleChat(props) {\r\n  const [chat, setChat] = useState([{ from: \"\", to: \"\", messages: [] }]);\r\n  const [searchChats, setSearchChats] = useState({messages :['']})\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [loading, setLoading] = useState(false);\r\n  const [isFriend, setIsFriend] = useState(true)\r\n  const scrollRef = useRef();\r\n  let chats = useRef([]);\r\n  let friends = useRef()\r\n  let dummy = [];\r\n  let user = useRef({ uId: \"\", uImg: \"\", uName: \"\" });\r\n  let recipient = useRef(\"\");\r\n  let recipientInfo = useRef({ name: \"\", lang: \"\", url: \"\" });\r\n  let roomId = useRef(\"\");\r\n  let myChatsRoom = useRef();\r\n  let notificationRoom = useRef();\r\n  let returndata;\r\n  let id = props.match.params.id.split(\" \");\r\n  const { clientSocket,setSocket,roomJoin, messageEvent, friendReq } = useContext(SocketContext);\r\n  const { count, setCounter } = useContext(SocketContext);\r\n  const [isDel , setDel] = useState(false)\r\n  const [isChat, setIsChat] = React.useState(false)\r\n  let clientSocket1 = useRef()\r\n  var us = JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [chat]); \r\n  \r\n  //useEffect(() => {\r\n    recipientInfo.current.name = localStorage.getItem(\"recName\");\r\n    recipientInfo.current.lang = localStorage.getItem(\"recLang\");\r\n    recipientInfo.current.url = localStorage.getItem(\"profileUrl\");\r\n    myChatsRoom.current = \"mychats/\" + localStorage.getItem(\"friendId\");\r\n    notificationRoom.current = \"/\" + id[1];\r\n    recipient.current = id[0];\r\n    user.current.uId = us.email;\r\n    user.current.uName = us.firstName + \" \" + us.lastName;\r\n    user.current.uImg = us.profileImg\r\n // }, [us]);\r\n\r\n window.onload = () => {\r\n  friendReq()\r\n  messageEvent()\r\n  let did = JSON.parse(localStorage.getItem('user'))._id\r\n  roomJoin(did)\r\n  clientSocket1 = io(\"http://127.0.0.1:5000\")\r\n  setSocket((s)=>{\r\n  s = clientSocket1\r\n  s.on('connect' , () => {\r\n    console.log(\"connected\",s.id);\r\n    s.emit(\"adduser\",{id:s.id, name: user.current.uId})\r\n    \r\n  });\r\n  return s;\r\n  })\r\n};\r\n\r\n  const getData = () => {\r\n    console.log(\"in get Data\",user)\r\n    chatservice\r\n      .getMessagesbyEmail(user.current.uId, recipient.current)\r\n      .then((data) => {\r\n        if(data)\r\n        {\r\n          console.log(\"This data\",data)\r\n          chats.current = data;\r\n          setChat({ messages: chats.current });\r\n          setIsChat(true)\r\n        }\r\n        \r\n      })\r\n      .catch((err) => toast.error(\r\n        'Database Connection Error', {\r\n        position: toast.POSITION.TOP_LEFT,\r\n        autoClose: 3000,\r\n        transition: Zoom\r\n      }));\r\n      \r\n  };\r\n\r\n  \r\n\r\n  useEffect (()=>{\r\n    let mycount=0;\r\n    friendService.getAllFriends(us._id)\r\n    .then((data)=>{\r\n      friends.current = data\r\n      friends.current.forEach((f) => {\r\n        if(f.email === recipient.current)\r\n          mycount=mycount+1\r\n        \r\n      })\r\n      if(mycount<1)\r\n       setIsFriend(false)\r\n      })\r\n      .catch((err=>toast.error(\r\n        'Database Connection Error', {\r\n        position: toast.POSITION.TOP_LEFT,\r\n        autoClose: 3000,\r\n        transition: Zoom\r\n      })))\r\n  })\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (clientSocket !== undefined) {\r\n      clientSocket.emit(\r\n        \"roomJoin\",\r\n        { from: user.current.uId, to: recipient.current },\r\n        ({ error, room }) => {\r\n          if (!error) {\r\n            roomId.current = room;\r\n            console.log(\"joined room with id\", room);\r\n          } else {\r\n            console.log(\"error joining room\", error);\r\n          }\r\n        }\r\n      );\r\n\r\n      clientSocket.on(\"messageReceived\", (payload) => {\r\n        setChat((chatState) => {\r\n          if (chatState.messages) {\r\n            let newMessages = [...chatState.messages];\r\n            newMessages = [...newMessages, payload];\r\n            return { ...chatState, messages: newMessages };\r\n          } else {\r\n            return { messages: [payload] };\r\n          }\r\n        });\r\n\r\n        /* setCounter((c)=>{\r\n          c = c+1\r\n          console.log(\" counter val from chat\",c)\r\n          return c\r\n        }) */\r\n      })\r\n\r\n      return function cleanup() {\r\n        clientSocket.off(\"messageReceived\");\r\n        console.log(\"in cleanup\");\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const sendMessage = (message) => {\r\n    let msgId = uuidv4()\r\n    if (message == \"\"){\r\n       toast.error(\"Please Type something\",{\r\n          position: toast.POSITION.TOP_LEFT,\r\n        })\r\n    }\r\n   else\r\n   {\r\n     setLoading(true); \r\n     let data = {\r\n      msg: message,\r\n      lang: recipientInfo.current.lang,\r\n      userImgUrl: user.current.uImg,\r\n    };\r\n    //axios.post('http://127.0.0.1:80/',data) // flask ka post method call kre ga\r\n    //.then((response )=> {\r\n    setLoading(false);\r\n    //console.log(\" Response\" ,response.data);\r\n    //returndata = response.data\r\n    let messageS = {\r\n      from: user.current.uId,\r\n      to: recipient.current,\r\n      userName: user.current.uName,\r\n      room: roomId.current,\r\n      messageBody: message,\r\n      messageVideo: \"returndata\",\r\n      time: new Date().toLocaleString(),\r\n      type: \"offline\",\r\n      msgId : msgId\r\n    };\r\n    clientSocket.emit(\"messageSend\", messageS, (err) => {\r\n      if (!err) {\r\n        chatservice.createMessage(messageS)\r\n            .then((response)=>console.log(response,msgId))\r\n            .catch((err)=>toast.error(\r\n              'Database Connection Error! Please try again', {\r\n              position: toast.POSITION.TOP_LEFT,\r\n              autoClose: 3000,\r\n              transition: Zoom\r\n            }))\r\n        \r\n        if (chat.messages) {\r\n          setChat({ messages: [...chat.messages, messageS] });\r\n        } else {\r\n          setChat({ messages: [messageS] });\r\n        }\r\n      } else {\r\n        toast.error(\r\n          'Error in sending message! Please try again', {\r\n          position: toast.POSITION.TOP_LEFT,\r\n          autoClose: 3000,\r\n          transition: Zoom\r\n        })\r\n      }\r\n    });\r\n    clientSocket.emit(\r\n      \"messageSend1\",\r\n      {\r\n        message: messageS,\r\n        roomId: notificationRoom.current,\r\n        name: user.current.uName,\r\n      },\r\n      (err) => {\r\n        if (!err) console.log(\"testing\");\r\n        else console.log(err);\r\n      }\r\n    \r\n    );\r\n\r\n    clientSocket.emit(\r\n      \"myChats\",\r\n      { roomId: myChatsRoom.current, message: messageS, userImg: us.profileImg },\r\n      (err) => {\r\n        if (!err) console.log(\"testing\");\r\n        else console.log(err);\r\n      }\r\n    );\r\n  //}).catch((err)=>console.log(err))\r\n    }\r\n  };\r\n  \r\n  /* const chatDeleteHandler = (message)=>{\r\n    console.log(\"Message\",message)\r\n    setMsgs(message.msg)\r\n}\r\n */\r\n  const searchChatHandler = (keywords)=>{\r\n    setSearchTerm((term)=>{\r\n      //console.log(\"keywords\",term)\r\n      term = keywords\r\n      return term\r\n    })\r\n    \r\n  }\r\n  let elem = null;\r\n  useEffect(() => {\r\n    if(chat.messages){\r\n      \r\n    const list = chat.messages.filter(msg => msg.messageBody.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    setSearchChats({messages : list});\r\n    }\r\n    else{\r\n      console.log(\"no chat\")\r\n    }\r\n}, [searchTerm]);\r\n\r\n  \r\n  if (chat.messages === undefined) {\r\n    \r\n    elem = (\r\n      <h5 style={{ textAlign: \"center\" }}>Loading...</h5>\r\n    );\r\n  } else {\r\n    if(searchTerm !== \"\" && searchChats.messages !== undefined){\r\n      elem = (searchChats.messages.map((msg) =>{\r\n        return <SettingMessage message={msg} user={user.current.uId} isDel={isDel} term={searchTerm}/>;\r\n      })\r\n      )\r\n    }\r\n    else{\r\n      elem = (chat.messages.map((msg) =>{\r\n        return ( <div ref={scrollRef}>\r\n          <SettingMessage message={msg} user={user.current.uId} isDel={isDel} getData = {getData} id={id[1]} rec={recipient.current}/>\r\n          </div>)\r\n      })\r\n      )\r\n    }\r\n\r\n    if(searchChats.messages.length === 0){\r\n      console.log(\"no match\")\r\n      elem = (\r\n        <h5 style={{ textAlign: \"center\" }}>No match found!</h5>\r\n      )\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  \r\n  return (    \r\n    <RenderChat recipientInfo={recipientInfo.current} \r\n     setLogin={props.setLogin}\r\n     element={elem}\r\n     loading = {loading}\r\n     sendMessage = {sendMessage}\r\n     isDel ={isDel}\r\n     setDel = {setDel}\r\n     isFriend = {isFriend}\r\n     isChat={isChat}\r\n     getData ={getData}\r\n     searchTerm = {searchTerm}\r\n     setTerm = {setSearchTerm}\r\n     searchHandler ={searchChatHandler}\r\n    />\r\n  );\r\n}","import React, { useEffect, useRef, useState,useContext } from \"react\";\r\n\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport chatservice from \"../../services/ChatService\";\r\nimport { format } from \"timeago.js\";\r\nimport {SocketContext} from '../../context/SocketContext';\r\n\r\nimport \"./chat.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  subheader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  globe: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  subheaderText: {\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  list: {\r\n    maxHeight: \"calc(100vh - 112px)\",\r\n    overflowY: \"auto\",\r\n  },\r\n   \r\n  listText: {\r\n    fontSize: \"1.5rem\",\r\n    fontFamily: \"Roboto\",\r\n    marginLeft: \"0.5rem\",\r\n    marginTop:\"2rem\",\r\n    fontWeight:\"bold\",\r\n    display:\"inline\"\r\n   \r\n  },\r\n  listText1: {\r\n    fontSize: \"1.3rem\",\r\n    fontFamily: \"Roboto\",\r\n    color: \"#808284\",\r\n    width:\"80%\",\r\n    marginLeft: \"0.5rem\",\r\n    display:\"block\",\r\n    cursor:\"pointer\",\r\n    overflow:\"hidden\",\r\n    textOverflow:\"ellipsis\"\r\n    \r\n    \r\n  },\r\n  listTime:{\r\n    fontSize: \"0.8rem\",\r\n    fontFamily: \"Roboto\",\r\n    color: \"gray\",\r\n    marginLeft: \"0.5rem\",\r\n    display:\"inline\"\r\n     \r\n  },\r\n  listBtn: {\r\n    backgroundColor: \"rgb(0, 172, 193)\",\r\n    color: \"white\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  mygrid: {\r\n    marginTop: \"50px\",\r\n    marginLeft: \"350px\",\r\n    width: \"650px\",\r\n  },\r\n  mygrid1: {\r\n    padding: \"20px\",\r\n  },\r\n  img: {\r\n    width: \"4rem\",\r\n    height: \"4rem\",\r\n    borderRadius: \"60px\",\r\n  },\r\n}));\r\nconst SingleChat = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  let elem = null;\r\n  let user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let messages = useRef([]);\r\n  const {msgNotify}=useContext(SocketContext);\r\n  \r\n  const recipientClickHandler = (fr, type) => {\r\n    chatservice.getMessagesbyEmail(user.email, fr.email).then((res) => {\r\n      messages.current = res;\r\n      messages.current.map((m) => {\r\n        if (m.type === \"offline\" && m.from !== user.email) {\r\n          chatservice\r\n            .changeMessageType({ type: \"read\" }, m._id)\r\n            .then((res) => {\r\n              msgNotify();\r\n            })\r\n            .catch((err) => console.log(err));\r\n        }\r\n        console.log(\"user matched\")\r\n      });\r\n    });\r\n    //console.log(\"fr\", fr);\r\n    localStorage.setItem(\"friendId\", fr.id);\r\n    localStorage.setItem(\"recName\", fr.name);\r\n    localStorage.setItem(\"recLang\", fr.lang);\r\n    localStorage.setItem(\"profileUrl\", fr.img);\r\n    history.push(\"/chat/\" + fr.email + \" \" + fr.id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.recipients.map((r, index) => {\r\n        console.log(\"last Msg Obj\",props.lastMsg)\r\n        return (\r\n             \r\n             <Paper style={{padding:  '12px 10px', marginBottom:\"1rem\" }}  >\r\n              <Grid container>\r\n               <Grid item xs={1}  >\r\n                  <img src={r.img} alt='img'    style={{ height: \"50px\", width: \"50px\", borderRadius: \"50%\",display:\"inline\" }}/>\r\n               </Grid>\r\n           <Grid item    xs ={11}  >\r\n              <Typography className={classes.listText}>{r.name}</Typography>\r\n                 {props.lastMsg.emails.forEach((u, ind) => {\r\n                  //console.log(\"inside for each lastMsg\", u,ind)\r\n                  //console.log(\"inside map:\",props.lastMsg.types[ind])\r\n                  //console.log(\"inside map:\",props.lastMsg.senders[ind])\r\n                   if (u === r.email) {\r\n                    if (props.lastMsg.types[ind] === \"read\") {\r\n                      //console.log(\"in 1\",props.lastMsg.msgs[ind])\r\n                      elem = (\r\n                        <div>\r\n                            <Typography\r\n                              className={classes.listText1}\r\n                              onClick={() =>\r\n                                recipientClickHandler(\r\n                                  r,\r\n                                  props.lastMsg.types[ind],\r\n                                  props.lastMsg.msgId[ind]\r\n                                )\r\n                              }\r\n                            >\r\n                              {props.lastMsg.msgs[ind]}\r\n                              \r\n                            </Typography>\r\n                            <Typography className={classes.listTime}>\r\n                            {format(props.lastMsg.time[ind])}\r\n                            </Typography>\r\n                        </div>\r\n                        \r\n                      );\r\n                    } else if (\r\n                      props.lastMsg.types[ind] === \"offline\" &&\r\n                      props.lastMsg.senders[ind] !== user.email\r\n                    ) {\r\n                      //console.log(\"in 3\")\r\n                      elem = (\r\n                        <div>\r\n                        <Typography\r\n                       style={{ fontWeight: \"bold\", color: \"black\" }}\r\n                          className={classes.listText1}\r\n                          onClick={() =>\r\n                            recipientClickHandler(\r\n                              r,\r\n                              props.lastMsg.types[ind]\r\n                            )\r\n                          }\r\n                        >\r\n                          {props.lastMsg.msgs[ind]}\r\n                        </Typography>\r\n                        <Typography className={classes.listTime}>\r\n                          {format(props.lastMsg.time[ind])}\r\n                        </Typography>\r\n                        </div>\r\n                        \r\n                      );\r\n                    } else {\r\n                      console.log(\"in nothing\", props.lastMsg.types[ind]);\r\n                       console.log(\"in nothing1\", props.lastMsg.senders[ind]);\r\n                      elem = (\r\n                        <div>\r\n                          <Typography\r\n                         //  style={{ fontWeight: \"bold\", color: \"black\" }}\r\n                            className={classes.listText1}\r\n                            onClick={() =>\r\n                              recipientClickHandler(\r\n                                r,\r\n                                props.lastMsg.types[ind],\r\n                              )\r\n                            }\r\n                          >\r\n                            {props.lastMsg.msgs[ind]}\r\n                          </Typography>\r\n                          <Typography className={classes.listTime}>\r\n                              {format(props.lastMsg.time[ind])}\r\n                          </Typography>\r\n                        </div>\r\n                      );\r\n                    }\r\n                  }\r\n                })}\r\n\r\n                {elem}\r\n           </Grid>\r\n               \r\n               \r\n                \r\n              <div>\r\n                {/*  {setText(r,chatRecipients.lastMsg[index],chatRecipients.msgType[index])}\r\n                {elem}*/\r\n                 }\r\n              </div>\r\n              \r\n          \r\n           </Grid>\r\n          </Paper>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default SingleChat;","import React, { useEffect, useRef, useContext, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { SocketContext } from \"../../context/SocketContext\";\r\nimport SingleChat from \"./SingleChat\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PageTitle from \"../FrontendComponents/components/pageTitle\";\r\nimport Header from \"../FrontendComponents/components/Header\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport chatservice from \"../../services/ChatService\";\r\nimport userservice from \"../../services/UserService\";\r\nimport \"./chat.css\";\r\nimport { Grid, Hidden } from \"@material-ui/core\";\r\nimport SideBar from \"../FrontendComponents/components/SideBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mygrid: {\r\n    marginTop: \"50px\",\r\n    marginLeft: \"350px\",\r\n    width: \"650px\",\r\n  },\r\n}));\r\nconst AllChats = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const { clientSocket } = useContext(SocketContext);\r\n  let uId = JSON.parse(localStorage.getItem(\"user\")).email;\r\n  const {setSocket,roomJoin,messageEvent, friendReq} = useContext(SocketContext);\r\n  let emails = useRef([]);\r\n  //let usersData = useRef([])\r\n  const [usersData, setData] = useState({uData:[]});\r\n  const [lastMsg, setLastMsg] = useState({\r\n    msgs: [],\r\n    msgId: [],\r\n    emails: [],\r\n    types: [],\r\n    senders: [],\r\n    time : []\r\n  });\r\n  const [payload, setPayload] = useState()\r\n  //const [recipients, setRecipients] = useState([])\r\n  let roomId = useRef();\r\n  let count = useRef(0);\r\n  let notPresent = useRef(0);\r\n  roomId.current = \"mychats/\" + props.match.params.id;\r\n  let recData = [];\r\n  let recMsgs = [];\r\n  let dummy = [];\r\n let clientSocket1 = useRef()\r\n\r\n  window.onload = () => {\r\n    friendReq()\r\n    messageEvent()\r\n    let did = JSON.parse(localStorage.getItem('user'))._id\r\n    roomJoin(did)\r\n    clientSocket1 = io(\"http://127.0.0.1:5000\")\r\n    setSocket((s)=>{\r\n      s = clientSocket1\r\n      s.on('connect' , () => {\r\n        console.log(\"connected\",s.id);\r\n        s.emit(\"adduser\",{id:s.id, name: uId})\r\n\r\n      });\r\n      return s;\r\n    })\r\n  };\r\n  const getRecData = (uId) => {\r\n    emails.current = []\r\n    lastMsg.msgs = []; lastMsg.msgId = []; lastMsg.emails = []; \r\n    lastMsg.types = []; lastMsg.senders = []; lastMsg.time = []; \r\n    chatservice\r\n      .getChatRecipients(uId)\r\n      .then((data) => {\r\n        if (data.length > 0) {\r\n          \r\n          emails.current = data.sort();\r\n          emails.current = Array.from(new Set(emails.current));\r\n          userservice\r\n            .getUserByEmail({ userArray: emails.current })\r\n            .then((datafromdb) => {\r\n              recData = datafromdb;\r\n              //console.log(\"recdata\", recData);\r\n              setData((d) => {\r\n                d.uData = recData;\r\n                return d;\r\n              });\r\n            });\r\n          // let index = 0\r\n          emails.current.forEach((r, index) => {\r\n            chatservice\r\n              .getLastMsg(uId, r)\r\n              .then((data1) => {\r\n                //console.log(\"data1\", data1);\r\n                if(data1){\r\n                  setLastMsg((msg) => {\r\n                    if (\r\n                      msg.msgs.length >= 1 &&\r\n                      msg.emails.length >= 1 &&\r\n                      msg.types.length >= 1 &&\r\n                      msg.msgId.length >= 1 &&\r\n                      msg.senders.length >= 1\r\n                    ) {\r\n                      let newMsg = [...msg.msgs];\r\n                      let newR = [...msg.emails];\r\n                      let newT = [...msg.types];\r\n                      let id = [...msg.msgId];\r\n                      let sender = [...msg.senders];\r\n                      let newTime = [...msg.time]\r\n                      newMsg = [...newMsg, data1.lastMsg];\r\n                      newR = [...newR, r];\r\n                      newT = [...newT, data1.type];\r\n                      id = [...id, data1.msgId];\r\n                      sender = [...sender, data1.sender];\r\n                      newTime = [...newTime, data1.time]\r\n                      \r\n                      return {\r\n                        ...msg,\r\n                        msgs: newMsg,\r\n                        msgId: id,\r\n                        emails: newR,\r\n                        types: newT,\r\n                        senders: sender,\r\n                        time : newTime\r\n                      };\r\n                    } else {\r\n                      \r\n                      let myMsg =  {\r\n                        msgs: [data1.lastMsg],\r\n                        msgId: [data1.msgId],\r\n                        emails: [r],\r\n                        types: [data1.type],\r\n                        senders: [data1.sender],\r\n                        time : [data1.time]\r\n                      };\r\n      \r\n                      return myMsg\r\n                    }\r\n                  });\r\n                }\r\n\r\n              })\r\n              .catch((err) => console.log(err));\r\n          });\r\n\r\n          //setLastMsg(recMsgs)\r\n\r\n          //console.log(\"recipients\",recipients)\r\n        } else console.log(\"no data\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    count.current = 0\r\n    if (clientSocket) {\r\n      clientSocket.emit(\r\n        \"myChatsRoom\",\r\n        { myChatsRoom: roomId.current },\r\n        ({ error, room }) => {\r\n          if (!error) {\r\n            console.log(\"joined room with id\", room);\r\n          } else {\r\n            console.log(\"error joining room\", error);\r\n          }\r\n        }\r\n      );\r\n    }\r\n    //console.log(\"in useEffect 1\");\r\n    getRecData(uId);\r\n    console.log(\"usersData 1\", props.users);\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    if (clientSocket) {\r\n      clientSocket.on(\"newRecipient\", (payload) => {\r\n        setPayload((p)=>{\r\n          return p = payload\r\n        })\r\n      })\r\n    }\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    if (payload) {\r\n        let index;\r\n\r\n        if (usersData.uData.length !== 0 && lastMsg.msgs.length !== 0) {\r\n          count.current = 0;\r\n          /* present.current =0\r\n        notPresent.current =0 */\r\n          usersData.uData.forEach((u, indx) => {\r\n            //console.log(\"emails from map\", payload.message.from, u.email);\r\n            if (payload.message.from === u.email) {\r\n              index = indx;\r\n              count.current = count.current + 1;\r\n              \r\n            } else {\r\n              //count.current.current = notPresent.current + 1 ;\r\n              console.log(\"false\");\r\n            }\r\n          });\r\n          if (count.current !== 0) {\r\n            setRecArray(\r\n              index,\r\n              payload.message\r\n            );\r\n          } else if (count.current === 0) {\r\n            setNewRecipient(\r\n              payload.message\r\n            );\r\n          } else console.log(\"nothing \", count.current);\r\n        } else {\r\n          console.log(\"usersData 1\", lastMsg);\r\n        }\r\n      //});\r\n    }\r\n  }, [payload]);\r\n\r\n  const setRecArray = (index, message) => {\r\n    \r\n    let items = []\r\n    items = [...lastMsg.msgs];\r\n    let email = [...lastMsg.emails]\r\n    let mtypes = [...lastMsg.types]\r\n    let mTime = [...lastMsg.time]\r\n    let sender = [...lastMsg.senders]\r\n    items[index] = message.messageBody;\r\n    mtypes[index] = message.type\r\n    mTime[index] = message.time\r\n    sender[index] = message.from\r\n    email[index] = message.from\r\n    email = email.sort()\r\n    setLastMsg((m) => {\r\n      return { ...m, msgs: items, emails: email, types: mtypes, time: mTime, senders: sender };\r\n     \r\n    });\r\n  };\r\n\r\n  const setNewRecipient = (message) => {\r\n    console.log(\"in new chattt\",message.type)\r\n    userservice\r\n      .getUserByEmail({ userEmail: message.from })\r\n      .then((data) => {\r\n        setData((d) => {\r\n          let obj = { email: message.from, gender : data[0].gender, id : data[0]._id, \r\n                      name : data[0].firstName + ' '+ data[0].lastName,\r\n                      img : data[0].profileImg }\r\n          let uData = [...d.uData]\r\n          uData = [...uData,obj]\r\n          console.log(\"u\",uData)\r\n          return { ...d, uData}\r\n        });\r\n      })\r\n      if(usersData.uData.length !==0){\r\n        console.log(\"not first recipient\")\r\n        setLastMsg({msgs: [...lastMsg.msgs,message.messageBody], emails: [...lastMsg.emails,message.from], \r\n                  types:[...lastMsg.types,message.type], senders:[...lastMsg.senders,message.from],\r\n                  time : [...lastMsg.time,message.time ]})\r\n      }\r\n      else{\r\n        console.log(\"first recipient\")\r\n        setLastMsg({msgs: [message.messageBody], emails: [message.from], \r\n                    types:[message.type], senders:[message.from], time:[message.time]})\r\n      }\r\n      \r\n   \r\n    \r\n  };\r\n\r\n  return (\r\n    <div  style={{height:\"100vh\"}} className=\"back_divs\">\r\n    <Grid container>\r\n       <Hidden only={['xs', 'sm']}>\r\n      <Grid item xs ={5} md={2}><SideBar/></Grid>\r\n      </Hidden>\r\n        <Hidden only={['md', 'lg']}>\r\n      <Grid item xs={12} ><Header/></Grid>\r\n      </Hidden>\r\n   <Grid item xs={12} md={10}>\r\n  <PageTitle name={\"My Chats\"} />\r\n  {usersData.uData.length !== 0  && lastMsg.msgs.length !==0? (\r\n    <div>\r\n        <Grid container   style={{marginTop:\"0.9rem\" }}>\r\n      <Grid item xs ={1} md={1}> </Grid>\r\n      <Grid item xs ={10} md={10}>\r\n      <SingleChat recipients={usersData.uData} lastMsg={lastMsg} />\r\n     \r\n    </Grid>\r\n    <Grid item xs ={1} md={1}> </Grid>\r\n    </Grid>\r\n    </div>\r\n  ) : (\r\n    <h5 style={{ textAlign: \"center\" }}>No Chats Yet!</h5>\r\n  )}\r\n  </Grid>\r\n   </Grid>\r\n</div>\r\n  );\r\n};\r\nexport default AllChats;","import React, { useState, useEffect,useContext } from \"react\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport Select from \"react-select\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport { grey, cyan,lightBlue} from '@material-ui/core/colors';\r\nimport {Button} from \"@material-ui/core\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Webcam from \"react-webcam\";\r\nimport { SocketContext } from \"../../../context/SocketContext\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport friendService from \"../../../services/friendService\";\r\nconst useStyles = makeStyles({\r\n\r\n  textfield: {\r\n    marginTop: \"2rem\",\r\n  },\r\n  Submitbtn: {\r\n    marginTop: \"0.6rem\",\r\n  },\r\n});\r\n\r\n\r\nconst Profile = ( {match}) => {\r\n     console.log(match.params.id)\r\n     const contactId = match.params.id\r\n     const roomId = '/'+contactId\r\n    const myId=isAuthenticated()._id;\r\n    const myName =isAuthenticated().firstName + \" \" +isAuthenticated().lastName;\r\n    var userData=JSON.parse(localStorage.getItem(\"user\")) \r\n    const [showAddBtn, setAddBtn]=useState(userData.sentRequests.includes(contactId)?false:true)\r\n    const myProfileImg =isAuthenticated().profileImg;\r\n    const myEmail =isAuthenticated().email;\r\n    const myGender =isAuthenticated().gender;\r\n    const myLangPreference =isAuthenticated().langPreference;\r\n    const { clientSocket } = useContext(SocketContext);\r\n    //console.log(\"Props \",props.match)\r\n    const sentFriendRequest=() => {\r\n        console.log(\"contact Id\",contactId)\r\n        friendService.sendRequest(\r\n            {friendId:contactId,\r\n            myId,myName,myProfileImg,myEmail,myGender,myLangPreference})\r\n         .then((data) => {\r\n           localStorage.setItem(\"user\",JSON.stringify(data));\r\n              // dispatch({type:\"FRIEND_REQUESTED\",payload:{sentRequests:data.sentRequests }})\r\n             setAddBtn(false)\r\n\r\n            })\r\n         .catch((err) => {console.log(err);});\r\n\r\n         clientSocket.emit(\r\n            \"friendRequest\",\r\n            { myName,roomId },\r\n            (err) => {\r\n              if (!err) console.log(\"emitted event\");\r\n              else console.log(err);\r\n            }\r\n          );\r\n    }\r\n     const cancelFriendRequest=()=>{\r\n\r\n        friendService.cancelRequest(\r\n            {friendId:contactId,myId})\r\n         .then((data) => {\r\n             localStorage.setItem(\"user\",JSON.stringify(data));\r\n            // dispatch({type:\"FRIEND_REQUESTED\",payload:{sentRequests:data.sentRequests }})\r\n             setAddBtn(true)\r\n\r\n         })\r\n         .catch((err) => {console.log(err);});\r\n    }\r\n\r\nreturn (\r\n    <div>\r\n        {showAddBtn ?  \r\n         <Button className= \"loginbtn\"\r\n             style={{display:\"inline-block\"  ,position:\"relative\",float:\"right\",marginTop:\"1rem\", backgroundColor:lightBlue[600],color:\"white\"}}\r\n            variant=\"contained\" \r\n            onClick={sentFriendRequest}>Add friend</Button>\r\n        : \r\n        <Button className= \"loginbtn\"\r\n              style={{display:\"inline-block\" ,position:\"relative\",float:\"right\" ,marginTop:\"1rem\", backgroundColor:grey[500],color:\"white\"}}\r\n            variant=\"contained\" \r\n            onClick={cancelFriendRequest}>Requested</Button> \r\n             }\r\n\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\n\r\nconst UserRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated() && isAuthenticated().role === 0 ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserRoute;","import React, { useEffect, useState,useContext  } from \"react\";\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport Header from \"./Header\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport GroupAddRoundedIcon from '@material-ui/icons/GroupAddRounded';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { Button, Grid, Hidden } from \"@material-ui/core\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport PageTitle from \"./pageTitle\";\r\nimport SideBar from \"./SideBar\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst ContactManagement = () => {\r\n    let history = useHistory()\r\n    let clientSocket1 = React.useRef()\r\n    const {setSocket,roomJoin,messageEvent, friendReq, frndcounter} = useContext(SocketContext);\r\n    const myId= isAuthenticated()._id;\r\n    const myEmail = isAuthenticated().email\r\n\r\n    window.onload = () => {\r\n      friendReq()\r\n     messageEvent()\r\n     let did = JSON.parse(localStorage.getItem('user'))._id\r\n     roomJoin(did)\r\n     clientSocket1 = io(process.env.REACT_APP_IP_URL)\r\n     setSocket((s)=>{\r\n       s = clientSocket1\r\n       s.on('connect' , () => {\r\n         console.log(\"connected\",s.id);\r\n         s.emit(\"adduser\",{id:s.id, name: myEmail})\r\n         \r\n       });\r\n       return s;\r\n     })\r\n   };\r\n\r\n    return(\r\n    <div div style={{height:\"100vh\"}} className=\"back_divs\">\r\n    \r\n     <Grid container>\r\n         <Hidden only={['xs', 'sm']}>\r\n          <Grid item xs ={5} md={2}><SideBar/></Grid>\r\n          </Hidden>\r\n            <Hidden only={['md', 'lg']}>\r\n          <Grid item xs={12} ><Header/></Grid>\r\n          </Hidden>\r\n          \r\n       \r\n       <Grid item xs={12} md={10}>\r\n            <PageTitle name={\"My Contacts\"}/> \r\n            <Grid container style={{marginTop:\"1.5rem\"}}>\r\n                <Grid item xs={1} md={3}></Grid>\r\n                 <Grid item xs={10} md={6}>\r\n             <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 40px\", display:\"block\",backgroundColor:\"#D03384\",marginTop:\"1.5rem\"}}\r\n            variant=\"contained\" \r\n            color=\"Secondary\"\r\n            fullWidth\r\n            onClick={event =>  history.push('/all-my-friends/'+myId)}>\r\n              < PeopleAltIcon className='chaticon'\r\n              color = \"white\"/> My Friends\r\n            </Button>\r\n             {\r\n          frndcounter >= 1 ?\r\n           <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 20px\" ,display:\"block\",backgroundColor:\"#D03384\",marginTop:\"1.5rem\"}}\r\n           variant=\"contained\" \r\n            color=\"Secondary\" \r\n             fullWidth\r\n             onClick={event =>  history.push('/all-friend-requests/'+myId)}>\r\n            <Badge badgeContent={frndcounter} color=\"secondary\" style={{marginRight:\"0.5rem\"}}>\r\n              <GroupAddRoundedIcon className='chaticon'\r\n              onClick={event =>  history.push('/all-friend-requests/'+myId)}\r\n              color = \"white\"\r\n              />  \r\n            </Badge>\r\n            My Friend Requests\r\n            </Button>\r\n          :\r\n         <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 50px\" , display:\"block\",backgroundColor:\"#D03384\",marginTop:\"1.5rem\"}}\r\n           variant=\"contained\" \r\n            color=\"Secondary\" \r\n            fullWidth\r\n             onClick={event =>  history.push('/all-friend-requests/'+myId)}>\r\n          <GroupAddRoundedIcon className='chaticon'\r\n              color = \"white\"\r\n              />  My Friend Requests\r\n            </Button>\r\n            \r\n        }\r\n        <Button className= \"loginbtn\"\r\n             style={{padding:\"10px 20px\",display:\"block\",backgroundColor:\"#D03384\",marginTop:\"1.5rem\"}}\r\n            variant=\"contained\" \r\n            color=\"Secondary\"\r\n             fullWidth\r\n            onClick={event =>  history.push('/all-contacts/'+myId)}>\r\n              <PersonAddIcon className='chaticon'\r\n              color = \"white\"/> Add New friend\r\n            </Button>\r\n            </Grid>\r\n            </Grid>\r\n             <Grid item xs={1} md={3}></Grid>\r\n       </Grid>\r\n       \r\n       </Grid>\r\n    </div>)\r\n}\r\nexport default ContactManagement;","import './App.css';\r\nimport { Route, Switch,BrowserRouter as Router,Redirect } from \"react-router-dom\";\r\nimport UserDashboard from \"./components/FrontendComponents/components/userDashboard\";\r\nimport SignUp from \"./components/FrontendComponents/components/SignUp\";\r\nimport LogIn from \"./components/FrontendComponents/components/LogIn\";\r\nimport Activate from \"./components/FrontendComponents/components/Activate\";\r\nimport notFound from \"./components/FrontendComponents/components/notFound\";\r\nimport ForgotPassword from \"./components/FrontendComponents/components/forgotPassword\";\r\nimport ResetPassword from \"./components/FrontendComponents/components/resetPassword\";\r\nimport ProfileSetup from \"./components/FrontendComponents/components/profileSetup\";\r\nimport AllContact from \"./components/FrontendComponents/components/AllContacts\";\r\nimport AllFriendRequest from \"./components/FrontendComponents/components/AllFriendRequest\";\r\nimport AllFriends from \"./components/FrontendComponents/components/AllFriends\";\r\nimport UpdateProfileSetup from \"./components/FrontendComponents/components/updateProfileSetup\";\r\nimport Chat from \"./components/ChatComponents/Chat\";\r\nimport MyChats from \"./components/ChatComponents/AllChats\";\r\nimport {SocketProvider} from './context/SocketContext';\r\nimport {MyChatsProvider} from './context/MyChatsContext';\r\nimport {ChatContextProvider} from './context/ChatContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//import Notification from './components/FrontendComponents/Alerts/Notification'\r\n//import Users from \"./components/ChatComponents/Users\";\r\n//import {SocketContext} from './context/SocketContext';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport {useState} from 'react';\r\nimport Profile from './components/FrontendComponents/components/Profile';\r\nimport DeletePermissionProvider from './context/DeletePermissionContext';\r\nimport UserRoute from './components/FrontendComponents/components/userRoutes';\r\nimport ContactManagement from './components/FrontendComponents/components/ContactManagement';\r\n\r\nconst App =() =>{\r\n  const [userId,setId] = useState()\r\n  const [dId,setDid] = useState()\r\n  const [isLogin,setLogin] = useState(false)\r\n  const [users, setUsers] = useState([])\r\n   /*const [msg, setMsg] = useState()\r\n  //const {messageEvent} = useContext(SocketContext);\r\n  useEffect(()=>{\r\n    messageEvent()\r\n\r\n  },[]) */\r\n\r\n\r\n  return (\r\n    <div className=\"App\"> \r\n    <MyChatsProvider userId={userId} >\r\n    <ChatContextProvider userId={userId} isLogin={isLogin} >\r\n    <SocketProvider id={dId} email={userId} isLogin={isLogin} >\r\n    <DeletePermissionProvider> \r\n  <ToastContainer/>\r\n    <Router>\r\n      <Switch>\r\n            <Route path=\"/\" exact><LogIn onIdSubmit={setId} setId={setDid} isLogin={isLogin} setLogin={setLogin}/></Route>\r\n            <Route exact path=\"/signup\" component={SignUp} />\r\n            <Route exact path=\"/login\"><LogIn onIdSubmit={setId}  setId={setDid} isLogin={isLogin} setLogin={setLogin}/></Route>\r\n            <Route exact path=\"/user/activate/:token\" component={Activate} />\r\n            <UserRoute exact path=\"/dashboard/:id\"><UserDashboard setLogin={setLogin} setUsers={setUsers}/></UserRoute>\r\n            <Route exact path=\"/reset-password/:token\" component={ResetPassword} />\r\n            <Route exact path=\"/forgot-password\" component={ForgotPassword} />\r\n            <Route exact path=\"/profile-setup/:token\" component={ProfileSetup}/>\r\n            <UserRoute path=\"/update-my-profile-setup/:id\" render={(props) => (\r\n              <UpdateProfileSetup {...props} key={props.location.key} setLogin={setLogin}/>\r\n            )} exact component={UpdateProfileSetup}>\r\n            </UserRoute>\r\n            <UserRoute path =\"/all-contacts/:id\" render={(props) => (\r\n              <AllContact {...props} key={props.location.key} setLogin={setLogin}/>\r\n            )} exact component={AllContact}>\r\n            </UserRoute>\r\n            <UserRoute path = \"/all-friend-requests/:id\"\r\n            render={(props) => (\r\n              <AllFriendRequest {...props} key={props.location.key} setLogin={setLogin}/>\r\n            )} exact component={AllFriendRequest}>\r\n            </UserRoute>\r\n            <UserRoute path =\"/all-my-friends/:id\"\r\n              render={(props) => (\r\n                <AllFriends {...props} key={props.location.key} setLogin={setLogin}/>\r\n              )} exact component={AllFriends}>\r\n              </UserRoute>\r\n             <UserRoute exact path =\"/profile/:id/:id\" component ={Profile} />\r\n            <Route exact path=\"/notfound\" component={notFound} />\r\n            <UserRoute path=\"/chat/:id\" render={(props) => (\r\n              <Chat {...props} key={props.location.key} setLogin={setLogin}/>\r\n            )} exact component={Chat}>\r\n            </UserRoute>\r\n            <UserRoute path=\"/mychats/:id\" render={(props) => (\r\n              <MyChats {...props} key={props.location.key} setLogin={setLogin} users = {users}/>\r\n            )} exact component={MyChats}>\r\n            </UserRoute>\r\n            <UserRoute exact path =\"/my-contact-list/:id\" component ={ContactManagement} />\r\n            <Redirect to=\"/notfound\" />  \r\n      </Switch>\r\n      </Router>\r\n       </DeletePermissionProvider>  \r\n    </SocketProvider>\r\n    </ChatContextProvider>\r\n    </MyChatsProvider>\r\n  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//import Pusher from 'pusher-js';\r\n//import Reducer from './Redux/reducers/chat_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n//Pusher.logToConsole = true;\r\n\r\n//useEffect (()=>{\r\n  /* const pusher = new Pusher('18cb37e3146179a6a80e', {\r\n  cluster: 'ap2',\r\n  authEndpoint: 'http://localhost:5000/api/chatapi/pusher/auth'\r\n}); */\r\n/* usher.connection.bind('connected', function () {\r\n  // attach the socket ID to all outgoing Axios requests\r\n  axios.defaults.headers.common['X-Socket-Id'] = pusher.connection.socket_id;\r\n  console.log(\"id:\",pusher.connection.socket_id)\r\n}); */\r\n//},[])\r\n/* var channel = pusher.subscribe('private-my-channel');\r\nchannel.bind('my-event', function(data) {\r\n  console.log(\"in bind\")\r\n  alert(JSON.stringify(data));\r\n  console.log(\"pusher data:\",data)\r\n}); */\r\n\r\n//const myStore = createStore(Reducer, window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n                            //window.__REDUX_DEVTOOLS_EXTENSION__() );\r\n\r\n/* ReactDOM.render(\r\n  <Provider\r\n        store={myStore}\r\n        >\r\n        <App />\r\n  </Provider>\r\n    \r\n  ,\r\n  document.getElementById('root')\r\n); */\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}