{"version":3,"sources":["components/FrontendComponents/clientStorages/localStorage.js","components/FrontendComponents/clientStorages/auth.js","components/FrontendComponents/clientStorages/cookies.js","components/FrontendComponents/components/Header.js","services/GenericService.js","services/friendService.js","services/ChatService.js","context/SocketContext.js","context/ChatContext.js","services/accountService.js","components/FrontendComponents/components/pageTitle.js","components/FrontendComponents/components/userDashboard.js","components/FrontendComponents/Alerts/ProgressBar.js","components/FrontendComponents/Alerts/AlertBar.js","components/FrontendComponents/api/auth.js","components/FrontendComponents/components/LogoPage.js","components/FrontendComponents/components/SignUp.js","reducers/DeletePermissionReducer.js","context/DeletePermissionContext.js","components/FrontendComponents/components/LogIn.js","components/FrontendComponents/components/Activate.js","components/FrontendComponents/components/notFound.js","components/FrontendComponents/components/forgotPassword.js","components/FrontendComponents/components/resetPassword.js","components/FrontendComponents/components/profileSetup.js","components/FrontendComponents/components/SingleContact.js","services/contactService.js","components/FrontendComponents/components/SideBar.js","components/FrontendComponents/components/AllContacts.js","components/FrontendComponents/components/SingleFriendRequest.js","components/FrontendComponents/components/AllFriendRequest.js","components/FrontendComponents/components/SingleFriend.js","services/UserService.js","context/MyChatsContext.js","components/FrontendComponents/components/AllFriends.js","components/FrontendComponents/components/updateProfileSetup.js","components/ChatComponents/DeleteMsg.js","components/ChatComponents/SettingMessage.js","components/ChatComponents/TypeMessage.js","components/ChatComponents/RenderChat.js","components/ChatComponents/Chat.js","components/ChatComponents/SingleChat.js","components/ChatComponents/AllChats.js","components/FrontendComponents/components/Profile.js","components/FrontendComponents/components/userRoutes.js","components/FrontendComponents/components/ContactManagement.js","App.js","reportWebVitals.js","index.js"],"names":["getLocalStorage","key","JSON","parse","localStorage","getItem","removeLocalStorage","removeItem","authentication","token","user","value","Cookies","set","expires","setItem","stringify","setLocalStorage","isAuthenticated","get","logout","next","remove","withRouter","history","useHistory","firstName","lastName","myId","_id","myProfileImg","profileImg","handleLogOut","evt","push","id","className","to","pathname","style","textDecoration","src","alt","height","width","borderRadius","display","onclick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","marginRight","aria-hidden","onClick","axios","defaults","baseURL","headers","common","GenericService","url","Promise","resolve","reject","then","res","data","catch","err","getMessage","email","params","post","console","log","put","delete","friendService","sendRequest","cancelRequest","acceptRequest","rejectRequest","deleteFriend","getFriendRequest","getSentFriendRequest","getAllFriends","getFriendRequestsCount","chatservice","getMessages","createMessage","getMessagesbyEmail","from","getMessagesbyUserId","userId","getChatRecipients","getLastMsg","deleteMessage","changeMessageType","offlinemessages","SocketContext","createContext","SocketProvider","children","useState","frndcounter","setFrndCounter","msgCount","setMsgCount","clientSocket","setSocket","roomId","useRef","useEffect","socket","io","close","current","messageCounter","count","getAllRequests","length","messageEvent","on","payload","Button","toast","RecipientName","messageBody","onOpen","position","POSITION","TOP_LEFT","toastId","transition","Bounce","roomJoin","did","emit","myNotificationRoom","error","room","friendReq","info","sender","autoClose","getRequest","acceptRejectCounter","msgCounter","msgNotify","Provider","ChatContext","ChatContextProvider","setMsg","msg","getUnreadMsgs","Zoom","accountService","accountActivation","forgotPassword","resetPassword","profileSetup","updateProfileSetup","getMyAccount","deleteMyAccount","PageTitle","name","Grid","container","item","xs","sm","xm","md","Typography","variant","marginTop","textAlign","fontSize","color","brown","fontFamily","component","marginBottom","UserDashboard","uuId","userEmail","useContext","clientSocket1","window","onload","s","undefined","padding","backgroundColor","fullWidth","event","Badge","badgeContent","useStyles","makeStyles","root","LinearBuffer","classes","React","progress","setProgress","buffer","setBuffer","progressRef","diff","Math","random","diff2","timer","setInterval","clearInterval","LinearProgress","valueBuffer","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","InfoIcon","theme","green","palette","dark","primary","main","amber","icon","iconVariant","opacity","spacing","message","alignItems","AlertBar","open","setOpen","handleClose","reason","Icon","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","clsx","aria-describedby","action","IconButton","signup","a","response","login","LogoPage","textfield","margin","SignUp","gender","password","confirmPassword","errorMessage","successMsg","showPassword","showPassword1","loading","values","setValues","handleChange","prop","target","handleClickShowPassword","handleClickShowConfirmPassword","handleMouseDownPassword","preventDefault","handleTextChange","Register","isEmpty","isEmail","equals","successMessage","Paper","TextField","label","fontWeight","fontStyle","onChange","InputProps","startAdornment","InputAdornment","grey","FormControl","textField","InputLabel","htmlFor","marginLeft","Input","endAdornment","onMouseDown","Visibility","VisibilityOff","FormLabel","RadioGroup","FormControlLabel","control","Radio","cyan","deletePermission","state","DeletePermission","DeletePermissionProvider","props","useReducer","localData","deletemsg","dispatch","LogIn","onIdSubmit","setId","LogInForm","Activate","match","token1","formData","setFormData","jwt","decode","red","paddingTop","notFound","ForgotPassword","onSubmit","href","paddingLeft","indigo","ResetPassword","ResetPasswordBtn","newPassword","resetPasswordLink","Submitbtn","ProfileSetup","webcamRef","capturedPic","setCapturedPic","options","img","language","infoMessage","resizeFile","file","Resizer","imageFileResizer","uri","capture","useCallback","imageSrc","getScreenshot","FormData","append","fetch","method","body","json","uploadImage","e","imageFile","files","compressedImage","secure_url","SetProfile","langPreference","accept","placeholder","find","c","tabindex","aria-labelledby","data-dismiss","audio","ref","screenshotFormat","class","SingleContact","contact","userData","sentRequests","includes","showAddBtn","setAddBtn","myName","myEmail","myGender","myLangPreference","Hidden","only","lightBlue","friendId","contactService","getAllContact","getSingleContact","cursor","AllContact","searchTerm","setSearchTerm","contacts","setContacts","currentTarget","float","filter","toLowerCase","startsWith","map","index","SingleFriendRequest","friendreq","onAcceptReject","size","friendName","friendProfileImg","chatId","friendEmail","friendGender","friendLangPreference","AllFriendRequest","friendreqs","setFrndRequest","SingleFriend","friend","onRemove","chatRec","lightGreen","fr","userservice","getUsers","getUserByEmail","getUserNameByEmail","MyChatsContext","MyChatsProvider","chatRecipients","setChatRecipients","recData","recMsgs","msgType","recName","recId","imgUrl","getRecData","uId","rec","Array","Set","r","Rname","data1","lastMsg","data2","setRecipients","AllFriends","friends","setFriends","getAllMyFriends","UpdateProfileSetup","updateProfile","textTransform","DeleteMsg","boxchecked","checked","setChecked","setShow","Dialog","DialogTitle","paddingBottom","DialogContent","DialogContentText","defaultChecked","checkedHandler","DialogActions","msgId","getData","SettingMessage","show","messageId","elem","handleClickOpen","messageVideo","isDel","time","inputInput","transitions","create","border","TypeMessage","setMessage","Fragment","InputBase","inputProps","sendMessage","RenderChat","anchorEl","setAnchorEl","isSearch","setSearch","Boolean","openMenu","setMenu","open1","itemClickHandler","option","setDel","recipientInfo","aria-haspopup","Menu","keepMounted","PaperProps","maxHeight","MenuItem","data-tip","data-for","searchHandler","setTerm","disableUnderline","element","CircularProgress","isFriend","SingleChat","messages","chat","setChat","searchChats","setSearchChats","setLoading","setIsFriend","chats","scrollRef","uImg","uName","recipient","lang","myChatsRoom","notificationRoom","split","isChat","setIsChat","us","scrollIntoView","behavior","mycount","forEach","f","chatState","newMessages","off","list","term","uuidv4","messageS","userName","Date","toLocaleString","userImg","keywords","subheader","globe","subheaderText","overflowY","listText","listText1","listTime","listBtn","mygrid","mygrid1","recipientClickHandler","m","recipients","emails","u","ind","types","msgs","format","senders","AllChats","uData","usersData","setData","setLastMsg","setPayload","sort","userArray","datafromdb","d","newMsg","newR","newT","newTime","myMsg","p","indx","setRecArray","setNewRecipient","items","mtypes","mTime","obj","Profile","contactId","UserRoute","Component","rest","render","ContactManagement","div","App","dId","setDid","path","exact","location","Chat","MyChats","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2dfdef08.chunk.js","sourcesContent":["export const setLocalStorage = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\nexport const getLocalStorage = (key) => {\r\n  return JSON.parse(localStorage.getItem(key));\r\n};\r\nexport const removeLocalStorage = (key) => {\r\n  localStorage.removeItem(key);\r\n};","import { setCookie, getCookie, removeCookie } from \"./cookies\";\r\nimport {\r\n  setLocalStorage,\r\n  getLocalStorage,\r\n  removeLocalStorage,\r\n} from \"./localStorage\";\r\nexport const authentication = (token, user) => {\r\n  setCookie(\"token\", token);\r\n  setLocalStorage(\"user\", user);\r\n};\r\nexport const isAuthenticated = () => {\r\n  if (getCookie(\"token\") && getLocalStorage(\"user\"))\r\n    return getLocalStorage(\"user\");\r\n};\r\nexport const logout = (next) => {\r\n  removeCookie(\"token\");\r\n  removeLocalStorage(\"user\");\r\n  removeLocalStorage(\"friendId\");\r\n  removeLocalStorage(\"recName\");\r\n  removeLocalStorage(\"profileUrl\");\r\n  removeLocalStorage(\"recLang\");\r\n  next();\r\n};","import Cookies from \"js-cookie\";\r\nexport const setCookie = (key, value) => {\r\n  Cookies.set(key, value, { expires: 1 });\r\n};\r\nexport const getCookie = (key) => {\r\n  return Cookies.get(key);\r\n};\r\nexport const removeCookie = (key) => {\r\n  return Cookies.remove(key);\r\n};","import React, { Fragment } from \"react\";\r\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\r\nimport { isAuthenticated, logout } from \"../clientStorages/auth\";\r\nconst Header = ({ history }) => {\r\n  history = useHistory();\r\n  const firstName= isAuthenticated().firstName;\r\n  const lastName = isAuthenticated().lastName;\r\n  const myId = isAuthenticated()._id;\r\nconst myProfileImg =isAuthenticated().profileImg;\r\n  const handleLogOut = (evt) => {\r\n    logout(() => {\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  const showNavbar = () => (\r\n    <div>\r\n      <nav id=\"nav\" className=\"navbar navbar-expand-lg navbar-light mt-0\">\r\n         \r\n        <div className=\"navbar-brand\"> \r\n       <Link to={{ pathname: `/update-my-profile-setup/${myId}` }} style={{textDecoration:\"none\"}}>\r\n        <img\r\n          src= {myProfileImg}\r\n          alt=\"Profile\"\r\n          style={{ height: \"50px\", width: \"50px\", borderRadius: \"50%\",display:\"inline\"}}\r\n         onclick={()=>history.push('/update-my-profile-setup/'+myId)}\r\n        /> </Link> \r\n        <span className=\"header_name\">{firstName +\" \" + lastName}</span></div>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNavDropdown\"\r\n          aria-controls=\"navbarNavDropdown\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n          <ul\r\n            className=\"\r\n              navbar-nav\r\n              ml-auto\r\n              mt-2\r\n              mt-lg-0\"\r\n           \r\n          >\r\n            \r\n\r\n            {isAuthenticated() && isAuthenticated().role === 0 && (\r\n              <Fragment>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/notFound\" className=\"nav-link \">\r\n                     \r\n                  </Link>\r\n                </li>\r\n                 <li className=\"nav-item\" style ={{marginRight:\"1rem\"}}>\r\n                  <Link to={{pathname: '/dashboard/'+myId}} className=\"nav-link\">\r\n                     <i className=\"fa fa-home\" aria-hidden=\"true\"> </i>  Dashboard\r\n                  </Link>\r\n                </li>\r\n                 <li className=\"nav-item\">\r\n                  <button\r\n                    className=\"btn text-decoration-none btn-link   pl-0 nav-link\"\r\n                    style={{textDecoration:\"none\"}}\r\n                    onClick={handleLogOut}\r\n                  >\r\n                    <i className=\"fas fa-sign-out-alt\" aria-hidden=\"true\"></i> Logout\r\n                  </button> \r\n                </li>\r\n              </Fragment>\r\n            )}\r\n             \r\n            \r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n  return <header>{showNavbar()}</header>;\r\n};\r\n\r\nexport default withRouter(Header);","import axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:5000/api/\";\r\naxios.defaults.headers.common[\"x-auth-token\"] = localStorage.getItem(\"token\");\r\nclass GenericService {\r\n    get = (url) => {\r\n       return new Promise((resolve,reject) => {\r\n            axios.get(url)\r\n            .then((res) => {\r\n              resolve(res.data);\r\n            })\r\n            .catch((err) => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    getMessage = (url,email) => {\r\n        return new Promise((resolve,reject) => {\r\n             axios.get(url,{params:{email: email}})\r\n             .then((res) => {\r\n               resolve(res.data);\r\n             })\r\n             .catch((err) => {\r\n                 reject(err);\r\n             });\r\n         });\r\n     }\r\n\r\n    post = (url,data) => {\r\n        return new Promise((resolve,reject) => {\r\n            axios.post(url,data).then((res) => {\r\n                resolve(res.data);\r\n            }).catch((err) => {\r\n                console.log(\"Errrr\");\r\n                reject(err);\r\n            });\r\n            });\r\n        }\r\n    put = (url,data)=>{\r\n        return new Promise((resolve,reject)=>{\r\n            axios.put(url,data).then((res)=>{\r\n                resolve(res.data)\r\n            }).catch((err)=>{\r\n                reject(err)\r\n            });\r\n            });\r\n    }\r\n    delete = (url)=>{\r\n        return new Promise((resolve,reject)=>{\r\n            axios.delete(url).then((res)=>{\r\n                resolve(res.data)\r\n            }).catch((err)=>{\r\n                reject(err)\r\n            });\r\n            });\r\n    }\r\n}\r\nexport default GenericService;","import GenericService from \"./GenericService\";\r\nclass FriendService extends GenericService {\r\n  \r\n  sendRequest   = (data) => this.post(\"friends/send-friend-request\", data);\r\n  cancelRequest = (data) => this.post(\"friends/cancel-friend-request\", data);\r\n  acceptRequest = (data) => this.post(\"friends/accept-friend-request\", data);\r\n  rejectRequest = (data) => this.post(\"friends/reject-friend-request\", data);\r\n  deleteFriend  = (data) => this.post(\"friends/delete-friend\", data);\r\n  getFriendRequest =(id) =>  this.get(\"friends/my-friend-requests/\" + id);\r\n  getSentFriendRequest =(id) =>  this.get(\"friends/sent-friend-requests/\" + id);\r\n  getAllFriends =(id) =>  this.get(\"friends/my-friends-list/\" + id);\r\n  getFriendRequestsCount =(id)=> this.get(\"friends/my-friend-requests-count/\" + id);\r\n}\r\n\r\nlet friendService = new FriendService();\r\nexport default friendService;","import GenericService from \"./GenericService\";\r\nclass ChatService extends GenericService{\r\n\r\n    getMessages = () => {\r\n        return this.get(\"chatapi\");\r\n    }\r\n    createMessage = (data) => {\r\n        return this.post(\"chatapi\",data);\r\n    }\r\n    getMessagesbyEmail = (from,to) =>{\r\n        return this.get(\"chatapi/msgbyemail/\"+from+\" \"+to)\r\n    }\r\n    getMessagesbyUserId = (userId) =>{\r\n        return this.get(\"chatapi/msgbyuserid/\"+userId)\r\n    }\r\n    getChatRecipients = (userId) =>{\r\n        return this.get(\"chatapi/chatrecipients/\"+userId)\r\n    }\r\n    getLastMsg = (from,to) =>{\r\n        return this.get(\"chatapi/lastmsg/\"+from+\" \"+to)\r\n    }\r\n    deleteMessage = (id) =>{\r\n        return this.delete(\"chatapi/\"+ id)\r\n    }\r\n    changeMessageType = (data,id)=>{\r\n        return this.put(\"chatapi/\"+id, data)\r\n    }\r\n    offlinemessages = (id)=>{\r\n        return this.get(\"chatapi/offlinemessages/\"+id);\r\n    }\r\n}\r\n\r\nlet chatservice = new ChatService();\r\nexport default chatservice;","import React ,{createContext,useEffect,useState,useRef} from 'react'\r\nimport io from \"socket.io-client\";\r\nimport { toast } from 'react-toastify';\r\nimport { Slide, Zoom, Flip, Bounce } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n  import { isAuthenticated } from \"../components/FrontendComponents/clientStorages/auth\";\r\nimport friendService from \"../services/friendService\";\r\nimport chatservice from '../services/ChatService';\r\nimport { Button } from '@material-ui/core';\r\nexport const SocketContext = createContext();\r\nexport function SocketProvider({id,children}) {\r\n    //const myId=isAuthenticated()._id;\r\n    const [obj, setObj] = useState({})\r\n     const [frndcounter,setFrndCounter]= useState(0)\r\n     const [msgCount,setMsgCount]=useState(0);\r\n  const [clientSocket, setSocket] = useState()\r\n  let count=0;\r\n  let roomId = useRef()\r\n  \r\n\r\n  useEffect(() => {\r\n    const socket = io(\r\n      'http://localhost:5000',\r\n)\r\n    setSocket(socket)\r\n    return () => socket.close()\r\n    /* clientSocket.current = io(\"http://127.0.0.1:5000\");\r\n    clientSocket.current.on('connect' , () => {\r\n      console.log(clientSocket.current.id);\r\n    }); */\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    roomId.current= '/'+id\r\n    console.log(roomId)\r\n  },[])\r\n  const messageCounter=()=>{\r\n\r\n    chatservice.offlinemessages(isAuthenticated().email)\r\n        .then((res)=>{  \r\n                setMsgCount(res.count)\r\n                 localStorage.setItem(\"messagecount\",JSON.stringify(res.count))\r\n        })\r\n        .catch((err)=>console.log(err))}\r\n  useEffect(()=>messageCounter,[msgCount])\r\n  const newMessageEvent = () => {\r\n    if(clientSocket){\r\n      clientSocket.on(\"newMessage\", (payload) => {\r\n      <Button onClick={()=>console.log(\"clicked\")}>\r\n        {toast(payload.RecipientName +':'+\r\n        payload.payload.messageBody, {\r\n          onOpen: () => console.log('Called when I open'),\r\n          position: toast.POSITION.TOP_LEFT,\r\n          toastId: '007',\r\n          transition: Bounce\r\n        })}\r\n      </Button>\r\n      //count=count+1\r\n      console.log(\"new message\",payload)\r\n      messageCounter();\r\n      })\r\n    }\r\n    else {\r\n      console.log(\"no socket\")\r\n    }  \r\n  //return () => {clientSocket.removeAllListeners(\"newMessage\");}\r\n  }\r\n\r\n  /* useEffect(()=>{\r\n    newMessageEvent()\r\n    console.log(\"2\")\r\n  },[])\r\n */\r\n  const roomJoin = (did) =>{\r\n    //did = did || roomId.current\r\n    did = '/'+did\r\n    if(clientSocket){\r\n      clientSocket.emit(\r\n        \"NotificationRoom\",\r\n        { myNotificationRoom : did},\r\n        ({error,room}) => {\r\n          if (!error) {\r\n            console.log(\"joined room with id\", room);\r\n          } else {\r\n            console.log(\"error joining room\", error);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n  const getAllRequests=()=>{\r\n           friendService.getFriendRequest(isAuthenticated()._id).then((data)=>{\r\n             setFrndCounter(data.length);\r\n             localStorage.setItem(\"friendRequests\",JSON.stringify(data.length))\r\n            })\r\n            .catch((err=>{console.log(err)}))\r\n  }\r\n  useEffect(()=>getAllRequests,[frndcounter])\r\n const getFriendRequest = () => {\r\n    if(clientSocket)\r\n    {\r\n       clientSocket.on(\"newRequest\", (payload) => getAllRequests())\r\n       clientSocket.on(\"rejectRequest\", (payload) => getAllRequests())\r\n    }\r\n    else\r\n      console.log(\"no socket\")}\r\n     \r\n  const friendReqEvent = () =>{\r\n    if(clientSocket){\r\n      clientSocket.on(\"newRequest\", (payload) => {\r\n          toast.info(\r\n          payload.sender+ ' has sent you a friend request!', {\r\n          position: toast.POSITION.TOP_LEFT,\r\n          //toastId: '009',\r\n          autoClose: 7000,\r\n          transition: Bounce\r\n        })\r\n      \r\n      })\r\n    }\r\n    else{\r\n      console.log(\"no socket\")\r\n    }\r\n  }\r\n  \r\n\r\n  let value={\r\n    clientSocket : clientSocket,\r\n    setSocket : setSocket,\r\n    messageEvent : newMessageEvent,\r\n    roomJoin : roomJoin,\r\n    friendReq : friendReqEvent,\r\n    getRequest: getFriendRequest,\r\n    frndcounter:frndcounter,\r\n    acceptRejectCounter:getAllRequests,\r\n    msgCounter:msgCount,\r\n    msgNotify:messageCounter\r\n  }\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  )\r\n\r\n  \r\n}","import React ,{createContext, useEffect} from 'react'\r\nimport chatservice from '../services/ChatService'\r\n//import {showNotification} from '../components/FrontendComponents/Alerts/showMessage'\r\n//import Notification from '../components/FrontendComponents/Alerts/Notification'\r\nimport { toast } from 'react-toastify';\r\nimport { Slide, Zoom, Flip, Bounce } from 'react-toastify';\r\nexport const ChatContext = createContext();\r\n\r\nexport const ChatContextProvider = ({userId,setMsg,children}) =>{\r\n    let elem = null\r\n    let msg = ''\r\n    useEffect(()=>{\r\n        getUnreadMsgs(userId)\r\n    },[userId])\r\n    const getUnreadMsgs =(email)=>{\r\n        chatservice.offlinemessages(email)\r\n        .then((res)=>{\r\n            if(res.count > 0){\r\n                console.log(\"count\",res.count)\r\n                msg = 'You have '+res.count+ ' new messages!'\r\n                /* elem = (\r\n                    <Notification msg = {msg}/>\r\n                ) */\r\n                //setMsg(msg)\r\n                if(res.info.sender[0] !== userId){\r\n                    console.log(\"sender\",res.info.sender)\r\n                    console.log(\"user\",userId)\r\n                toast.info(msg,{\r\n                position: toast.POSITION.TOP_LEFT,\r\n                transition: Zoom\r\n            })\r\n                }\r\n                else{\r\n                    console.log(\"is sender\")\r\n                }\r\n        \r\n            }\r\n        })\r\n        .catch((err)=>console.log(err))\r\n    }\r\n    \r\n    return (\r\n        <ChatContext.Provider value = {{getUnreadMsgs: getUnreadMsgs}}>\r\n        \r\n            {children}\r\n        </ChatContext.Provider>\r\n    );\r\n}\r\n","import GenericService from \"./GenericService\";\r\nclass AccountService extends GenericService {\r\n \r\n   accountActivation = (data) => this.post(\"users/activation\", data);\r\n   forgotPassword = (data) => this.put(\"users/forgot-password\", data);\r\n   resetPassword = (data) => this.put(\"users/reset-password\", data);\r\n   profileSetup =(data)=>this.post(\"users/profile-setup\",data);\r\n   updateProfileSetup = (_id, data) =>this.put(\"users/update-profile-setup/\" + _id, data);\r\n   getMyAccount =(id) => this.get(\"users/my-account/\" + id);\r\n   deleteMyAccount =(id)=> this.delete(\"users/delete-my-account/\"+id);\r\n}\r\nlet accountService = new AccountService();\r\nexport default accountService;","import React from \"react\";\r\nimport {Grid,Typography} from \"@material-ui/core\";\r\n import {brown} from '@material-ui/core/colors';\r\nconst PageTitle = ({name}) => {\r\n  return <div>\r\n     <Grid container >\r\n      <Grid item xs={1} sm={2} xm={5} md={4}></Grid>\r\n      <Grid item xs={10} sm={8} xm={2} md={4}>\r\n           <Typography variant=\"headline\" \r\n         style={{ \r\n          marginTop:\"0.5rem\",\r\n         textAlign:\"center\",\r\n         fontSize:\"4rem\",\r\n         color:brown[300],\r\n         fontFamily:\"Brush Script MT, Brush Script Std, cursive\"}}\r\n          component=\"h1\">{name}</Typography>\r\n        <hr style ={{marginBottom:\"1rem\"}}/>  \r\n      </Grid>\r\n      \r\n    <Grid item  xs={1} sm={2} xm={5} md={4}></Grid>\r\n    </Grid>\r\n \r\n    </div>;\r\n};\r\n\r\nexport default PageTitle;","import React, { useEffect, useState,useContext,useRef } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport {SocketContext} from '../../../context/SocketContext';\r\n//import {MyChatsContext} from '../../../context/MyChatsContext';\r\nimport io from \"socket.io-client\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport {ChatContext} from '../../../context/ChatContext';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport GroupAddRoundedIcon from '@material-ui/icons/GroupAddRounded';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Badge from '@material-ui/core/Badge';\r\n//import chatservice from '../../../services/ChatService';\r\nimport accountService from '../../../services/accountService';\r\n//import friendService from '../../../services/friendService';\r\n //import { ToastContainer } from 'react-toastify';\r\n//import Toast from 'react-bootstrap/Toast' \r\nimport '../../ChatComponents/chat.css'\r\nimport PageTitle from \"./pageTitle\";\r\n\r\n\r\nconst UserDashboard = ({uuId}) => {\r\n  //const {chatRecipients,setRecipients,getRecData} = useContext(MyChatsContext);\r\n  //const [obj, setObj] = useState({})\r\n  const myId= isAuthenticated()._id;\r\n // const [count,setCount]= useState(0)\r\n  //const [friendCount,setFriendCount]=useState(0);\r\n  let showBtn = useRef(0)\r\n  let userEmail = useRef()\r\n  let history = useHistory()\r\n  userEmail.current = JSON.parse(localStorage.getItem(\"user\")).email\r\n  const {clientSocket,setSocket,messageEvent,roomJoin,friendReq,getRequest,frndcounter,msgCounter} = useContext(SocketContext);\r\n\r\n  let clientSocket1 = useRef()\r\n   \r\n   window.onload = () => {\r\n       friendReq()\r\n     messageEvent()\r\n     getRequest()\r\n    roomJoin(myId)\r\n    clientSocket1 = io(\"http://127.0.0.1:5000\")\r\n  setSocket((s)=>{\r\n      s = clientSocket1\r\n      s.on('connect' , () => {\r\n        console.log(\"connected\",s.id);\r\n        s.emit(\"adduser\",{id:s.id, name: userEmail.current})\r\n        \r\n      });\r\n      return s;\r\n    })\r\n  };\r\nconst DeleteAccount =()=>{\r\naccountService.deleteMyAccount(myId)\r\n .then((res) =>history.push('/signup'))\r\n  .catch((err) => console.log(err));\r\n}\r\n /* useEffect(()=>{\r\n    chatservice.offlinemessages(isAuthenticated().email)\r\n        .then((res)=>{\r\n            if(res.count > 0){\r\n              setObj((o)=>{\r\n                o = {sender: res.info.sender, receiver: res.info.receiver}\r\n                return o\r\n              })\r\n              //obj = {sender: res.info.sender, receiver: res.info.receiver}\r\n              setCount((c)=>{\r\n                c = res.count\r\n                return c\r\n              })\r\n       \r\n            }\r\n        })\r\n        .catch((err)=>console.log(err))\r\n\r\n  },[])\r\nuseEffect(()=>{\r\n  friendService.getFriendRequestsCount(myId)\r\n  .then((res)=>{ \r\n     if(res> 0)\r\n     setFriendCount(res)\r\n  })\r\n  .catch((err)=>console.log(err))\r\n},[])*/\r\n  \r\n  \r\n   useEffect(()=>{\r\n    if(clientSocket!==undefined){\r\n        console.log(clientSocket)\r\n        clientSocket.emit(\"adduser\",{id:clientSocket.id, name: userEmail.current})\r\n      }\r\n      else{\r\n        console.log(\"no socket\")\r\n      }\r\n   },[],[clientSocket])\r\n\r\n   useEffect (()=>{\r\n    //friendReq()\r\n     messageEvent()\r\n   },[]);\r\n\r\n   useEffect (()=>{\r\n    roomJoin(myId)\r\n  },[]);\r\n\r\n  return <div style={{height:\"100vh\"}} className=\"back_divs\">\r\n    <Header/>\r\n    <PageTitle name={\"Dashboard\"}/>\r\n   {/* <ToastContainer/> */}\r\n     <Grid container>\r\n       <Grid item xs={1} md={4}></Grid>\r\n       <Grid item xs={10} md={4}>\r\n          <Button className= \"loginbtn\"\r\n             style={{padding:\"10px 20px\",display:\"block\",backgroundColor:\"#C8906A\"}}\r\n            variant=\"contained\" \r\n            color=\"Secondary\"\r\n            fullWidth\r\n            onClick={event =>  history.push('/all-contacts/'+myId)}>\r\n              <PersonAddIcon className='chaticon'\r\n              color = \"white\"/> Add New friend\r\n            </Button>\r\n            <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 40px\",marginTop:\"2rem\",display:\"block\",backgroundColor:\"#C0C86A\"}}\r\n            variant=\"contained\" \r\n            color=\"Secondary\"\r\n            fullWidth\r\n            onClick={event =>  history.push('/all-my-friends/'+myId)}>\r\n              < PeopleAltIcon className='chaticon'\r\n              color = \"white\"/> My Friends\r\n            </Button>\r\n           {/*  {\r\n    obj.sender !== undefined ?\r\n        obj.sender.forEach((o)=>\r\n        {\r\n            o !== userEmail.current ?\r\n            showBtn.current = showBtn.current + 1\r\n          :\r\n          showBtn.current = 0\r\n          })\r\n    :\r\n    null\r\n    } */}\r\n    \r\n        {\r\n          msgCounter >= 1 ?\r\n           <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 20px\" , marginTop:\"2rem\",display:\"block\",backgroundColor:\"#D582BD\"}}\r\n           variant=\"contained\" \r\n            color=\"Secondary\" \r\n            fullWidth\r\n             onClick={event =>  history.push('/mychats/'+myId)}>\r\n            <Badge badgeContent={msgCounter} color=\"secondary\" style={{marginRight:\"0.5rem\"}}>\r\n              <ChatIcon className='chaticon'\r\n              onClick={event =>  history.push('/mychats/'+myId)}\r\n              color = \"white\"\r\n              />  \r\n            </Badge>\r\n            My Chats\r\n            </Button>\r\n          :\r\n         <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 50px\" ,marginTop:\"2rem\",display:\"block\",backgroundColor:\"#D582BD\"}}\r\n           variant=\"contained\" \r\n            color=\"Secondary\" \r\n            fullWidth\r\n             onClick={event =>  history.push('/mychats/'+myId)}>\r\n          <ChatIcon className='chaticon'\r\n              color = \"white\"\r\n              />  My Chats\r\n            </Button>\r\n            \r\n        }    \r\n         {\r\n          frndcounter >= 1 ?\r\n           <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 20px\" , marginTop:\"2rem\",display:\"block\",backgroundColor:\"#8298D5\"}}\r\n           variant=\"contained\" \r\n            color=\"Secondary\" \r\n            fullWidth\r\n             onClick={event =>  history.push('/all-friend-requests/'+myId)}>\r\n            <Badge badgeContent={frndcounter} color=\"secondary\" style={{marginRight:\"0.5rem\"}}>\r\n              <GroupAddRoundedIcon className='chaticon'\r\n              onClick={event =>  history.push('/all-friend-requests/'+myId)}\r\n              color = \"white\"\r\n              />  \r\n            </Badge>\r\n            My Friend Requests\r\n            </Button>\r\n          :\r\n         <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 50px\" ,marginTop:\"2rem\",display:\"block\",backgroundColor:\"#8298D5\"}}\r\n           variant=\"contained\" \r\n            color=\"Secondary\" \r\n            fullWidth\r\n             onClick={event =>  history.push('/all-friend-requests/'+myId)}>\r\n          <GroupAddRoundedIcon className='chaticon'\r\n              color = \"white\"\r\n              />  My Friend Requests\r\n            </Button>\r\n            \r\n        }\r\n         <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 27px\",marginTop:\"2rem\",display:\"block\",backgroundColor:\"#69B6CF\"}}\r\n           variant=\"contained\" \r\n            color=\"Secondary\"\r\n            fullWidth\r\n            onClick={event =>  history.push('/update-my-profile-setup/'+myId)}>\r\n              <SettingsIcon className='chaticon'\r\n              color = \"white\"/>Update Profile\r\n            </Button>\r\n       \r\n             <Button className= \"loginbtn\"\r\n             style={{padding:\"10px 20px\",marginTop:\"2rem\",display:\"block\",backgroundColor:\"#C3767F\"}}\r\n            variant=\"contained\" \r\n            color=\"Secondary\"\r\n            fullWidth\r\n            onClick={DeleteAccount}>\r\n              <DeleteIcon className='chaticon'\r\n              color = \"white\"/> Delete Account\r\n            </Button>\r\n             \r\n       </Grid>\r\n        <Grid item xs={1} md={4}></Grid>\r\n     </Grid>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    </div>\r\n};\r\n\r\nexport default UserDashboard;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nexport default function LinearBuffer() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [buffer, setBuffer] = React.useState(10);\r\n\r\n  const progressRef = React.useRef(() => {});\r\n  React.useEffect(() => {\r\n    progressRef.current = () => {\r\n      if (progress > 100) {\r\n        setProgress(0);\r\n        setBuffer(10);\r\n      } else {\r\n        const diff = Math.random() * 10;\r\n        const diff2 = Math.random() * 10;\r\n        setProgress(progress + diff);\r\n        setBuffer(progress + diff + diff2);\r\n      }\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      progressRef.current();\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress variant=\"buffer\" value={progress} valueBuffer={buffer} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { amber, green } from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\nconst AlertBar = ({ type, message, autoClose }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const Icon = variantIcon[type];\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={open}\r\n      autoHideDuration={autoClose}\r\n      onClose={handleClose}\r\n    >\r\n      <SnackbarContent\r\n        className={clsx(classes[type])}\r\n        aria-describedby=\"client-snackbar\"\r\n        message={\r\n          <span id=\"client-snackbar\" className={classes.message}>\r\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n\r\n            {message}\r\n          </span>\r\n        }\r\n        action={[\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"close\"\r\n            color=\"inherit\"\r\n            onClick={handleClose}\r\n          >\r\n            <CloseIcon className={classes.icon} />\r\n          </IconButton>,\r\n        ]}\r\n      />\r\n    </Snackbar>\r\n  );\r\n};\r\nexport default AlertBar;\r\n","import axios from \"axios\";\r\naxios.defaults.headers.common[\"x-auth-token\"] =localStorage.getItem(\"token\");\r\nexport const signup = async (data) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const response = await axios.post(\"http://localhost:5000/api/users/signup\", data);\r\n  return response;\r\n};\r\nexport const login = async (data) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const response = await axios.post(\"http://localhost:5000/api/users/login\", data);\r\n  return response;\r\n};\r\n","import React from \"react\"\r\nimport { Grid ,Typography} from \"@material-ui/core\"\r\nimport { brown } from \"@material-ui/core/colors\";\r\n\r\nconst LogoPage = ({ name }) => {\r\nreturn(\r\n <Grid container >\r\n      <Grid item xs={1} sm={2} xm={5} md={4}></Grid>\r\n      <Grid item xs={10} sm={8} xm={2} md={6}>\r\n        \r\n     <Typography variant=\"headline\" \r\n         style={{ \r\n          marginTop:\"1rem\",\r\n         position: \"relative\",\r\n         fontSize:\"5rem\",\r\n         color:brown[300],\r\n          marginBottom:\"1rem\",\r\n         fontFamily:\"Brush Script MT, Brush Script Std, cursive\"}}\r\n          component=\"h1\">\r\n               <img className=\"loginImg\" src={process.env.PUBLIC_URL + '/images/logo.png'} />{name}\r\n          </Typography>\r\n      \r\n      </Grid>\r\n      \r\n    <Grid item  xs={1} sm={2} xm={5} md={2}></Grid>\r\n    </Grid>\r\n    )}\r\nexport default LogoPage;","import React, { useState, useEffect } from \"react\";\r\nimport clsx from 'clsx';\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  InputAdornment,\r\n  InputLabel,\r\n  FormControl,\r\n  Input,\r\n  IconButton,\r\n  Typography,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Radio,\r\n  Paper,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { grey, cyan} from '@material-ui/core/colors';\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport isEmpty from \"validator/lib/isEmpty\";\r\nimport equals from \"validator/lib/equals\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { signup } from \"../api/auth\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport LogoPage from \"./LogoPage\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   \r\n  textfield: {\r\n     marginTop: theme.spacing(2.5),\r\n  },\r\n  margin:{\r\n         marginTop: theme.spacing(2.5),\r\n  }\r\n   \r\n}));\r\nconst SignUp = () => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    if (isAuthenticated() && isAuthenticated().role === 1)\r\n      history.push(\"/dashboard\");\r\n    else if (isAuthenticated() && isAuthenticated().role === 0)\r\n      history.push(\"/dashboard\");\r\n  }, [history]);\r\n  const [values, setValues] = useState({\r\n    firstName: \"\",\r\n    lastName:\"\",\r\n    email: \"\",\r\n    gender:\"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    errorMessage: \"\",\r\n    successMsg: \"\",\r\n    showPassword: false,\r\n    showPassword1: false,\r\n    loading: false,\r\n  });\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    gender,\r\n    password,\r\n    confirmPassword,\r\n    errorMessage,\r\n    successMsg,\r\n    loading,\r\n  } = values;\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n      errorMessage: \"\",\r\n      successMsg: \"\",\r\n    });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n  const handleClickShowConfirmPassword = () => {\r\n    setValues({ ...values, showPassword1: !values.showPassword1 });\r\n  };\r\n   \r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const handleTextChange = (evt) => {\r\n    setValues({\r\n      ...values,\r\n      [evt.target.name]: evt.target.value,\r\n      errorMessage: \"\",\r\n      successMsg: \"\",\r\n    });\r\n  };\r\n  const Register = (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      isEmpty(firstName) ||\r\n      isEmpty(lastName) ||\r\n      isEmpty(email) ||\r\n      isEmpty(password) ||\r\n      isEmpty(confirmPassword)||isEmpty(gender)) \r\n      {\r\n      setValues({ ...values, errorMessage: \"All fields are required\" });\r\n      } else if (!isEmail(email)) {\r\n      setValues({ ...values, errorMessage: \"Invalid Email\" });\r\n      } else if (!equals(password, confirmPassword)) {\r\n      setValues({ ...values, errorMessage: \"Password do not matched\" });\r\n      } else {\r\n      const { firstName,lastName, email, password ,gender} = values;\r\n      const data = { firstName,lastName,  email, password ,gender};\r\n      setValues({ ...values, loading: true });\r\n      signup(data)\r\n        .then((response) => {\r\n          setValues({\r\n            ...values,\r\n            firstName: \"\",\r\n            lastName:\"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            gender:\"\",\r\n            errorMessage: false,\r\n            successMsg: response.data.successMessage,\r\n            loading: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setValues({\r\n            ...values,\r\n            loading: false,\r\n            errorMessage: err.response.data.errorMessage,\r\n          });\r\n        });\r\n    }\r\n  };\r\n    \r\n  const SignUpForm = () => (\r\n    <div className=\"signup-container\">\r\n      <Grid container>\r\n        <Grid item xs={1} sm={3} md={4}></Grid>\r\n        <Grid item xs={10} sm ={6} md={4}>\r\n          <Paper  className=\"Login-container\" style={{padding: '30px 30px'}} >\r\n              <Grid container style={{textAlign:\"center\"}}>\r\n          <Grid item xs={6} >\r\n            <Link className=\"header\"  to=\"/login\">Sign In</Link>      \r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Link className=\"active-header\" to=\"/signup\">Sign Up</Link>\r\n          </Grid>\r\n\r\n        </Grid>\r\n          <TextField\r\n            className={classes.textfield}\r\n            id=\"filled-start-adornment\"\r\n             \r\n            value={values.firstName}\r\n            label= {\r\n              <div> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> firstName </Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\"}}>*</Typography>\r\n                  </div>\r\n            }\r\n            name=\"firstName\"\r\n            \r\n            fullWidth\r\n            onChange={handleTextChange}\r\n             InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n             <AccountCircleIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n          />\r\n           <TextField\r\n            className={classes.textfield}\r\n            id=\"filled-start-adornment1\"\r\n            value={values.lastName}\r\n            label= {\r\n              <div> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> lastName </Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\"}}>*</Typography>\r\n                  </div>\r\n            }\r\n            name=\"lastName\"\r\n            \r\n            fullWidth\r\n            onChange={handleTextChange}\r\n             InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n             <AccountCircleIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n          />\r\n          <TextField\r\n            className={classes.textfield}\r\n            label= {\r\n              <div> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\" }}> Email Address </Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\"  }}>*</Typography>\r\n                  </div>\r\n            }\r\n            id=\"filled-start-adornment1\"\r\n            \r\n            name=\"email\"\r\n            value={values.email}\r\n            fullWidth\r\n            onChange={handleTextChange}\r\n             InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n             <EmailIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n          />\r\n              \r\n        <FormControl className={clsx(classes.margin, classes.textField)} fullWidth>\r\n         <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\" }}>*</Typography>\r\n         </InputLabel>\r\n                    <Input\r\n            id=\"standard-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n              \r\n          startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <LockIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n        \r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n         \r\n          <FormControl className={clsx(classes.margin, classes.textField)} fullWidth>\r\n                 <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> Confirm Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\" }}>*</Typography>\r\n         </InputLabel>\r\n           <Input\r\n            id=\"standard-adornment-confirmPassword\"\r\n            type={values.showPassword1 ? 'text' : 'password'}\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange('confirmPassword')}\r\n             startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <VpnKeyIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowConfirmPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword1 ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n    <FormControl component=\"fieldset\" className={classes.margin}>\r\n      <FormLabel component=\"legend\">  \r\n            <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\", fontSize:\"0.9rem\",marginLeft:\"0.4rem\"  }}> Gender</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\" }}>*</Typography>\r\n             </FormLabel>\r\n      <RadioGroup aria-label=\"gender\" name=\"gender1\" style={{display:'initial',marginLeft:\"4rem\"}} value={values.gender} onChange={handleChange('gender')}>\r\n        <FormControlLabel value=\"female\" control={<Radio style={{color:cyan[900]}} />} label=\"Female\" />\r\n        <FormControlLabel value=\"male\" control={<Radio style={{color:cyan[900]}}/>} label=\"Male\" />\r\n        <FormControlLabel value=\"other\" control={<Radio style={{color:cyan[900]}} />} label=\"Other\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n         <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n             \r\n              padding: \"0.5rem\",}}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={Register}\r\n          >\r\n            Next\r\n          </Button>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={1} sm={3} md={4}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"signup_div\">\r\n      {loading && <LinearBuffer />}\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={4000} />\r\n      )}\r\n       <LogoPage className=\"title\" name= {\"TalkSee\"}/>\r\n      {SignUpForm()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;","export const deletePermission = (state, action) => {\r\n     switch (action.type) {\r\n    case \"updatePermission\":\r\n      return {state: action.value };\r\n    default:\r\n      return state;\r\n  }\r\n}"," import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport { deletePermission } from \"../reducers/DeletePermissionReducer\";\r\nexport const DeletePermission = createContext();\r\nconst DeletePermissionProvider = (props) => {\r\n  const [deletemsg, dispatch] = useReducer(deletePermission, \"1\", () => {\r\n    const localData = localStorage.getItem(\"deletion\");\r\n    return localData ? JSON.parse(localData) : \"\";\r\n  });\r\n  useEffect(\r\n    () => {localStorage.setItem(\"deletion\",  JSON.stringify(deletemsg))},\r\n    [deletemsg]\r\n  );\r\n  return (\r\n    <DeletePermission.Provider value={{ deletemsg, dispatch }}>\r\n      {props.children}\r\n    </DeletePermission.Provider>\r\n  );\r\n};\r\nexport default DeletePermissionProvider;","import React, { useState, useEffect ,useContext} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from 'clsx';\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  Input,\r\n  InputAdornment,\r\n  Typography,\r\n  Paper,\r\n  IconButton,\r\n  InputLabel\r\n} from \"@material-ui/core\";\r\nimport { grey, cyan} from '@material-ui/core/colors';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport isEmpty from \"validator/lib/isEmpty\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport { login } from \"../api/auth\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport io from \"socket.io-client\";\r\n//import { toast } from \"react-toastify\";\r\n\r\n\r\nimport {SocketContext} from '../../../context/SocketContext';\r\n//import { v4 as uuidv4 } from 'uuid';\r\nimport { authentication, isAuthenticated } from \"../clientStorages/auth\";\r\nimport { DeletePermission } from \"../../../context/DeletePermissionContext\";\r\nimport LogoPage from \"./LogoPage\"\r\nconst useStyles = makeStyles((theme) => ({\r\n   textField: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  margin:{\r\n    marginBottom: theme.spacing(2),\r\n    \r\n  }\r\n}));\r\nconst LogIn = ({onIdSubmit,setId}) => {\r\n  let history = useHistory();\r\n  const {setSocket,roomJoin,messageEvent, friendReq} = useContext(SocketContext);\r\n  const classes = useStyles(); \r\n  const { dispatch } = useContext(DeletePermission);\r\n  let clientSocket1 = React.useRef()\r\n  useEffect(() => {\r\n    if (isAuthenticated() && isAuthenticated().role === 1)\r\n      history.push(\"/admin/dashboard\");\r\n    else if (isAuthenticated() && isAuthenticated().role === 0)\r\n      history.push(\"/user/dashboard\");\r\n     \r\n      \r\n  }, [history]);\r\n  window.onload = () => {\r\n    friendReq()\r\n    messageEvent()\r\n   /* let did = isAuthenticated()._id;\r\n    roomJoin(did)\r\n    clientSocket1 = io(\"http://127.0.0.1:5000\")\r\n \r\n    setSocket((s)=>{\r\n      s = clientSocket1\r\n      s.on('connect' , () => {\r\n        console.log(\"connected\",s.id);\r\n        s.emit(\"adduser\",{id:s.id, name: isAuthenticated().email})\r\n      });\r\n      return s;\r\n    })*/\r\n  }\r\n  \r\n\r\n  useEffect(()=>{\r\n   friendReq()\r\n \r\n  },[])\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    errorMessage: \"\",\r\n    showPassword: false,\r\n    loading: false,\r\n  });\r\n  const { email, password, errorMessage, loading } = values;\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n      errorMessage: \"\",\r\n    });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n   const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const handleTextChange = (evt) => {\r\n    setValues({\r\n      ...values,\r\n      [evt.target.name]: evt.target.value,\r\n      errorMessage: \"\",\r\n    });\r\n  };\r\n  const Register = (event) => {\r\n    event.preventDefault();\r\n    if (isEmpty(email) || isEmpty(password)) {\r\n      setValues({ ...values, errorMessage: \"Both fields are required\" });\r\n    } else if (!isEmail(email)) {\r\n      setValues({ ...values, errorMessage: \"Invalid Email\" });\r\n    } else {\r\n      setValues({ ...values, loading: true });\r\n      const { email, password } = values;\r\n      const data = { email, password };\r\n\r\n      login(data)\r\n        .then((response) => {\r\n          authentication(response.data.token, response.data.user);\r\n          console.log(response)\r\n          if (isAuthenticated() && isAuthenticated().role === 1)\r\n            history.push(\"/dashboard/\"+isAuthenticated()._id);\r\n          else {\r\n        history.push(\"/dashboard/\"+isAuthenticated()._id);};\r\n          setValues({ ...values, loading: false });\r\n          setId(isAuthenticated()._id)\r\n         var del=  JSON.parse(localStorage.getItem(\"deletion\"));\r\n         if (del == \"\")\r\n            dispatch({ type: \"updatePermission\", value: false })\r\n         \r\n           \r\n        })\r\n        .catch((err) => {\r\n          setValues({\r\n            ...values,\r\n            password:\"\",\r\n            loading: false,\r\n            errorMessage: err.response.data.errorMessage,\r\n          });\r\n        });\r\n       \r\n        onIdSubmit(email)\r\n        \r\n        console.log(\"email\",email)\r\n        \r\n    }\r\n  };\r\n  \r\n  const LogInForm = () => (\r\n    <div >\r\n      <Grid container>\r\n        <Grid item xs={1} sm={3} md={4}></Grid>\r\n        <Grid item xs={10} sm={6} md={4}>\r\n         \r\n           <Paper  className=\"Login-container\" style={{padding: '30px 50px'}} > \r\n            <Grid container style={{textAlign:\"center\"}}>\r\n          <Grid item xs={6} >\r\n            <Link className=\"active-header\"  to=\"/login\">Sign In</Link>      \r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Link className=\"header\" to=\"/signup\">Sign Up</Link>\r\n          </Grid>\r\n\r\n        </Grid>\r\n           <TextField\r\n           className={classes.textField}\r\n           style={{marginTop:\"2rem\"}}\r\n            label={\r\n              <div> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"   }}> Email Address </Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\"}}>*</Typography>\r\n                  </div>\r\n                  }\r\n            id=\"email-field\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            fullWidth\r\n            onChange={handleTextChange}\r\n             InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n             <EmailIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          ),\r\n         }}\r\n          />\r\n          \r\n         <FormControl className={clsx(classes.margin, classes.textField)} fullWidth>\r\n         <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"    }}> Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\"}}>*</Typography>\r\n         </InputLabel>\r\n                    <Input\r\n            id=\"standard-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n              \r\n          startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <VpnKeyIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n        \r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n         </FormControl>\r\n            <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginBottom: \"1.2rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={Register}\r\n          >\r\n            Sign in\r\n          </Button>\r\n           <Link to=\"/forgot-password\" style={{textDecoration:\"none\",marginLeft:\"1rem auto\"}}  >Forgot Password?</Link>\r\n\r\n   </Paper>\r\n   \r\n         </Grid>\r\n        <Grid item xs={1} sm={3} md={4} >\r\n        </Grid>\r\n         \r\n      </Grid>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"login_div\">\r\n      {loading && <LinearBuffer />}\r\n    \r\n           \r\n             <LogoPage className=\"title\" name= {\"TalkSee\"}/>\r\n                  {LogInForm()} \r\n      \r\n     \r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n       \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;","import React, { useState, useEffect } from 'react';\r\nimport accountService from \"../../../services/accountService\";\r\nimport jwt from 'jsonwebtoken';\r\nimport { grey,green, cyan,red} from '@material-ui/core/colors';\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\nimport PageTitle from \"./pageTitle\";\r\nimport { useHistory } from 'react-router-dom';\r\nconst Activate = ({ match }) => {\r\n let token1 = match.params.token;\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    token: '',\r\n    errorMessage: \"\",\r\n    successMsg: \"\",\r\n  });\r\n   const { firstName,lastName, token, errorMessage, successMsg} = formData;\r\n   let history = useHistory()\r\n  useEffect(() => {\r\n    let token = match.params.token;\r\n    let { firstName } = jwt.decode(token);\r\n    let { lastName } = jwt.decode(token);\r\n    if (token) {\r\n      setFormData({ ...formData, firstName,lastName,  token });  \r\n      accountService.accountActivation({token})\r\n      .then(response => {\r\n        setFormData({\r\n          ...formData,\r\n          errorMessage: false,\r\n          successMsg: response.successMessage,\r\n          firstName: response.firstName,\r\n          lastName: response.lastName,\r\n        });\r\n      })\r\n      .catch(err => {\r\n      setFormData({\r\n          ...formData,\r\n          successMsg: false,\r\n         errorMessage: err.response.data.errorMessage,\r\n          firstName: err.response.data.firstName,\r\n          lastName: err.response.data.lastName,\r\n        });\r\n      });\r\n    }}, [match.params]);\r\n     \r\n  \r\n  const ActivationSuccess=()=>(\r\n<div> \r\n  <Grid container > \r\n <Grid item xs={1} sm={3} md={4}></Grid>\r\n  <Grid item xs={1} sm={3} md={4}> \r\n  \r\n      <p><strong>Hi {firstName +\" \"+lastName}</strong></p>\r\n        <div>  <CheckCircleRoundedIcon \r\n              style = {{ color: green[600],paddingTop:\"0.3rem\" }}/>  \r\n           <span style ={{fontSize:\"1.3rem\"}} > Your account has been successfully verified. Click below to create your profile</span></div>\r\n      <Button\r\n             style={{ \r\n               color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\" }}\r\n              variant=\"contained\"\r\n              className= \"loginbtn\"\r\n              onClick={event =>  history.push('/profile-setup/'+token1)}\r\n             \r\n          >\r\n            Create Profile\r\n          </Button>\r\n          </Grid>\r\n          <Grid item xs={1} sm={3} md={4}></Grid>\r\n          </Grid>\r\n   </div>\r\n\r\n\r\n  );\r\n   const ActivationFailure=()=>(\r\n<div> \r\n  <Grid container > \r\n <Grid item xs={1} sm={3} md={4}></Grid>\r\n  <Grid item xs={1} sm={3} md={4}> \r\n  \r\n      <p><strong>Hi {firstName+\" \"+lastName}</strong></p>\r\n        <div>  <CancelRoundedIcon \r\n              style = {{ color: red[600]  }}/>  \r\n           <span style ={{fontSize:\"1.3rem\"}} > <strong>{errorMessage}</strong> </span></div>\r\n      <Button\r\n             style={{ \r\n               color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\" }}\r\n            variant=\"contained\"\r\n             className= \"loginbtn\"\r\n            onClick={event =>  history.push('/signup')}\r\n             \r\n          >\r\n               Try  Again   \r\n          </Button>\r\n          </Grid>\r\n          <Grid item xs={1} sm={3} md={4}></Grid>\r\n          </Grid>\r\n   </div>\r\n\r\n\r\n  );\r\n  return (\r\n  <div>\r\n        <PageTitle name= {\"Activation\"}/>\r\n       {errorMessage && ( ActivationFailure())}\r\n       {successMsg && (ActivationSuccess())}\r\n  </div>)\r\n      }\r\nexport default Activate;","import React from \"react\";\r\nimport {Grid} from  \"@material-ui/core\";\r\nconst notFound = () => {\r\n  return <div style={{marginTop:\"10rem\"}}>\r\n    <Grid container > \r\n   <Grid item xs={1} sm={3} md={4}></Grid>\r\n        <Grid item xs={10} sm={6} md={4}>\r\n    <h1  > Error 404</h1>\r\n    <h5 style ={{marginLeft:\"2rem\"}}>Page Not Found</h5>\r\n    </Grid>\r\n     <Grid item xs={1} sm={3} md={4}></Grid>\r\n    </Grid>\r\n    </div>;\r\n};\r\n\r\nexport default notFound;\r\n","import React,{useState} from \"react\";\r\nimport accountService from \"../../../services/accountService\";\r\nimport {Grid,Button, Typography, InputAdornment,TextField,Paper} from \"@material-ui/core\";\r\nimport { grey, cyan,indigo} from '@material-ui/core/colors';\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport isEmpty from \"validator/lib/isEmpty\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport PageTitle from \"./pageTitle\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n \r\nconst ForgotPassword = () => {\r\n      \r\n const [values, setValues] = useState({\r\n    email: \"\",\r\n    errorMessage: \"\",\r\n    successMsg:\"\",\r\n    loading: false,\r\n  });\r\n  const { email, successMsg, errorMessage, loading } = values;\r\n\r\n const handleTextChange = (evt) => {\r\n    setValues({\r\n      ...values,\r\n      [evt.target.name]: evt.target.value,\r\n      errorMessage: \"\",\r\n      successMsg: \"\",\r\n    });\r\n  };\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (isEmpty(email)   ) {\r\n      setValues({ ...values, errorMessage: \"Field is required\" });\r\n    } else if (!isEmail(email)) {\r\n      setValues({ ...values, errorMessage: \"Invalid Email  syntax\" });\r\n    } else {\r\n      const { email} = values;\r\n      setValues({ ...values, loading: true });\r\n        accountService.forgotPassword({email})\r\n        .then((response) => {\r\n          setValues({\r\n            ...values,\r\n            email: \"\",\r\n            errorMessage: false,\r\n            successMsg: response.successMessage,\r\n            loading: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setValues({\r\n            ...values,\r\n            loading: false,\r\n            email: \"\",\r\n            successMsg:false,\r\n            errorMessage: err.response.data.errorMessage,\r\n          });\r\n        });\r\n    }\r\n  };\r\n \r\nconst ResetPageForm = () =>(\r\n<div>\r\n    <Grid container >\r\n          <Grid item xs={1} sm={3} md={4}></Grid>\r\n          <Grid item xs={10} sm ={6} md={4} >\r\n        <Paper style={{padding: '30px 50px'}} >\r\n          <Button  \r\n            className= \"loginbtn\"\r\n            href=\"/login\"\r\n            color=\"primary\"\r\n           style={{marginBottom:\"2rem\" ,paddingLeft:\"0rem\",color:indigo[800]  }}\r\n          >\r\n            <ArrowBackIcon style={{fontWeight:\"bold\",marginRight:\"0.3rem\"}}/> Go Back\r\n          </Button>\r\n              <TextField\r\n            label= {\r\n              <div> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\" }}> Email Address </Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\"  }}>*</Typography>\r\n                  </div>\r\n            }\r\n            id=\"filled-start-adornment1\"\r\n             variant=\"outlined\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            fullWidth\r\n            onChange={handleTextChange}\r\n             InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n             <EmailIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n          />\r\n              <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"12rem\" , \r\n              marginTop: \"1.5rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n             fullWidth\r\n            onClick={onSubmit}\r\n          >\r\n           Submit  \r\n          </Button>\r\n                </Paper>\r\n          </Grid>\r\n          <Grid item xs={1} sm={3} md={4}></Grid>\r\n    </Grid>\r\n</div>\r\n)\r\nreturn (<div>\r\n    \r\n    {loading && <LinearBuffer />}\r\n     <PageTitle name= {\"Forgot Password\"}/>\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={4000} />\r\n      )}\r\n      {ResetPageForm()}\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default ForgotPassword;","import React, { useState, useEffect } from \"react\";\r\nimport clsx from 'clsx';\r\nimport accountService from \"../../../services/accountService\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  InputAdornment,\r\n  InputLabel,\r\n  FormControl,\r\n  Input,\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\n import { grey, cyan,indigo} from '@material-ui/core/colors';\r\nimport isEmpty from \"validator/lib/isEmpty\";\r\nimport equals from \"validator/lib/equals\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n const useStyles = makeStyles((theme) => ({\r\n  textfield: {\r\n     margin: theme.spacing(1),\r\n  },\r\n   margin:{\r\n     marginTop: \"1.2rem\"\r\n   } \r\n}));\r\n\r\nconst ResetPassword = ({ match }) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [values, setValues] = useState({\r\n    token: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    errorMessage: \"\",\r\n    successMsg: \"\",\r\n    showPassword: false,\r\n    showPassword1: false,\r\n    loading: false,\r\n  });\r\n  \r\n   const {\r\n    token,\r\n    password,\r\n    confirmPassword,\r\n    errorMessage,\r\n    successMsg,\r\n    loading,\r\n  } = values;\r\n\r\n    useEffect(() => {\r\n        let token = match.params.token\r\n        if(token) {\r\n            setValues({...values, token})\r\n        }\r\n    }, [])\r\n    const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n   const handleChange = (prop) => (event) => {\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n      errorMessage: \"\",\r\n      successMsg: \"\",\r\n    });\r\n  };\r\n const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n  const handleClickShowConfirmPassword = () => {\r\n    setValues({ ...values, showPassword1: !values.showPassword1 });\r\n  };\r\n   const ResetPasswordBtn = (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      isEmpty(password) ||\r\n      isEmpty(confirmPassword)\r\n    ) {\r\n      setValues({ ...values, errorMessage: \"All fields are required\" });\r\n    } else if (!equals(password, confirmPassword)) {\r\n      setValues({ ...values, errorMessage: \"Passwords do not match\" });\r\n    } else {\r\n  \r\n     \r\n      setValues({ ...values, loading: true });\r\n     accountService.resetPassword( { newPassword: password, resetPasswordLink: token})\r\n        .then((response) => {\r\n          setValues({\r\n            ...values,\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errorMessage: false,\r\n            successMsg: response.successMessage,\r\n            loading: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setValues({\r\n            ...values,\r\n             password: \"\",\r\n            confirmPassword: \"\",\r\n            loading: false,\r\n            errorMessage: err.response.data.errorMessage,\r\n          });\r\n        });\r\n    }\r\n  };\r\n     \r\n  const ResetPasswordForm=()=>(\r\n      \r\n    <Grid container >\r\n      <Grid item xs={1} sm={3} md={4}></Grid>\r\n        <Grid item xs={10} sm ={6} md={4}>\r\n          <Paper style={{padding: '30px 50px'}} >\r\n          <Button  \r\n            className= \"loginbtn\"\r\n            href=\"https://mail.google.com/mail/u/0/#inbox\"\r\n            color=\"primary\"\r\n           style={{marginBottom:\"2rem\" ,paddingLeft:\"0rem\",color:indigo[800]  }}\r\n          >\r\n           <ArrowBackIcon style={{fontWeight:\"bold\",marginRight:\"0.3rem\"}}/> Go Back\r\n          </Button>\r\n             <FormControl className={clsx( classes.textField)} fullWidth>\r\n         <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> New Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\" }}>*</Typography>\r\n         </InputLabel>\r\n                    <Input\r\n            id=\"standard-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n              \r\n          startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <LockIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n        \r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n         \r\n          <FormControl className={clsx(classes.margin, classes.textField)} fullWidth>\r\n                 <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> Confirm Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\" }}>*</Typography>\r\n         </InputLabel>\r\n           <Input\r\n            id=\"standard-adornment-confirmPassword\"\r\n            type={values.showPassword1 ? 'text' : 'password'}\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange('confirmPassword')}\r\n             startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <VpnKeyIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowConfirmPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword1 ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n    \r\n         <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n              }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={ResetPasswordBtn}\r\n          >\r\n            Reset Password \r\n          </Button>\r\n          {successMsg &&  <Button\r\n                     style={{  \r\n                     backgroundColor:grey[500],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"outline\"\r\n            fullWidth\r\n            onClick={event =>  history.push('/login')}\r\n                  >\r\n                      Login\r\n                  </Button>}\r\n           </Paper>\r\n        </Grid>\r\n     <Grid item xs={1} sm={3} md={4}></Grid>\r\n    </Grid>\r\n       \r\n  );   \r\n  return (\r\n  <div>\r\n        {loading && <LinearBuffer />}\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={4000} />\r\n      )}\r\n       <PageTitle name= {\"Reset Password\"}/>\r\n      {ResetPasswordForm()}\r\n      \r\n  </div>)\r\n      }\r\nexport default ResetPassword;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport Select from \"react-select\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport { grey, cyan} from '@material-ui/core/colors';\r\nimport {Button} from \"@material-ui/core\";\r\nimport axios from 'axios';\r\nimport accountService from \"../../../services/accountService\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Webcam from \"react-webcam\";\r\nconst useStyles = makeStyles({\r\n  \r\n  textfield: {\r\n    marginTop: \"2rem\",\r\n  },\r\n  Submitbtn: {\r\n    marginTop: \"0.6rem\",\r\n  },\r\n});\r\n\r\n\r\n\r\nconst ProfileSetup = ( {match}) => {\r\n    const classes = useStyles();\r\n      let history = useHistory();\r\n    const webcamRef = React.useRef(null);\r\n    const [capturedPic, setCapturedPic]=React.useState(false);\r\nconst options = [\r\n  { label: 'Afrikaans',value:'af' },\r\n  { label: 'Albanian',value:'sq'},\r\n  { label: 'Amharic',value:'am'},\r\n  { label: 'Arabic',value:'ar'},\r\n  { label: 'Armenian',value:'hy'},\r\n  { label: 'Azerbaijani',value:'az'},\r\n  { label: 'Basque',value:'eu'},\r\n  { label: 'Belarusian',value:'be'},\r\n  { label: 'Bengali',value:'bn'},\r\n  { label: 'Bosnian',value:'bs'},\r\n  { label: 'Bulgarian',value:'bg'},\r\n  { label: 'Catalan',value:'ca'},\r\n  { label: 'Cebuano',value:'ceb'},\r\n  { label: 'Chichewa',value:'ny'},\r\n  { label: 'Chinese',value:'zh-cn'},\r\n  { label: 'Corsican',value:'co'},\r\n  { label: 'Croatian',value:'hr'},\r\n  { label: 'Czech',value:'cs'},\r\n  { label: 'Danish',value:'da'},\r\n  { label: 'Dutch',value:'nl'},\r\n  { label: 'English',value:'en'},\r\n  { label: 'Esperanto',value:'eo'},\r\n  { label: 'Estonian',value:'et'},\r\n  { label: 'Filipino',value:'tl'},\r\n  { label: 'Finnish',value:'fi'},\r\n  { label: 'French',value:'fr'},\r\n  { label: 'Danish',value:'da'},\r\n  {label: 'Frisian',value: \"fy\"},\r\n  {label: 'Galician',value: \"gl\"},\r\n  {label: 'Georgian',value: \"ka\"},\r\n  {label: 'German',value: \"de\"},\r\n  {label: 'Greek',value: \"el\"},\r\n  {label: 'Gujarati',value: \"gu\"},\r\n  {label: 'Haitian creole',value: \"ht\"},\r\n  {label:'Hausa',value: \"ha\"},\r\n  {label:'Hawaiian',value: \"haw\"},\r\n  {label:'Hebrew',value: \"iw\"},\r\n  {label: 'Hindi',value: \"hi\"},\r\n  {label:'Hmong',value: \"hmn\"},\r\n  {label:'Hungarian',value: \"hu\"},\r\n  {label:'Icelandic',value: \"is\"},\r\n  {label:'Igbo',value: \"ig\"},\r\n  {label:'Indonesian',value: \"id\"},\r\n  {label:'Irish',value: \"ga\"},\r\n  {label:'Italian',value: \"it\"},\r\n  {label:'Japanese',value: \"ja\"},\r\n  {label:'Javanese',value: \"jw\"},\r\n  {label:'Kannada',value: \"kn\"},\r\n  {label:'Kazakh',value: \"kk\"},\r\n  {label:'Khmer',value:'km'},\r\n  {label:'Korean',value:'ko'},\r\n  {label:'Kurdish',value:'ku'},\r\n  {label: 'Kyrgyz',value: \"ky\"},\r\n  {label: 'Lao',value: \"lo\"},\r\n  {label: 'Latin',value: \"la\"},\r\n  {label: 'Latvian',value: \"lv\"},\r\n  {label: 'Lithuanian',value: \"lt\"},\r\n  {label: 'Luxembourgish',value: \"lb\"},\r\n  {label: 'Macedonian',value: \"mk\"},\r\n  {label:'Malagasy',value: \"mg\"},\r\n  {label:'Malay',value: \"ms\"},\r\n  {label:'Malayalam',value: \"ml\"},\r\n  {label: 'Maltese',value: \"mt\"},\r\n  {label:'Maori',value: \"mi\"},\r\n  {label:'Marathi',value: \"mr\"},\r\n  {label:'Mongolian',value: \"mn\"},\r\n  {label:'Myanmar (burmese)',value: \"my\"},\r\n  {label:'Nepali',value: \"ne\"},\r\n  {label:'Norwegian',value: \"no\"},\r\n  {label:'Odia',value: \"or\"},\r\n  {label:'Pashto',value: \"ps\"},\r\n  {label:'Persian',value: \"fa\"},\r\n  {label:'Polish',value: \"pl\"},\r\n  {label:'Portuguese',value: \"pt\"},\r\n  {label:'Punjabi',value: \"pa\"},\r\n  {label :'Romanian', value:\"ro\"},\r\n  {label :'Russian', value:\"ru\"},\r\n  {label:'Samoan',value: \"sm\"},\r\n  {label:'Scots gaelic',value: \"gd\"},\r\n  {label:'Serbian',value: \"sr\"},\r\n  {label:'Sesotho',value: \"st\"},\r\n  {label:'Shona',value: \"sn\"},\r\n  {label:'Sindhi',value: \"sd\"},\r\n  {label:'Sinhala',value: \"si\"},\r\n  {label:'Slovak',value: \"sk\"},\r\n  {label:'Slovenian', value:\"sl\"},\r\n  {label:'Somali', value:\"so\"},\r\n  {label:'Spanish', value:'es' },\r\n  {label:'Sundanese',value: \"su\"},\r\n  {label:'Swahili',value: \"sw\"},\r\n  {label:'Swedish',value: \"sv\"},\r\n  {label:'Tajik',value: \"tg\"},\r\n  {label:'Tamil',value: \"ta\"},\r\n  {label:'Telugu',value: \"te\"},\r\n  {label:'Thai',value: \"th\"},\r\n  {label:'Turkish',value: \"tr\"},\r\n  {label :'Ukrainian', value:\"uk\"},\r\n  {label:'Urdu',value: \"ur\"},\r\n  {label :'Uyghur', value:\"ug\"},\r\n  {label:'Uzbek', value:'uz' },\r\n  {label:'Vietnamese',value: \"vi\"},\r\n  {label :'Welsh', value:\"cy\"},\r\n  {label:'Xhosa',value: \"xh\"},\r\n  {label :'Yiddish', value:\"yi\"},\r\n  {label:'Yoruba', value:'yo' },\r\n  {label:'Zulu',value: \"zu\"},\r\n  \r\n];\r\n    const [values, setValues] = useState({\r\n    img: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\r\n    language:\"\",\r\n    token:\"\",\r\n    errorMessage: \"\",\r\n    successMsg:\"\",\r\n    infoMessage:\"\",\r\n    loading: false,\r\n  });\r\n  const { img,language,token, successMsg, errorMessage,infoMessage, loading } = values;\r\nuseEffect(() => {\r\n        let token = match.params.token\r\n        if(token) {\r\n            setValues({...values, token})\r\n        }\r\n    }, [])\r\n\r\nconst resizeFile = (file) => new Promise(resolve => {\r\n    Resizer.imageFileResizer(file, 300, 300, 'JPEG', 100, 0,\r\n    uri => {resolve(uri);},'base64' );\r\n});\r\nconst capture =  React.useCallback(() => {\r\n   try{\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n       setValues({...values, infoMessage: \"Picture Captured\"}); \r\n       const data = new FormData();\r\n      data.append(\"file\", imageSrc);\r\n      axios.post(\"http://127.0.0.1:5000/webcam-face-detection\",data)\r\n         .then(async (response) => {\r\n          setValues({ ...values , errorMessage :\"\", successMsg:response.data.successMessage})\r\n           setValues({...values, infoMessage: \"Loading....\"});\r\n           data.append(\"file\", imageSrc);\r\n           data.append(\"upload_preset\", \"TalkSee\");\r\n          fetch(\"https://api.cloudinary.com/v1_1/fariha31/image/upload\",\r\n              { method: \"POST\",\r\n                body: data,\r\n             } ).then(response => response.json())\r\n      .then(data =>   setValues({ ...values , img: data.url}))\r\n      .catch(err => console.error('Error:', err));;   \r\n          })\r\n         }\r\n catch(err)\r\n     {setValues({...values, errorMessage: \"error in uploading photo\"}); }\r\n   \r\n    },\r\n    [webcamRef]\r\n  );\r\n const uploadImage = async (e) => {\r\n  try {\r\n           const imageFile = e.target.files[0];\r\n           const data = new FormData();\r\n           data.append(\"file\", imageFile);\r\n           axios.post(\"http://127.0.0.1:5000/\",data)\r\n         .then(async (response) => {\r\n         setValues({ ...values , errorMessage :\"\", successMsg:\"response.data.successMessage\"})\r\n            const compressedImage = await resizeFile(imageFile);\r\n           setValues({...values, infoMessage: \"Loading....\"});\r\n           data.append(\"file\", compressedImage);\r\n           data.append(\"upload_preset\", \"TalkSee\");\r\n           const res = await fetch(\"https://api.cloudinary.com/v1_1/fariha31/image/upload\",\r\n              { method: \"POST\",\r\n                body: data,\r\n             } );   \r\n           const file =  await res.json();\r\n           setValues({ ...values , img: file.secure_url});\r\n        })\r\n        .catch((err) => {\r\n            setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n      }\r\n catch(err)\r\n     {setValues({...values, errorMessage: \"error in uploading photo\"}); }\r\n}\r\nconst SetProfile =()=>{\r\n  accountService.profileSetup({profileImg: img, langPreference: language, token})\r\n .then((response) => {\r\n          setValues({\r\n            ...values,\r\n            img: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\r\n            language:\"\",\r\n            errorMessage: false,\r\n            successMsg: response.successMessage,\r\n            loading: false,\r\n          });\r\n        })\r\n         .catch((err) => {\r\n           setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n}\r\n \r\n  const ProfilePage = () =>( \r\n  <div className=\"profile-page\">\r\n      <div className=\"profile-container\">\r\n          <div className=\"img-holder\">\r\n             <img src={img} className=\"profile-img\"/>\r\n              </div>\r\n             <input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={uploadImage}  />\r\n             <div className=\"label\">\r\n                   <label className=\"image-upload\" htmlFor=\"input\">\r\n\t\t\t\t\t\t<i className=\"material-icons\">add_photo_alternate</i>\r\n\t\t\t\t\t\tChoose Profile Photo\r\n\t\t\t\t\t</label>\r\n                 </div>\r\n                 <div className=\"label\">   \r\n             <button className=\"take-photo loginbtn\"  data-toggle=\"modal\" data-target=\"#exampleModalCenter\" onClick={()=>setCapturedPic(false)}>\r\n               <i className=\"material-icons\" style ={{marginRight:\"0.2rem\"}}>photo_camera</i>\r\n               Take Photo</button> \r\n              </div> \r\n              <Select\r\n                    style={{ width: 210, padding: \"0.4rem\" }}\r\n                    placeholder=\"Select Language ---\"\r\n                    value={options.find(c => c.label === language)}\r\n                    className={classes.textfield}\r\n                    options={options}\r\n                    onChange={(e) => {\r\n                      console.log(e)\r\n                      setValues({\r\n                        ...values,\r\n                        language:e.value ,\r\n                      });\r\n                      \r\n                    }}\r\n                  />\r\n                   <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"0.5rem\" , \r\n              marginTop: \"1.5rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={SetProfile}\r\n            \r\n          >\r\n            Set Profile\r\n          </Button>\r\n                   {successMsg &&  <Button\r\n                     style={{  \r\n                     backgroundColor:grey[500],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"outline\"\r\n            fullWidth\r\n            onClick={event =>  history.push('/login')}\r\n                  >\r\n                      Login\r\n                  </Button>}\r\n      </div> \r\n         \r\n     \r\n \r\n\r\n \r\n<div className=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div className=\"modal-content\">\r\n      <div className=\"modal-header\">\r\n        <h3 className=\"modal-title\" id=\"exampleModalLongTitle\">Take Photo</h3>\r\n        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <div  className=\"webcam-container\">\r\n         <Webcam  \r\n        audio={false}\r\n        height= {200}\r\n       width ={460}\r\n        ref={webcamRef}\r\n        screenshotFormat=\"image/jpeg\" />\r\n        </div>\r\n      </div>\r\n       \r\n        {capturedPic ? (<div className=\"modal-footer\"> \r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        </div> ):\r\n        (<div className=\"modal-footer\"> \r\n        <button  className=\"take-photo loginbtn\" onClick ={capture}>\r\n          <i className=\"material-icons\" style ={{marginRight:\"0.2rem\"}}>\r\n            photo_camera</i>Capture photo</button> </div>)\r\n        }\r\n    </div>\r\n  </div>\r\n</div>             \r\n  </div>\r\n)\r\nreturn (<div>\r\n    \r\n    {loading && <LinearBuffer />}\r\n     <PageTitle name= {\"Profile Setup\"}/>\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={3000} />\r\n      )}\r\n       {infoMessage && (\r\n        <AlertBar type=\"info\" message={infoMessage} autoClose={8000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={2500} />\r\n      )}\r\n      {ProfilePage()}\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default ProfileSetup;\r\n","import { Button, Typography,Paper, Grid, Hidden } from \"@material-ui/core\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport React, { useState, useContext} from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { SocketContext } from \"../../../context/SocketContext\";\r\nimport { lightBlue, grey} from '@material-ui/core/colors';\r\n\r\nconst SingleContact = (props) => {\r\n    const { contact } = props;\r\n    const roomId = '/'+contact._id\r\n    let history = useHistory()\r\n    var userData=JSON.parse(localStorage.getItem(\"user\")) \r\n    const [showAddBtn, setAddBtn]=useState(userData.sentRequests.includes(contact._id)?false:true)\r\n    const { clientSocket } = useContext(SocketContext);\r\n    //const [showAddBtn, setAddBtn]=useState(state?!state.sentRequests.includes(contact._id):true);\r\n    const myId=isAuthenticated()._id;\r\n    const myName =isAuthenticated().firstName + \" \" +isAuthenticated().lastName;\r\n    const myProfileImg =isAuthenticated().profileImg;\r\n    const myEmail =isAuthenticated().email;\r\n    const myGender =isAuthenticated().gender;\r\n    const myLangPreference =isAuthenticated().langPreference;\r\n    const sentFriendRequest=() => {\r\n        console.log(\"contact Id\",contact._id)\r\n        friendService.sendRequest(\r\n            {friendId:contact._id,\r\n            myId,myName,myProfileImg,myEmail,myGender,myLangPreference})\r\n         .then((data) => {\r\n           localStorage.setItem(\"user\",JSON.stringify(data));\r\n              // dispatch({type:\"FRIEND_REQUESTED\",payload:{sentRequests:data.sentRequests }})\r\n             setAddBtn(false)\r\n            \r\n            })\r\n         .catch((err) => {console.log(err);});\r\n\r\n         clientSocket.emit(\r\n            \"friendRequest\",\r\n            { myName,roomId },\r\n            (err) => {\r\n              if (!err) console.log(\"emitted event\");\r\n              else console.log(err);\r\n            }\r\n          );\r\n    }\r\n\r\n     const cancelFriendRequest=()=>{\r\n         \r\n        friendService.cancelRequest(\r\n            {friendId:contact._id,myId})\r\n         .then((data) => {\r\n             localStorage.setItem(\"user\",JSON.stringify(data));\r\n            // dispatch({type:\"FRIEND_REQUESTED\",payload:{sentRequests:data.sentRequests }})\r\n             setAddBtn(true)\r\n             \r\n         })\r\n         .catch((err) => {console.log(err);});\r\n         clientSocket.emit(\r\n            \"rejectfriendRequest\",\r\n            { myName,roomId },\r\n            (err) => {\r\n              if (!err) console.log(\"emitted event\");\r\n              else console.log(err);\r\n            }\r\n          );\r\n    }\r\n \r\n    const contactClickHandler = ()=>{\r\n        localStorage.setItem('contact',JSON.stringify(contact))\r\n        //console.log(\"clicked\",'/profile'+props.roomId+'/'+contact._id)\r\n        history.push('/profile'+props.roomId+'/'+contact._id)\r\n    }\r\n    return (\r\n        <div>\r\n       <Paper style={{padding: '10px 20px', marginBottom:\"1rem\"}} //onClick={contactClickHandler}\r\n        >\r\n            <Grid container>\r\n                 <Grid item xs={3} md={1}>  <img src={contact.profileImg}   \r\n          style={{ height: \"60px\", width: \"60px\", borderRadius: \"20%\" ,display:\"inline\" }} alt=\"img\"/> </Grid>\r\n                <Grid item xs={9} md={9}> \r\n            \r\n             <div style={{display:\"inline\"}}><p  className=\"user_names\"   >{contact.firstName + \" \"+ contact.lastName}</p>\r\n               <Typography style={{color:\"gray\",  fontStyle: \"italic\" , fontSize:\"0.9rem\" }}>{contact.email}</Typography>\r\n               </div>\r\n               </Grid>\r\n               <Hidden only={['md', 'lg']}> \r\n                   <Grid item xs={3}></Grid></Hidden>\r\n               <Grid item xs={9} md={2}>\r\n        {showAddBtn ?  \r\n         <Button className= \"loginbtn\"\r\n             style={{marginTop:\"0.7rem\",backgroundColor:lightBlue[600],color:\"white\"}}\r\n            variant=\"contained\" \r\n            onClick={sentFriendRequest}>Add friend</Button>\r\n        : \r\n        <Button className= \"loginbtn\"\r\n              style={{marginTop:\"0.7rem\",backgroundColor:grey[500],color:\"white\"}}\r\n            variant=\"contained\" \r\n            onClick={cancelFriendRequest}>Requested</Button> \r\n             }\r\n             </Grid>\r\n      </Grid>\r\n     </Paper>       \r\n   \r\n    </div>);\r\n}\r\n \r\nexport default SingleContact;","import GenericService from \"./GenericService\";\r\nclass ContactService extends GenericService {\r\n  \r\n  getAllContact = () => this.get(\"contacts/getContact\");\r\n  getSingleContact = (id) => this.get(\"contacts/get-contact/\" + id);\r\n  }\r\n\r\nlet contactService = new ContactService();\r\nexport default contactService;","import React,{useEffect,useContext} from 'react';\r\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport { isAuthenticated, logout } from \"../clientStorages/auth\";\r\n \r\n\r\nconst SideBar = ({ history }) => {\r\n     history = useHistory();\r\n    \r\n      const myId = isAuthenticated()._id;\r\n      const myProfileImg =isAuthenticated().profileImg;\r\n    \r\nconst firstName= isAuthenticated().firstName;\r\n  const lastName = isAuthenticated().lastName;\r\n  const {clientSocket,setSocket,messageEvent,roomJoin,friendReq,getRequest,frndcounter,msgCounter} = useContext(SocketContext);\r\n     const handleLogOut = (evt) => {\r\n    logout(() => {\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n  useEffect(()=>{\r\n    getRequest()\r\n  },[frndcounter])\r\n     useEffect (()=>{\r\n    roomJoin(myId)\r\n  },[]);\r\n  \r\n    return (<div class=\"wrapper\">\r\n    <div class=\"sidebar\">\r\n         <div id =\"profile_div\">\r\n        <img\r\n          src= {myProfileImg}\r\n          alt=\"Profile\"\r\n          style={{ height: \"90px\", width: \"90px\", borderRadius: \"50%\" ,cursor:\"pointer\" }}\r\n         onClick={()=>history.push('/update-my-profile-setup/'+myId)}\r\n        /> \r\n        </div>  \r\n         <h4>{firstName +\" \"+lastName}</h4>\r\n        <ul>\r\n          \r\n            <li>\r\n               \r\n                 {msgCounter >= 1 ?\r\n                 <Link to={{pathname: '/mychats/'+myId}} style={{textDecoration:\"none\"}}  >\r\n                     <i class=\"fas fa-comments\"  ><span className=\"friendCounter\">{msgCounter}</span></i> My Chats\r\n                  </Link>\r\n                  :<Link to={{pathname: '/mychats/'+myId}} style={{textDecoration:\"none\"}}  >\r\n                     <i class=\"fas fa-comments\"  ></i> My Chats\r\n                  </Link>}\r\n                 \r\n            </li>\r\n            <li> \r\n                <Link to={{pathname: `/update-my-profile-setup/${myId}`}} style={{textDecoration:\"none\"}} >\r\n                     <i class=\"fas fa-user-cog\"  ></i> Profile Setting\r\n                  </Link>\r\n            </li>\r\n            <li>\r\n              {frndcounter >=1   ?\r\n               <Link to={{pathname: '/my-contact-list/'+myId}} style={{textDecoration:\"none\"}}  >\r\n                     <i class=\"fas fa-address-book\"  ><span className=\"friendCounter\">{frndcounter}</span></i> Contacts\r\n                  </Link>:\r\n                   \r\n                <Link to={{pathname: '/my-contact-list/'+myId}} style={{textDecoration:\"none\"}}  >\r\n                     <i class=\"fas fa-address-book\"></i> Contacts\r\n                  </Link>}\r\n            </li>\r\n            \r\n            \r\n        </ul> \r\n        <div class=\"social_media\">\r\n        <button\r\n                    className=\"btn text-decoration-none btn-link\"\r\n                    onClick={handleLogOut}\r\n                  >\r\n                    <i className=\"fas fa-sign-out-alt\" ></i> Logout\r\n                  </button> \r\n          \r\n      </div>\r\n    </div>\r\n   {/*  <div class=\"main_content\">\r\n        <div class=\"header\">Welcome!! Have a nice day.</div>  \r\n        <div class=\"info\">\r\n           \r\n                </div>\r\n    </div>  */}\r\n</div>  );\r\n}\r\n \r\nexport default  withRouter(SideBar);","import React, { useEffect, useContext, useRef,useState } from \"react\";\r\nimport SingleContact from \"./SingleContact\";\r\nimport contactService from \"../../../services/contactService\";\r\nimport { Button, Grid ,Hidden,InputAdornment, TextField} from \"@material-ui/core\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport io from \"socket.io-client\";\r\nimport Header from \"./Header\";\r\nimport { grey } from '@material-ui/core/colors';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SideBar from \"./SideBar\";\r\n \r\n\r\nconst AllContact = ({match}) => {\r\n    const myId=isAuthenticated()._id;\r\n    let userEmail = isAuthenticated().email;\r\n    let history = useHistory()\r\n     const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const onChangeSearch = (event) => \r\n        setSearchTerm(event.currentTarget.value)\r\n    const [contacts, setContacts] = React.useState([]);\r\n    let roomId = useRef()\r\n    let clientSocket1 = useRef()\r\n    roomId.current = '/'+match.params.id;\r\n    const {setSocket,roomJoin,messageEvent, friendReq} = useContext(SocketContext);\r\n    window.onload = () => {\r\n       friendReq()\r\n      messageEvent()\r\n      let did = JSON.parse(localStorage.getItem('user'))._id\r\n      roomJoin(did)\r\n      clientSocket1 = io(\"http://127.0.0.1:5000\")\r\n      setSocket((s)=>{\r\n        s = clientSocket1\r\n        s.on('connect' , () => {\r\n          console.log(\"connected\",s.id);\r\n          s.emit(\"adduser\",{id:s.id, name: userEmail})\r\n          \r\n        });\r\n        return s;\r\n      })\r\n    };\r\n\r\n    const getData = () => {\r\n   friendService.getSentFriendRequest(myId)\r\n   .then((data)=>{\r\n      localStorage.setItem(\"user\",JSON.stringify(data));})\r\n   .catch((err=>{console.log(err)}))\r\n   }\r\n     \r\n  const getSingleContact = () => {\r\n    contactService.getSingleContact(myId)\r\n    .then((data) => { setContacts(data);})\r\n    .catch((err) => {console.log(err);});\r\n  };\r\n\r\n   useEffect(()=> {\r\n     getData();\r\n     getSingleContact();\r\n }, []);\r\n \r\n   useEffect(()=>{\r\n    //roomJoin(myId)\r\n    //messageEvent()\r\n   },[])\r\n    \r\n   \r\n    return ( \r\n    <div style={{height:\"100vh\"}} className=\"back_divs\"  >\r\n       <Grid container>\r\n       <Hidden only={['xs', 'sm']}>\r\n          <Grid item xs ={5} md={2}><SideBar/></Grid>\r\n          </Hidden>\r\n            <Hidden only={['md', 'lg']}>\r\n          <Grid item xs={12} ><Header/></Grid>\r\n          </Hidden>\r\n           <Grid item xs={12} md={10}>\r\n      <PageTitle name= {\"Add Friend\"}/>\r\n      {\r\n      contacts.length === 0 ? \r\n        ( <div style= {{textAlign: \"center\", height:\"100vh\",\r\n    padding: \"6rem\", fontWeight:\"bold\"}}>No User Found</div>) \r\n        :\r\n        (<div >\r\n          \r\n            <Grid container  style={{marginTop:\"0.9rem\"}}>\r\n          <Grid item xs ={1} md={1}> </Grid>\r\n          <Grid item xs ={10} md={10} >\r\n            <Grid container   style={{marginBottom:\"1rem\" }}>\r\n          <Grid item xs ={0} md={8}> </Grid>\r\n          <Grid item xs ={12} md={4}  >\r\n            <TextField\r\n                value={searchTerm}\r\n                onChange={onChangeSearch}\r\n                placeholder=\"Search by typing name\"\r\n                 \r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"end\">\r\n             <SearchIcon style={{ color: \"black\" ,marginRight:\"0.4rem\",float:\"right\"}}/>\r\n            </InputAdornment>\r\n          ),\r\n         }}\r\n            />\r\n            </Grid>\r\n            </Grid>\r\n     \r\n           { contacts.filter((contact)=>{\r\n             if(searchTerm === \"\") return contact\r\n             else if (contact.firstName.toLowerCase().startsWith(searchTerm.toLowerCase()) || contact.lastName.toLowerCase().startsWith(searchTerm.toLowerCase()) )\r\n                return contact\r\n           }).map((contact, index) => {\r\n              return contact._id === myId ? \r\n              <div></div>\r\n            : <SingleContact key={index} contact={contact}  roomId={roomId.current}/>\r\n                 \r\n            } )\r\n          }\r\n           \r\n           </Grid>\r\n          <Grid item xs={1}   md={1}></Grid>\r\n        </Grid>\r\n         \r\n         \r\n       </div> )\r\n          }\r\n        \r\n        \r\n      \r\n        </Grid>\r\n  \r\n      </Grid>\r\n             \r\n    </div> );\r\n}\r\n \r\nexport default AllContact;","import { Button,Grid,Paper,  } from \"@material-ui/core\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport { lightBlue,grey} from '@material-ui/core/colors';\r\nconst SingleFriendRequest = (props) => {\r\n  const { friendreq ,onAcceptReject} = props;\r\n  const myId=isAuthenticated()._id;\r\n  const myName =isAuthenticated().firstName + \" \" +isAuthenticated().lastName;\r\n  const myProfileImg =isAuthenticated().profileImg;\r\n  const myEmail = isAuthenticated().email;\r\n  const myGender =isAuthenticated().gender;\r\n  const myLangPreference =isAuthenticated().langPreference;\r\n  const RejectFriendRequest =()=>{\r\n     friendService.rejectRequest({friendId: friendreq.id, myId}) \r\n      .then((data) => {\r\n       onAcceptReject()\r\n       \r\n         localStorage.setItem(\"user\",JSON.stringify(data));\r\n         })\r\n     .catch((err) => {console.log(err);});\r\n  } \r\n\r\n    const AcceptFriendRequest =()=>{\r\n     friendService.acceptRequest({\r\n     friendId: friendreq.id,\r\n     friendName:friendreq.name,\r\n     friendProfileImg:friendreq.profileImg, \r\n      chatId:friendreq.email +\"/\"+myEmail,\r\n      friendEmail:friendreq.email,\r\n      friendGender:friendreq.gender,\r\n      friendLangPreference:friendreq.langPreference,\r\n      myId,myName,myProfileImg,myEmail,myGender,myLangPreference }) \r\n      .then((data) => {\r\n       onAcceptReject()\r\n         localStorage.setItem(\"user\",JSON.stringify(data));\r\n         console.log(data);\r\n         })\r\n     .catch((err) => {console.log(err);});\r\n  } \r\n\r\n  return (\r\n      <div>\r\n   <Paper style={{padding:'20px 10px', marginBottom:\"1rem\" }}  >\r\n      <Grid container style={{display:\"flex\"}}>\r\n           <Grid item    xs ={12} sm={12} md={9}>\r\n             <img src={friendreq.profileImg} \r\n       style={{ marginRight:\"0.5rem\",height: \"60px\", width: \"60px\",borderRadius: \"50%\",display:\"inline\",padding:\"0.2rem\" }} alt=\"img\"/>\r\n       <p  className=\"user_names\" >{friendreq.name}</p>\r\n       \r\n           </Grid>\r\n           <Grid item   xs={12} sm={12} md={3}  >\r\n             <Button className= \"loginbtn\"\r\n          style={{ backgroundColor:lightBlue[700],color:\"white\",margin:\"0.4rem\" }}\r\n        variant=\"contained\" \r\n        size=\"medium\" \r\n        onClick ={AcceptFriendRequest} \r\n        >Accept</Button>\r\n        <Button className= \"loginbtn\"\r\n         style={{  backgroundColor:grey[600],color:\"white\" }}\r\n        variant=\"contained\" \r\n        onClick ={RejectFriendRequest} \r\n        >Reject</Button>\r\n           </Grid>\r\n           </Grid>\r\n           \r\n      \r\n       </Paper>\r\n </div>\r\n  )\r\n}\r\nexport default SingleFriendRequest;","import React, { useEffect, useContext, useRef,useState } from \"react\";\r\nimport SingleFriendRequest from \"./SingleFriendRequest\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport { Button, Grid,Hidden,InputAdornment, TextField  } from \"@material-ui/core\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport io from \"socket.io-client\";\r\nimport SideBar from \"./SideBar\";\r\n \r\nconst AllFriendRequest = ({match}) => {\r\n     const myId=isAuthenticated()._id;\r\n     const [friendreqs, setFrndRequest] =React.useState([]);\r\n      const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const onChangeSearch = (event) => \r\n        setSearchTerm(event.currentTarget.value)\r\n     let clientSocket1 = useRef()\r\n     let userEmail = isAuthenticated().email\r\n     const {setSocket,roomJoin,messageEvent,friendReq,getRequest,acceptRejectCounter} = useContext(SocketContext);\r\n     let roomId = useRef()\r\n     roomId.current = '/'+match.params.id\r\n     let history = useHistory()\r\n\r\n     window.onload = () => {\r\n        friendReq()\r\n       messageEvent()\r\n       getRequest()\r\n      let did = JSON.parse(localStorage.getItem('user'))._id\r\n      roomJoin(did)\r\n      clientSocket1 = io(\"http://127.0.0.1:5000\")\r\n      setSocket((s)=>{\r\n        s = clientSocket1\r\n        s.on('connect' , () => {\r\n          console.log(\"connected\",s.id);\r\n          s.emit(\"adduser\",{id:s.id, name: userEmail.current})\r\n          \r\n        });\r\n        return s;\r\n      })\r\n    };\r\n\r\n     const getFriendRequest = () => \r\n     {\r\n      friendService.getFriendRequest(myId).then((data)=>{\r\n                setFrndRequest(data)\r\n                acceptRejectCounter();\r\n              })\r\n            .catch((err=>{console.log(err)}))\r\n     }\r\n    useEffect(getFriendRequest , []);\r\n\r\n    useEffect(()=>{\r\n      //roomJoin(myId)\r\n      \r\n     },[])\r\n\r\n   /*  useEffect(()=>{\r\n      if(clientSocket){\r\n        clientSocket.emit(\r\n          \"myChatsRoom\",\r\n          { myChatsRoom : roomId.current},\r\n          ({error,room}) => {\r\n            if (!error) {\r\n              console.log(\"joined room with id\", room);\r\n            } else {\r\n              console.log(\"error joining room\", error);\r\n            }\r\n          }\r\n        );\r\n      }\r\n     },[]) */\r\n\r\n     return ( \r\n    <div  style={{height:\"100vh\"}} className=\"back_divs\">\r\n     <Grid container>\r\n       <Hidden only={['xs', 'sm']}>\r\n          <Grid item xs ={5} md={2}><SideBar/></Grid>\r\n          </Hidden>\r\n            <Hidden only={['md', 'lg']}>\r\n          <Grid item xs={12} ><Header/></Grid>\r\n          </Hidden>\r\n           <Grid item xs={12} md={10}>\r\n      <PageTitle name= {\"Friend Requests\"}/>\r\n      {\r\n      friendreqs.length === 0 ? \r\n        ( <div style= {{textAlign: \"center\",height:\"100vh\",\r\n    padding: \"6rem\", fontWeight:\"bold\"}}>No Friend Request</div>) \r\n        :\r\n        (\r\n          <div>\r\n        <Grid container   style={{marginTop:\"0.9rem\" }}>\r\n          <Grid item xs ={1} md={1}> </Grid>\r\n          <Grid item xs ={10} md={10}>\r\n            <Grid container   style={{marginBottom:\"1rem\" }}>\r\n          <Grid item xs ={0} md={7}> </Grid>\r\n          <Grid item xs ={12} md={5}  >\r\n            <TextField\r\n                value={searchTerm}\r\n                onChange={onChangeSearch}\r\n                placeholder=\"Search by typing name\"\r\n                 \r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"end\">\r\n             <SearchIcon style={{ color: \"black\" ,marginRight:\"0.4rem\",float:\"right\"}}/>\r\n            </InputAdornment>\r\n          ),\r\n         }}\r\n            />\r\n            </Grid>\r\n              \r\n            </Grid>\r\n          {\r\n          friendreqs.filter((friendreq)=>{\r\n             if(searchTerm == \"\") return friendreq\r\n             else if (friendreq.name.toLowerCase().startsWith(searchTerm.toLowerCase()))\r\n                return friendreq\r\n           }).map((friendreq, index) => (\r\n               <SingleFriendRequest key={index} friendreq={friendreq} onAcceptReject={getFriendRequest}/> )\r\n          )}\r\n           \r\n          </Grid>\r\n          <Grid item xs={1}   md={10}></Grid>\r\n        </Grid>\r\n        </div> )\r\n         \r\n      }\r\n         </Grid>\r\n  \r\n      </Grid>\r\n    </div> );\r\n\r\n}\r\nexport default AllFriendRequest;","import { Button,Grid,Paper } from \"@material-ui/core\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport React from \"react\";\r\nimport {   red  ,lightGreen} from '@material-ui/core/colors';\r\nconst SingleFriend = (props) => {\r\n    const { friend ,onRemove, chatRec} = props;\r\n    console.log(chatRec)\r\n    const myId=isAuthenticated()._id;\r\n    //const myEmail= isAuthenticated().email;\r\n    const friendEmail =  friend.email;\r\n     const RemoveFriend =()=>{\r\n         friendService.deleteFriend({friendId: friend.id, myId}) \r\n          .then((data) => {\r\n            //console.log(data)\r\n           onRemove()\r\n             localStorage.setItem(\"user\",JSON.stringify(data));\r\n             })\r\n         .catch((err) => {console.log(err);});\r\n      }\r\n    const chatButtonHandler = (fr)=>{\r\n      console.log(\"Fr\",fr)\r\n      console.log(\"pth\",\"/chat/\"+friendEmail+'/ '+fr.id)\r\n      localStorage.setItem(\"friendId\",fr.id)\r\n      localStorage.setItem(\"recName\",fr.name)\r\n      localStorage.setItem(\"recLang\",fr.langPreference)\r\n      localStorage.setItem(\"profileUrl\",fr.profileImg)\r\n      history.push(\"/chat/\"+friendEmail+' '+fr.id)\r\n    } \r\n    let history = useHistory()\r\n    return (\r\n       <Paper style={{padding:  '20px 10px', marginBottom:\"1rem\" }}  >\r\n         <Grid container style={{display:\"flex\"}}>\r\n           <Grid item    xs ={12} sm={12} md={9}>\r\n              <img src={friend.profileImg}\r\n          style={{  marginRight:\"0.5rem\",height: \"60px\", width: \"60px\", borderRadius: \"20%\",display:\"inline\",padding:\"0.2rem\" }} alt=\"img\"/>\r\n              <p   className=\"user_names\"  >{friend.name}</p>\r\n           </Grid>\r\n           <Grid item   xs={12} sm={12} md={3}  >\r\n             <Button className= \"loginbtn\"\r\n              style={{ backgroundColor:lightGreen[700],color:\"white\",margin:\"0.4rem\" }}\r\n            variant=\"contained\" \r\n            size=\"medium\"\r\n            onClick={()=> chatButtonHandler(friend)} \r\n            >Chat</Button>\r\n \r\n            <Button className= \"loginbtn\"\r\n             style={{  backgroundColor:red[400],color:\"white\" }}\r\n            variant=\"contained\" \r\n             onClick ={RemoveFriend}\r\n            >Remove</Button>\r\n           </Grid>\r\n         </Grid>\r\n             \r\n        \r\n      \r\n               </Paper> \r\n   \r\n     );\r\n}\r\n \r\nexport default SingleFriend;","import GenericService from \"./GenericService\";\r\nclass UserService extends GenericService{\r\n\r\n    getUsers = () => {\r\n        return this.get(\"users\");\r\n    }\r\n    getUserByEmail = (data) =>{\r\n        return this.post(\"users/userbyemail\",data);\r\n    }\r\n    getUserNameByEmail = (id) =>{\r\n        return this.get(\"users/usernamebyemail/\"+id);\r\n    }\r\n    \r\n}\r\n\r\nlet userservice = new UserService();\r\nexport default userservice;","import React ,{createContext, useRef,useEffect,useState} from 'react'\r\nimport chatservice from \"../services/ChatService\"\r\nimport userservice from \"../services/UserService\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const MyChatsContext = createContext();\r\nexport function MyChatsProvider({userId,children}) {\r\n    const [chatRecipients,setChatRecipients] = useState([])\r\n    let recData = []\r\n    let recMsgs = []\r\n    let msgType = []\r\n    let recName = []\r\n    let recId=[]\r\n    let imgUrl =[]\r\n    useEffect(()=>{\r\n        //userId.current = localStorage.getItem(\"userId\")\r\n        if(userId !== undefined){\r\n        getRecData(userId,undefined)\r\n        //console.log(userId)\r\n        }\r\n        console.log(\"undefined\")\r\n        \r\n    },[userId])\r\n\r\n    const getRecData = (uId)=>{\r\n         recData = []; recName =[]; recMsgs = []; msgType = []; imgUrl=[]; recId=[]\r\n        //console.log(\"in getdata\")\r\n        chatservice.getChatRecipients(uId).then((data)=>{    \r\n            if(data.length>0){\r\n                //console.log(\"data getchat\",data)\r\n                /* dataFromDb.push(data)\r\n                console.log(\"data from db getchat\",dataFromDb) */\r\n                data.map((rec) =>{\r\n                    //console.log('single rec',rec)\r\n                    return recData.push(rec)\r\n                })\r\n                console.log(\"rec data\",recData)\r\n                recData = Array.from(new Set(recData));\r\n                console.log(\"rec data updated\",recData)\r\n                setChatRecipients((r)=>{\r\n                    r.Rname=recData\r\n                    //console.log(chatRecipients)\r\n                    return r\r\n                })\r\n                chatRecipients.Rname.map((r)=>{\r\n                    //console.log(\"r\",r)\r\n                    chatservice.getLastMsg(uId, r)\r\n                    .then((data1)=>{\r\n                        //console.log(\"data\",data1.type)\r\n                        recMsgs.push(data1.lastMsg)\r\n                        msgType.push(data1.type)\r\n                        //return {recMsgs,msgType}\r\n                    })\r\n                    .catch((err)=>console.log(err))\r\n\r\n                    userservice.getUserByEmail(r).then((data2)=>{\r\n                        //console.log(\"data 2\",data2)\r\n                        recId.push(data2[0]._id)\r\n                        imgUrl.push(data2[0].profileImg)\r\n                        recName.push(data2[0].firstName+' '+data2[0].lastName)\r\n                        setChatRecipients((r)=>{\r\n                            r.lastMsg = recMsgs\r\n                            r.msgType = msgType\r\n                            r.recId = recId\r\n                            r.imgUrl= imgUrl\r\n                            r.name = recName\r\n                            console.log(chatRecipients)\r\n                            return r\r\n                        })\r\n                       /*  if(cb === undefined)\r\n                            console.log(\"do nothing\")\r\n                        else\r\n                            cb() */\r\n                    }).catch((err)=>console.log(err))\r\n                })\r\n                \r\n            }\r\n            else\r\n                console.log(\"no data\")\r\n            \r\n            })\r\n            .catch((err)=>console.log(err))\r\n            return chatRecipients\r\n    }\r\n\r\n    /* useEffect(()=>{\r\n        \r\n    },[chatRecipients]) */\r\n    //getRecData()\r\n  const value = {\r\n      chatRecipients : chatRecipients,\r\n      getRecData : getRecData,\r\n      setRecipients : setChatRecipients,\r\n      /* setuuIdFunc : setuuId,\r\n      uuId : uuId */\r\n  }\r\n  return (\r\n    <MyChatsContext.Provider value={value}>\r\n      {children}\r\n    </MyChatsContext.Provider>\r\n  )\r\n}\r\n\r\n","import React, { useEffect,useRef,useContext,useState } from \"react\";\r\nimport SingleFriend from \"./SingleFriend\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport { Button, Grid,Hidden,InputAdornment, TextField  } from \"@material-ui/core\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport {MyChatsContext} from '../../../context/MyChatsContext';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport io from \"socket.io-client\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SideBar from \"./SideBar\";\r\n\r\nconst AllFriends = (props) => {\r\n     const myId=isAuthenticated()._id;\r\n     const [friends, setFriends] =React.useState([]);\r\n     let history = useHistory()\r\n      const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const onChangeSearch = (event) => \r\n        setSearchTerm(event.currentTarget.value)\r\n     let clientSocket1 = useRef()\r\n      const {setSocket,roomJoin, messageEvent, friendReq} =  useContext(SocketContext);\r\n     let userEmail = useRef()\r\n     userEmail.current = JSON.parse(localStorage.getItem(\"user\")).email\r\n\r\n     window.onload = () => {\r\n         friendReq()\r\n       messageEvent()\r\n      let did = JSON.parse(localStorage.getItem('user'))._id\r\n      roomJoin(did)\r\n      clientSocket1 = io(\"http://127.0.0.1:5000\")\r\n      setSocket((s)=>{\r\n        s = clientSocket1\r\n        s.on('connect' , () => {\r\n          console.log(\"connected\",s.id);\r\n          s.emit(\"adduser\",{id:s.id, name: userEmail.current})\r\n          \r\n        });\r\n        return s;\r\n      })\r\n    };\r\n\r\n     const getAllMyFriends = () => \r\n     {\r\n       friendService.getAllFriends(myId)\r\n        .then((data)=>{\r\n         setFriends(data);})\r\n      .catch((err=>{console.log(err)}))\r\n   \r\n     }\r\n    useEffect(()=>{\r\n\r\n      getAllMyFriends()\r\n      \r\n    }, []);\r\n    useEffect(()=>{\r\n      //roomJoin(myId)\r\n      \r\n     },[])\r\n\r\n     useEffect(()=>{\r\n      //messageEvent()\r\n      \r\n     },[])\r\n\r\n    useEffect(()=>{\r\n      /* if(clientSocket!==null){\r\n        console.log(props.clientSocket)\r\n        clientSocket.emit(\"adduser\",{id:props.clientSocket.id, name: userEmail.current})\r\n      }\r\n      else{\r\n        console.log(\"no socket\")\r\n      }  */\r\n    },[])\r\n\r\n     return ( \r\n    <div style={{height:\"100vh\"}} className=\"back_divs\">\r\n      <Grid container>\r\n       <Hidden only={['xs', 'sm']}>\r\n          <Grid item xs ={5} md={2}><SideBar/></Grid>\r\n          </Hidden>\r\n            <Hidden only={['md', 'lg']}>\r\n          <Grid item xs={12} ><Header/></Grid>\r\n          </Hidden>\r\n           <Grid item xs={12} md={10}>\r\n      <PageTitle name= {\"My Friends\"}/>\r\n     {\r\n      friends.length === 0 ? \r\n        ( <div style= {{textAlign: \"center\",height:\"100vh\",\r\n    padding: \"6rem\", fontWeight:\"bold\"}}>No Friend Found</div>) \r\n        :\r\n        (\r\n          <div>\r\n             \r\n        <Grid container   style={{marginTop:\"0.9rem\", display :\"flex\"}}>\r\n          <Grid item xs ={1} md={1}> </Grid>\r\n          <Grid item xs ={10} md={10}>\r\n            <Grid container   style={{marginBottom:\"1rem\"}}>\r\n          <Grid item xs ={0} md={7}> </Grid>\r\n          <Grid item xs ={12} md={5}  >\r\n            <TextField\r\n                value={searchTerm}\r\n                onChange={onChangeSearch}\r\n                placeholder=\"Search by typing name\"\r\n                 \r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"end\">\r\n             <SearchIcon style={{ color: \"black\" ,marginRight:\"0.4rem\",float:\"right\"}}/>\r\n            </InputAdornment>\r\n          ),\r\n         }}\r\n            />\r\n            </Grid>\r\n            </Grid>\r\n     \r\n          {\r\n          friends.filter((friend)=>{\r\n             if(searchTerm == \"\") return friend\r\n             else if (friend.name.toLowerCase().startsWith(searchTerm.toLowerCase()))\r\n                return friend\r\n           }).map((friend, index) => (\r\n               <SingleFriend key={index} friend={friend} onRemove={getAllMyFriends} /> )\r\n          )}\r\n            \r\n          </Grid>\r\n          <Grid item xs={1}   md={1}></Grid>\r\n        </Grid>\r\n         </div>)\r\n         \r\n      }\r\n      </Grid>\r\n  \r\n      </Grid>\r\n \r\n    </div> );\r\n\r\n}\r\nexport default AllFriends;","import React, { useState, useEffect,useContext, useRef } from \"react\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport Select from \"react-select\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport { grey, cyan} from '@material-ui/core/colors';\r\nimport {Button, Grid, Hidden} from \"@material-ui/core\";\r\nimport Header from \"./Header\";\r\nimport axios from 'axios';\r\nimport accountService from \"../../../services/accountService\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport {SocketContext} from '../../../context/SocketContext';\r\n \r\nimport io from \"socket.io-client\";\r\nimport Webcam from \"react-webcam\";\r\nimport SideBar from \"./SideBar\";\r\nconst useStyles = makeStyles({\r\n  \r\n  textfield: {\r\n    marginTop: \"2rem\",\r\n  },\r\n  Submitbtn: {\r\n    marginTop: \"0.6rem\",\r\n  },\r\n});\r\n\r\n\r\n\r\nconst UpdateProfileSetup = ( ) => {\r\n    const classes = useStyles();\r\n    const myId=isAuthenticated()._id;\r\n    let uId = JSON.parse(localStorage.getItem(\"user\")).email;\r\n    const {setSocket,roomJoin,messageEvent, friendReq} = useContext(SocketContext);\r\n    let clientSocket1 = useRef()\r\n    const webcamRef = React.useRef(null);\r\n    const [capturedPic, setCapturedPic]=React.useState(false);\r\nconst options = [\r\n  { label: 'Afrikaans',value:'af' },\r\n  { label: 'Albanian',value:'sq'},\r\n  { label: 'Amharic',value:'am'},\r\n  { label: 'Arabic',value:'ar'},\r\n  { label: 'Armenian',value:'hy'},\r\n  { label: 'Azerbaijani',value:'az'},\r\n  { label: 'Basque',value:'eu'},\r\n  { label: 'Belarusian',value:'be'},\r\n  { label: 'Bengali',value:'bn'},\r\n  { label: 'Bosnian',value:'bs'},\r\n  { label: 'Bulgarian',value:'bg'},\r\n  { label: 'Catalan',value:'ca'},\r\n  { label: 'Cebuano',value:'ceb'},\r\n  { label: 'Chichewa',value:'ny'},\r\n  { label: 'Chinese',value:'zh-cn'},\r\n  { label: 'Corsican',value:'co'},\r\n  { label: 'Croatian',value:'hr'},\r\n  { label: 'Czech',value:'cs'},\r\n  { label: 'Danish',value:'da'},\r\n  { label: 'Dutch',value:'nl'},\r\n  { label: 'English',value:'en'},\r\n  { label: 'Esperanto',value:'eo'},\r\n  { label: 'Estonian',value:'et'},\r\n  { label: 'Filipino',value:'tl'},\r\n  { label: 'Finnish',value:'fi'},\r\n  { label: 'French',value:'fr'},\r\n  { label: 'Danish',value:'da'},\r\n  {label: 'Frisian',value: \"fy\"},\r\n  {label: 'Galician',value: \"gl\"},\r\n  {label: 'Georgian',value: \"ka\"},\r\n  {label: 'German',value: \"de\"},\r\n  {label: 'Greek',value: \"el\"},\r\n  {label: 'Gujarati',value: \"gu\"},\r\n  {label: 'Haitian creole',value: \"ht\"},\r\n  {label:'Hausa',value: \"ha\"},\r\n  {label:'Hawaiian',value: \"haw\"},\r\n  {label:'Hebrew',value: \"iw\"},\r\n  {label: 'Hindi',value: \"hi\"},\r\n  {label:'Hmong',value: \"hmn\"},\r\n  {label:'Hungarian',value: \"hu\"},\r\n  {label:'Icelandic',value: \"is\"},\r\n  {label:'Igbo',value: \"ig\"},\r\n  {label:'Indonesian',value: \"id\"},\r\n  {label:'Irish',value: \"ga\"},\r\n  {label:'Italian',value: \"it\"},\r\n  {label:'Japanese',value: \"ja\"},\r\n  {label:'Javanese',value: \"jw\"},\r\n  {label:'Kannada',value: \"kn\"},\r\n  {label:'Kazakh',value: \"kk\"},\r\n  {label:'Khmer',value:'km'},\r\n  {label:'Korean',value:'ko'},\r\n  {label:'Kurdish',value:'ku'},\r\n  {label: 'Kyrgyz',value: \"ky\"},\r\n  {label: 'Lao',value: \"lo\"},\r\n  {label: 'Latin',value: \"la\"},\r\n  {label: 'Latvian',value: \"lv\"},\r\n  {label: 'Lithuanian',value: \"lt\"},\r\n  {label: 'Luxembourgish',value: \"lb\"},\r\n  {label: 'Macedonian',value: \"mk\"},\r\n  {label:'Malagasy',value: \"mg\"},\r\n  {label:'Malay',value: \"ms\"},\r\n  {label:'Malayalam',value: \"ml\"},\r\n  {label: 'Maltese',value: \"mt\"},\r\n  {label:'Maori',value: \"mi\"},\r\n  {label:'Marathi',value: \"mr\"},\r\n  {label:'Mongolian',value: \"mn\"},\r\n  {label:'Myanmar (burmese)',value: \"my\"},\r\n  {label:'Nepali',value: \"ne\"},\r\n  {label:'Norwegian',value: \"no\"},\r\n  {label:'Odia',value: \"or\"},\r\n  {label:'Pashto',value: \"ps\"},\r\n  {label:'Persian',value: \"fa\"},\r\n  {label:'Polish',value: \"pl\"},\r\n  {label:'Portuguese',value: \"pt\"},\r\n  {label:'Punjabi',value: \"pa\"},\r\n  {label :'Romanian', value:\"ro\"},\r\n  {label :'Russian', value:\"ru\"},\r\n  {label:'Samoan',value: \"sm\"},\r\n  {label:'Scots gaelic',value: \"gd\"},\r\n  {label:'Serbian',value: \"sr\"},\r\n  {label:'Sesotho',value: \"st\"},\r\n  {label:'Shona',value: \"sn\"},\r\n  {label:'Sindhi',value: \"sd\"},\r\n  {label:'Sinhala',value: \"si\"},\r\n  {label:'Slovak',value: \"sk\"},\r\n  {label:'Slovenian', value:\"sl\"},\r\n  {label:'Somali', value:\"so\"},\r\n  {label:'Spanish', value:'es' },\r\n  {label:'Sundanese',value: \"su\"},\r\n  {label:'Swahili',value: \"sw\"},\r\n  {label:'Swedish',value: \"sv\"},\r\n  {label:'Tajik',value: \"tg\"},\r\n  {label:'Tamil',value: \"ta\"},\r\n  {label:'Telugu',value: \"te\"},\r\n  {label:'Thai',value: \"th\"},\r\n  {label:'Turkish',value: \"tr\"},\r\n  {label :'Ukrainian', value:\"uk\"},\r\n  {label:'Urdu',value: \"ur\"},\r\n  {label :'Uyghur', value:\"ug\"},\r\n  {label:'Uzbek', value:'uz' },\r\n  {label:'Vietnamese',value: \"vi\"},\r\n  {label :'Welsh', value:\"cy\"},\r\n  {label:'Xhosa',value: \"xh\"},\r\n  {label :'Yiddish', value:\"yi\"},\r\n  {label:'Yoruba', value:'yo' },\r\n  {label:'Zulu',value: \"zu\"},\r\n  \r\n];\r\n \r\n    const [values, setValues] = useState({\r\n    img: \"\",\r\n    language:\"\",\r\n    errorMessage: \"\",\r\n    successMsg:\"\",\r\n    infoMessage:\"\",\r\n    loading: false,\r\n  });\r\n  const { img,language, successMsg, errorMessage,infoMessage, loading } = values;\r\n \r\n   window.onload = () => {\r\n    friendReq()\r\n    messageEvent()\r\n    let did = JSON.parse(localStorage.getItem('user'))._id\r\n    roomJoin(did)\r\n    clientSocket1 = io(\"http://127.0.0.1:5000\")\r\n    setSocket((s)=>{\r\n      s = clientSocket1\r\n      s.on('connect' , () => {\r\n        console.log(\"connected\",s.id);\r\n        s.emit(\"adduser\",{id:s.id, name: uId})\r\n      });\r\n      return s;\r\n    })\r\n  };\r\n\r\n useEffect(() => {\r\n     accountService.getMyAccount(myId).then((data) => {\r\n     setValues({ ...values , img: data.profileImg, language:data.langPreference});\r\n    }).catch((err) => {\r\n           setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n  }, []);\r\n\r\nconst resizeFile = (file) => new Promise(resolve => {\r\n    Resizer.imageFileResizer(file, 300, 300, 'JPEG', 100, 0,\r\n    uri => {resolve(uri);},'base64' );\r\n});\r\nconst capture =  React.useCallback(() => {\r\n   try{\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n       setValues({...values, infoMessage: \"Picture Captured\"}); \r\n       setCapturedPic(true);\r\n       const data = new FormData();\r\n       data.append(\"file\", imageSrc);\r\n       axios.post(\"http://127.0.0.1:5000/webcam-face-detection\",data)\r\n         .then(async (response) => {\r\n          setValues({ ...values , errorMessage :\"\", successMsg:response.data.successMessage})\r\n           setValues({...values, infoMessage: \"Loading.... \"});\r\n           data.append(\"file\", imageSrc);\r\n           data.append(\"upload_preset\", \"TalkSee\");\r\n          fetch(\"https://api.cloudinary.com/v1_1/fariha31/image/upload\",\r\n              { method: \"PUT\",\r\n                body: data,\r\n             } ).then(response => response.json())\r\n      .then(data =>   setValues({ ...values , img: data.url}))\r\n      .catch(err => console.error('Error:', err));;   \r\n           }\r\n        )\r\n         }\r\n catch(err)\r\n     {setValues({...values, errorMessage: \"error in uploading photo\"}); }\r\n    \r\n    },\r\n    [webcamRef]\r\n  );\r\n const uploadImage = async (e) => {\r\n  try {\r\n           const imageFile = e.target.files[0];\r\n           const data = new FormData();\r\n           data.append(\"file\", imageFile);\r\n           axios.post(\"http://127.0.0.1:5000/\",data).\r\n           then(async (response) => {\r\n           setValues({ ...values , errorMessage :\"\", successMsg:response.data.successMessage})\r\n            const compressedImage = await resizeFile(imageFile);\r\n           setValues({...values, infoMessage: \"Loading....\"});\r\n           data.append(\"file\", compressedImage);\r\n           data.append(\"upload_preset\", \"TalkSee\");\r\n           const res = await fetch(\"https://api.cloudinary.com/v1_1/fariha31/image/upload\",\r\n              { method: \"PUT\",\r\n                body: data,\r\n             } );   \r\n           const file =  await res.json();\r\n           setValues({ ...values , img: file.secure_url});\r\n        })\r\n        .catch((err) => {\r\n            setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n      }\r\n catch(err)\r\n     {setValues({...values, errorMessage: \"error in uploading photo\"}); }\r\n}\r\nconst updateProfile =()=>{\r\n  accountService.updateProfileSetup(myId,{profileImg: img, langPreference: language})\r\n .then((response) => {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.userData));\r\n          setValues({\r\n            ...values,\r\n            errorMessage: false,\r\n            successMsg: response.successMessage,\r\n            loading: false,\r\n          });\r\n           \r\n        })\r\n         .catch((err) => {\r\n           setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n}\r\n \r\n  const ProfilePage = () =>( \r\n    <Grid container>\r\n      <Grid item xs={1} sm={4} md={4}></Grid>\r\n      <Grid item xs={10} sm={4} md={4}>\r\n  <div className=\"profile-page\">\r\n      <div className=\"profile-container\">\r\n          <div className=\"img-holder\">\r\n             <img src={img} className=\"profile-img\"/>\r\n              </div>\r\n             <input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={uploadImage}  />\r\n             <div className=\"label\">\r\n            <label className=\"image-upload\" htmlFor=\"input\">\r\n\t\t\t\t\t\t<i className=\"material-icons\">add_photo_alternate</i>\r\n\t\t\t\t\t\tChoose Profile Photo\r\n\t\t\t\t\t</label>\r\n                 </div> \r\n             <div className=\"label\">   \r\n             <button className=\"take-photo loginbtn\"  data-toggle=\"modal\" data-target=\"#exampleModalCenter\" onClick={()=>setCapturedPic(false)}>\r\n               <i className=\"material-icons\" style ={{marginRight:\"0.2rem\"}}>photo_camera</i>\r\n               Take Photo</button> \r\n              </div>\r\n              <Select\r\n                    style={{ width: 210, padding: \"0.4rem\" }}\r\n                    placeholder=\"Select Language ---\"\r\n                    value={options.find(c => c.value === language)}\r\n                    className={classes.textfield}\r\n                    options={options}\r\n                    onChange={(e) => { \r\n                      setValues({\r\n                        ...values,\r\n                        language:e.value ,\r\n                      });\r\n                      \r\n                    }}\r\n                  />\r\n                   <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              fontSize:\"1rem\",\r\n              borderRadius:\"0.5rem\" , \r\n              marginTop: \"1rem\",\r\n              marginBottom: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n              textTransform:\"capitalize\"\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={updateProfile}\r\n            \r\n          >\r\n            Update Profile\r\n          </Button>\r\n                   \r\n      </div> \r\n                \r\n  \r\n<div className=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div className=\"modal-content\">\r\n      <div className=\"modal-header\">\r\n        <h3 className=\"modal-title\" id=\"exampleModalLongTitle\">Take Photo</h3>\r\n        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <div  className=\"webcam-container\">\r\n         <Webcam  \r\n        audio={false}\r\n        height= {200}\r\n       width ={460}\r\n        ref={webcamRef}\r\n        screenshotFormat=\"image/jpeg\" />\r\n        </div>\r\n      </div>\r\n       \r\n        {capturedPic ? (<div className=\"modal-footer\"> \r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        </div> ):\r\n        (<div className=\"modal-footer\"> \r\n        <button  className=\"take-photo loginbtn\" onClick ={capture}>\r\n          <i className=\"material-icons\" style ={{marginRight:\"0.2rem\"}}>\r\n            photo_camera</i>Capture photo</button> </div>)\r\n        }\r\n    </div>\r\n  </div>\r\n</div>             \r\n  </div>\r\n  </Grid>\r\n  <Grid item xs={1} sm={4} md={3}></Grid>\r\n  </Grid>\r\n)\r\nreturn (\r\n <div  style={{height:\"100vh\"}} className=\"back_divs\">    \r\n    {loading && <LinearBuffer />}\r\n        <Grid container>\r\n          <Hidden only={['xs', 'sm']}>\r\n          <Grid item     md={2}><SideBar/></Grid>\r\n          </Hidden>\r\n           <Hidden only={['md', 'lg']}>\r\n          <Grid item xs={12} sm={12}><Header/></Grid>\r\n          </Hidden>\r\n       <Grid item  xs={12} sm={12} md={10}>\r\n     <PageTitle name= {\"Update Profile \"}/>\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={3000} />\r\n      )}\r\n       {infoMessage && (\r\n        <AlertBar type=\"info\" message={infoMessage} autoClose={8000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={2500} />\r\n      )}\r\n      {ProfilePage()}\r\n      </Grid>\r\n       </Grid>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default UpdateProfileSetup;\r\n","import React,{useContext,useState} from \"react\";\r\nimport \"./chat.css\"\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport \"video-react/dist/video-react.css\"\r\nimport { Button } from \"@material-ui/core\";\r\nimport chatservice from \"../../services/ChatService\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Typography } from '@material-ui/core';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { DeletePermission } from \"../../context/DeletePermissionContext\";\r\n\r\n\r\nconst DeleteMsg = (props) => {\r\n \r\n   var boxchecked = JSON.parse(localStorage.getItem(\"deletion\"));\r\n    const [open, setOpen] = useState(true);\r\n     const { dispatch } = useContext(DeletePermission);\r\n    const [checked , setChecked] = useState(boxchecked.state)\r\n    const handleClose = () => {\r\n        props.setShow(false);\r\n    };\r\n\r\n    const checkedHandler = (e)=>{\r\n        console.log(e.target.checked)\r\n        setChecked(e.target.checked)\r\n      dispatch({ type: \"updatePermission\", value: e.target.checked })\r\n    }\r\n\r\n    const deleteMsgHandler = (msgId) =>{\r\n        console.log(\"mid in deleteMsg\",msgId)\r\n        chatservice.deleteMessage(msgId).then((res)=>{\r\n          console.log(\"response: \",res)\r\n          props.setShow(false)\r\n          props.getData()\r\n        })\r\n        .catch((err)=>  console.log(err))\r\n      \r\n       }\r\n\r\n       return (\r\n         \r\n        <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\"><WarningIcon  style={{color:\"red\",marginRight:\"0.3rem\",paddingBottom:'0.3rem'}}/><p style={{fontWeight:\"bold\",display:\"inline\" }}>Delete Warning</p></DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            This message will be permanently deleted. Are you sure you want to continue?\r\n          </DialogContentText>\r\n          <div>\r\n          <input type='checkbox' value = {checked}  defaultChecked={checked} onClick={(e)=>checkedHandler(e)}/>\r\n          <p style={{color: \"black\", fontSize: '16px',display:\"inline\",marginLeft:\"0.7rem\"}}>Do not ask me again?</p>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}  style={{backgroundColor:\"gray\",color:\"white\"}}>\r\n            No\r\n          </Button>\r\n          <Button onClick={()=>deleteMsgHandler(props.msgId)}  style={{backgroundColor:\"#0e7be9\",color:\"white\"}}>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog> \r\n     );\r\n}\r\n \r\nexport default DeleteMsg;","import React, {useState,useRef} from \"react\";\r\nimport \"./chat.css\"\r\nimport { Player } from 'video-react';\r\nimport \"video-react/dist/video-react.css\"\r\nimport {  Grid, Button } from \"@material-ui/core\";\r\nimport DeleteMessage from './DeleteMsg'\r\nimport chatservice from \"../../services/ChatService\";\r\nexport default function SettingMessage(props) {\r\n\r\n  var boxchecked = JSON.parse(localStorage.getItem(\"deletion\"));\r\n  const [open, setOpen] = React.useState(false);\r\n  const [show,setShow] = React.useState(false)\r\n  const [messageId, setId] = useState()\r\n \r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  let elem = null;\r\n  let indexOfTerm = []\r\n  let msgArr = []\r\n  \r\n  const handleClickOpen= (msgId)=>{\r\n    if(boxchecked.state === true){\r\n      console.log(\"mid in settingmsg1\",msgId);\r\n      setShow(false)\r\n         chatservice.deleteMessage(msgId).then((res)=>{\r\n        console.log(\"response: \",res)\r\n        props.getData()\r\n      })\r\n      .catch((err)=>  console.log(err))\r\n   }\r\n   else{\r\n  setShow(true)\r\n  console.log(\"mid in settingmsg2\",msgId);\r\n  setId(msgId)}\r\n  }\r\n\r\n  if (props.message.to === props.user) {\r\nconsole.log(props.message.msgId)\r\n     elem = (\r\n      <div >\r\n        <div className='incoming_msg_img'>\r\n          \r\n        </div>\r\n        <Grid container >\r\n              <Grid item xs={6} md={3}>  \r\n              <div  style={{marginLeft:\"15px\",marginTop:\"12px\",marginBottom:\"8px\"}}> \r\n                <Player   >\r\n                 <source src={props.message.messageVideo} />\r\n              </Player>\r\n\r\n              \r\n                </div>\r\n                </Grid>\r\n              <Grid item xs={6} md={9}  >  {\r\n            props.isDel ?\r\n            <Button className=\"Allbtn\"  style={{textTransform:\"capitalize\" ,marginTop:\"0.8rem\", color:\"#EC5454\",fontSize:\"1.2rem\"}}>\r\n              <i class=\"fas fa-trash-alt\"   onClick={()=>handleClickOpen(props.message.msgId)}></i>\r\n            </Button>\r\n\r\n            : null\r\n          }</Grid> \r\n              </Grid>\r\n               <div class=\"chat-message is-received\">\r\n                <div class=\"message-block\">\r\n               <div class=\"message-text\">{props.message.messageBody}</div>\r\n                   <span className=\"received_time_date\"> {props.message.time}</span>\r\n                </div>\r\n                </div>\r\n      </div>\r\n    );\r\n  \r\n  }\r\n  else if (props.message.from === props.user) {\r\n    console.log(props.message.msgId)\r\n    elem = (\r\n      <div >\r\n        \r\n         \r\n          <Grid container >\r\n              <Grid item xs={6} md={9}>  {\r\n            props.isDel ?\r\n            <Button className=\"Allbtn\" style={{textTransform:\"capitalize\" ,float:\"right\",marginTop:\"0.8rem\",color:\"#EC5454\",fontSize:\"1.2rem\"}}  >\r\n               <i class=\"fas fa-trash-alt\"  onClick={()=>handleClickOpen(props.message.msgId)}></i>\r\n            </Button>\r\n            : null\r\n               }</Grid>\r\n              <Grid item xs={6} md={3}  >\r\n                 <div style={{marginRight:\"15px\",marginTop:\"12px\",marginBottom:\"8px\"}}> \r\n                <Player   >\r\n                  <source src={props.message.messageVideo} />\r\n              </Player>\r\n              \r\n                </div></Grid>\r\n              </Grid>\r\n               <div class=\"chat-message is-sent\" >\r\n                 <div class=\"message-block\">  \r\n                 <div class=\"message-text\"> {props.message.messageBody}</div>\r\n                  <span class=\"sent_time_date\"> {props.message.time}</span>\r\n                 </div>\r\n                </div>\r\n      </div>\r\n    );\r\n  } \r\n   else {\r\n\r\n    console.log(\"nothing\");\r\n  }\r\n  return (\r\n    <div>\r\n        \r\n        {elem}\r\n        {\r\n        show ?\r\n        <DeleteMessage open ={show} setShow={setShow} msgId = {messageId} getData={props.getData}/>\r\n        : null}\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    \r\n  inputInput: {\r\n    paddingLeft: `calc(1em + ${theme.spacing(1)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    float:\"left\",\r\n    color:\"black\",\r\n    borderRadius: \"2rem\",\r\n    backgroundColor:\"white\",\r\n    width:\"100%\",\r\n    padding:\"0.4rem\",\r\n  border: \"1.4px solid #c4c4c4\",\r\n    \r\n  },\r\n  \r\n   \r\n  \r\n}));\r\nexport default function TypeMessage(props) {\r\n  const [message, setMessage] = useState(\"\");\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment >\r\n    <Grid container  style={{  display:\"flex\",paddingTop:\"0.5rem\" }}> \r\n    <Grid item xs ={10} sm={11} md={11}> \r\n     <InputBase\r\n              placeholder=\"Type a message here\"\r\n              className={classes.inputInput}\r\n              inputProps={{ 'aria-label': 'type' }}\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            /></Grid>\r\n    <Grid item xs ={2}  sm={1} md={1}>  <Button variant=\"contained\" size=\"small\" className= \"Allbtn\" style={{\r\n               backgroundColor:  'rgb(0, 172, 193)',\r\n                color : 'white',\r\n                float:\"left\",\r\n                  padding:\"0.5rem\",\r\n                  margin:\"0.2rem\",\r\n                borderRadius:\"0.3rem\"}}\r\n              onClick={() => {\r\n              props.sendMessage(message);\r\n              setMessage(\"\");\r\n            }}>\r\n              <SendIcon  style={{marginRight:\"0.4rem\",fontSize:\"0.8rem\"}}/>\r\n            Send\r\n          </Button></Grid>\r\n         \r\n      \r\n     </Grid>\r\n              </React.Fragment>\r\n  );\r\n}\r\n","import TypeMessage from \"./TypeMessage\";\r\nimport React , {useEffect,useState}from \"react\";\r\nimport \"./chat.css\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Alert from '../FrontendComponents/Alerts/AlertBar'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Header from \"../FrontendComponents/components/Header\";\r\nimport chatservice from \"../../services/ChatService\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport {Button, Grid ,Hidden,InputAdornment, TextField} from \"@material-ui/core\";\r\nimport { grey } from '@material-ui/core/colors';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport SideBar from \"../FrontendComponents/components/SideBar\";\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport {isAuthenticated} from '../FrontendComponents/clientStorages/auth';\r\nexport default function RenderChat(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [isSearch, setSearch] = useState(false)\r\n  let history = useHistory()\r\n    const myId = isAuthenticated()._id;\r\n  const open = Boolean(anchorEl);\r\n  const options = [\r\n    'Search',\r\n    'Delete'\r\n  ];\r\n  const [openMenu, setMenu] = useState(true)\r\n  const [open1, setOpen] = useState(false)\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    //props.setMyOpen(true)\r\n    setOpen(true)\r\n  };\r\n\r\n  const handleClose = (option) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const itemClickHandler= (option)=>{\r\n   if(option === 'Delete'){\r\n      props.setDel(true)\r\n      setMenu(false)\r\n   }\r\n    else if(option === 'Search')\r\n      setSearch(!isSearch)\r\n  }\r\n\r\n\r\n   const onChangeSearch = (event)=>{\r\n    //props.setTerm(event.currentTarget.value)\r\n    props.searchHandler(event.currentTarget.value)\r\n  }\r\n  useEffect(()=>{\r\n    let imgUrl = props.recipientInfo.url;\r\n\r\n  })\r\n  let elem = null;\r\n  if(openMenu){\r\n    elem = (\r\n      <div  style={{display:\"inline\",float:\"right\",marginTop:\"0.6rem\"}}>\r\n      <IconButton\r\n    className =\"Allbtn\" \r\n    aria-label=\"more\"\r\n    aria-controls=\"long-menu\"\r\n    aria-haspopup=\"true\"\r\n    onClick={handleClick}\r\n    >\r\n    <MoreVertIcon />\r\n    </IconButton>\r\n    {open1 ?\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n        style: {\r\n            marginTop: '40px',\r\n            maxHeight: 48 * 4.5,\r\n            width: '20ch',\r\n            \r\n        },\r\n      }}\r\n      >\r\n        <MenuItem className =\"Menu_div\" onClick={()=>itemClickHandler('Search')}>\r\n          <div >\r\n            <SearchIcon fontSize=\"small\" style={{width:\"2rem\"}}/>\r\n            <p style={{display:\"inline\"}}>Search</p>\r\n          </div>\r\n        </MenuItem>\r\n        <MenuItem  className =\"Menu_div\" onClick={()=>itemClickHandler('Delete')}>\r\n          <div>\r\n            <DeleteIcon fontSize=\"small\" style={{width:\"2rem\",paddingBottom:\"0.1rem\"}} />\r\n               <p style={{display:\"inline\"}}>Delete</p>\r\n          </div>\r\n      \r\n        </MenuItem>\r\n    </Menu>\r\n    :\r\n    null\r\n    }\r\n      \r\n    \r\n      </div>\r\n    )\r\n  }\r\n  if(props.isDel){\r\n    elem = (\r\n      <div style={{color:\"gray\",cursor:\"pointer\",float:\"right\",marginTop:\"1rem\",marginRight:\"1rem\"}} data-tip='Close delete Menu' data-for='delete'>\r\n          <CancelIcon onClick={() => {\r\n            console.log(props.isDel)\r\n            props.setDel(false)\r\n            setOpen(false)\r\n            setMenu(true)\r\n            }} />\r\n          \r\n            </div>\r\n\r\n    )\r\n  }\r\n  if(isSearch){\r\n    elem = (\r\n      <TextField\r\n       style={{float:\"right\",marginRight:\"1rem\",marginTop:\"0.8rem\",backgroundColor:\"white\",borderRadius:\"1rem\"}}\r\n       value={props.searchTerm}\r\n       onChange={onChangeSearch}\r\n        placeholder=\"Search Message\"\r\n        size=\"medium\"\r\n          \r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <SearchIcon style={{ color: grey[600] ,marginRight:\"0.2rem\",float:\"right\"}}/>\r\n       \r\n            </InputAdornment>\r\n          ),\r\n          endAdornment :(\r\n               <CancelIcon style={{color:\"gray\",cursor:\"pointer\",marginRight:\"0.4rem\"}} onClick={() => {\r\n            console.log(props.isDel)\r\n            props.setTerm(\"\")\r\n            setSearch(false)\r\n            setOpen(false)\r\n            setMenu(true)\r\n            }} />\r\n      \r\n          ),\r\n          disableUnderline: true \r\n         }}\r\n         \r\n      />\r\n      \r\n    )\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n       <div  style={{ height:\"100vh\"}} className=\"chat_div\"> \r\n       <Grid container>\r\n           <Hidden only={['sm', 'xs']}>\r\n          <Grid item  md={2}><SideBar/></Grid>\r\n          </Hidden>\r\n            \r\n       <Grid item xs={12} md={10}>\r\n        <ReactTooltip id='delete'/>\r\n            <Grid container spacing={0} style={{display:\"flex\",marginTop:\"1rem\"}}>\r\n               <Grid xs={0} md={1}></Grid>\r\n              <Grid item xs={12} md ={10}   >\r\n                <div className='profilediv'>\r\n                  <Hidden only={['md','lg']}>\r\n                   <KeyboardBackspaceIcon style={{marginRight:\"0.1rem\",marginLeft:\"0.1rem\",cursor:\"pointer\"}}  onClick={event =>  history.push('/mychats/'+myId)} /> \r\n                  </Hidden>\r\n              <img\r\n                className='profile'\r\n                src={props.recipientInfo.url}\r\n                alt='dp'\r\n              />\r\n \r\n              <span   style={{display:\"inline\",fontWeight:\"bold\", fontSize: \"21px\" }}>{props.recipientInfo.name}</span>\r\n              \r\n              {      \r\n                 elem\r\n              }\r\n            </div>\r\n            <div className=\"content_body \">\r\n              \r\n             {props.element}\r\n             {props.loading ? (\r\n              <div className='load'>\r\n                <CircularProgress color='secondary' />\r\n              </div>\r\n            ) : null}\r\n \r\n            </div>\r\n           { props.isFriend === true?\r\n            <TypeMessage sendMessage={props.sendMessage} />\r\n            :\r\n            <Alert\r\n            type='error' \r\n            message='This person is not your friend anymore. Add them again to start a chat.'\r\n            autoClose={5000}\r\n            />\r\n          }\r\n              </Grid>\r\n              <Grid xs={0} md={1}></Grid>\r\n              </Grid>\r\n              </Grid>\r\n       </Grid>\r\n              </div>\r\n              </React.Fragment>\r\n \r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef, useContext } from \"react\";\r\nimport chatservice from \"../../services/ChatService\";\r\nimport friendService from \"../../services/friendService\";\r\nimport \"./chat.css\";\r\nimport SettingMessage from \"./SettingMessage\";\r\nimport { SocketContext } from \"../../context/SocketContext\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport RenderChat from './RenderChat'\r\nimport { toast } from 'react-toastify';\r\nimport { Zoom } from 'react-toastify';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function SingleChat(props) {\r\n  const [chat, setChat] = useState([{ from: \"\", to: \"\", messages: [] }]);\r\n  const [searchChats, setSearchChats] = useState({messages :['']})\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [loading, setLoading] = useState(false);\r\n  const [isFriend, setIsFriend] = useState(true)\r\n  let chats = useRef([]);\r\n  let friends = useRef()\r\n  const scrollRef = useRef();\r\n  let dummy = [];\r\n  let user = useRef({ uId: \"\", uImg: \"\", uName: \"\" });\r\n  let recipient = useRef(\"\");\r\n  let recipientInfo = useRef({ name: \"\", lang: \"\", url: \"\" });\r\n  let roomId = useRef(\"\");\r\n  let myChatsRoom = useRef();\r\n  let notificationRoom = useRef();\r\n  let returndata;\r\n  let id = props.match.params.id.split(\" \");\r\n  const { clientSocket } = useContext(SocketContext);\r\n  const [isDel , setDel] = useState(false)\r\n  const [isChat, setIsChat] = React.useState(false)\r\n  var us = JSON.parse(localStorage.getItem(\"user\"));\r\n  //const [messagesToDel, setMsgs] = useState([])\r\n    useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [chat]); \r\n  //useEffect(() => {\r\n    recipientInfo.current.name = localStorage.getItem(\"recName\");\r\n    recipientInfo.current.lang = localStorage.getItem(\"recLang\");\r\n    recipientInfo.current.url = localStorage.getItem(\"profileUrl\");\r\n    myChatsRoom.current = \"mychats/\" + localStorage.getItem(\"friendId\");\r\n    notificationRoom.current = \"/\" + id[1];\r\n    recipient.current = id[0];\r\n    user.current.uId = us.email;\r\n    user.current.uName = us.firstName + \" \" + us.lastName;\r\n    user.current.uImg = us.profileImg\r\n // }, [us]);\r\n\r\n  const getData = () => {\r\n    console.log(\"in get Data\",user)\r\n    chatservice\r\n      .getMessagesbyEmail(user.current.uId, recipient.current)\r\n      .then((data) => {\r\n        if(data)\r\n        {\r\n          console.log(\"This data\",data)\r\n          chats.current = data;\r\n          setChat({ messages: chats.current });\r\n          setIsChat(true)\r\n        }\r\n        \r\n      })\r\n      .catch((err) => toast.error(\r\n        'Database Connection Error', {\r\n        position: toast.POSITION.TOP_LEFT,\r\n        autoClose: 3000,\r\n        transition: Zoom\r\n      }));\r\n      \r\n  };\r\n\r\n  \r\n\r\n  useEffect (()=>{\r\n    let mycount=0;\r\n    friendService.getAllFriends(us._id)\r\n    .then((data)=>{\r\n      friends.current = data\r\n      friends.current.forEach((f) => {\r\n        if(f.email === recipient.current)\r\n          mycount=mycount+1\r\n        \r\n      })\r\n      if(mycount<1)\r\n       setIsFriend(false)\r\n      })\r\n      .catch((err=>toast.error(\r\n        'Database Connection Error', {\r\n        position: toast.POSITION.TOP_LEFT,\r\n        autoClose: 3000,\r\n        transition: Zoom\r\n      })))\r\n  })\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  let count = 0;\r\n  useEffect(() => {\r\n    if (clientSocket !== undefined) {\r\n      clientSocket.emit(\r\n        \"roomJoin\",\r\n        { from: user.current.uId, to: recipient.current },\r\n        ({ error, room }) => {\r\n          if (!error) {\r\n            roomId.current = room;\r\n            console.log(\"joined room with id\", room);\r\n          } else {\r\n            console.log(\"error joining room\", error);\r\n          }\r\n        }\r\n      );\r\n\r\n      clientSocket.on(\"messageReceived\", (payload) => {\r\n        setChat((chatState) => {\r\n          if (chatState.messages) {\r\n            let newMessages = [...chatState.messages];\r\n            newMessages = [...newMessages, payload];\r\n            return { ...chatState, messages: newMessages };\r\n          } else {\r\n            return { messages: [payload] };\r\n          }\r\n        });\r\n      });\r\n\r\n      return function cleanup() {\r\n        clientSocket.off(\"messageReceived\");\r\n        console.log(\"in cleanup\");\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const sendMessage = (message) => {\r\n    \r\n    if (message == \"\"){\r\n       toast.error(\"Please Type something\",{\r\n          position: toast.POSITION.TOP_LEFT,\r\n        })\r\n    }\r\n   else\r\n   {\r\n     var msgId=uuidv4();\r\n     setLoading(true); \r\n     let data = {\r\n      msg: message,\r\n      lang: recipientInfo.current.lang,\r\n      userImgUrl: user.current.uImg,\r\n    };\r\n    //axios.post('http://127.0.0.1:80/',data) // flask ka post method call kre ga\r\n    //.then((response )=> {\r\n    setLoading(false);\r\n\r\n    // console.log(\" Response\" ,response.data);\r\n    //returndata = response.data\r\n    let messageS = {\r\n      from: user.current.uId,\r\n      to: recipient.current,\r\n      userName: user.current.uName,\r\n      room: roomId.current,\r\n      messageBody: message,\r\n      messageVideo: \"returndata\",\r\n      time: new Date().toLocaleString(),\r\n      type: \"offline\",\r\n      msgId : msgId\r\n    };\r\n    clientSocket.emit(\"messageSend\", messageS, (err) => {\r\n      if (!err) {\r\n        chatservice.createMessage(messageS)\r\n            .then((response)=>console.log(response,msgId))\r\n            .catch((err)=>toast.error(\r\n              'Database Connection Error! Please try again', {\r\n              position: toast.POSITION.TOP_LEFT,\r\n              autoClose: 3000,\r\n              transition: Zoom\r\n            }))\r\n        \r\n        if (chat.messages) {\r\n          setChat({ messages: [...chat.messages, messageS] });\r\n        } else {\r\n          setChat({ messages: [messageS] });\r\n        }\r\n      } else {\r\n        toast.error(\r\n          'Error in sending message! Please try again', {\r\n          position: toast.POSITION.TOP_LEFT,\r\n          autoClose: 3000,\r\n          transition: Zoom\r\n        })\r\n      }\r\n    });\r\n    clientSocket.emit(\r\n      \"messageSend1\",\r\n      {\r\n        message: messageS,\r\n        roomId: notificationRoom.current,\r\n        name: user.current.uName,\r\n      },\r\n      (err) => {\r\n        if (!err) console.log(\"testing\");\r\n        else console.log(err);\r\n      }\r\n    \r\n    );\r\n\r\n    clientSocket.emit(\r\n      \"myChats\",\r\n      { roomId: myChatsRoom.current, message: messageS, userImg: us.profileImg },\r\n      (err) => {\r\n        if (!err) console.log(\"testing\");\r\n        else console.log(err);\r\n      }\r\n    );\r\n  //}).catch((err)=>console.log(err))\r\n    }\r\n  };\r\n  \r\n  /* const chatDeleteHandler = (message)=>{\r\n    console.log(\"Message\",message)\r\n    setMsgs(message.msg)\r\n}\r\n */\r\n  const searchChatHandler = (keywords)=>{\r\n    setSearchTerm((term)=>{\r\n      //console.log(\"keywords\",term)\r\n      term = keywords\r\n      return term\r\n    })\r\n    \r\n  }\r\n  let elem = null;\r\n  useEffect(() => {\r\n    if(chat.messages){\r\n      \r\n    const list = chat.messages.filter(msg => msg.messageBody.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    setSearchChats({messages : list});\r\n    }\r\n    else{\r\n      console.log(\"no chat\")\r\n    }\r\n}, [searchTerm]);\r\n\r\n  \r\n  if (chat.messages === undefined) {\r\n    \r\n    elem = (\r\n      <h5 style={{ textAlign: \"center\" }}>Loading...</h5>\r\n    );\r\n  } else {\r\n    if(searchTerm !== \"\" && searchChats.messages !== undefined){\r\n      elem = (searchChats.messages.map((msg) =>{\r\n        return <SettingMessage message={msg} user={user.current.uId} isDel={isDel} term={searchTerm}/>;\r\n      })\r\n      )\r\n    }\r\n    else{\r\n      elem = (chat.messages.map((msg) =>{\r\n        return ( <div ref={scrollRef}>\r\n        <SettingMessage message={msg} user={user.current.uId} isDel={isDel} getData = {getData} id={id[1]} rec={recipient.current}/>\r\n        </div>)\r\n         \r\n      })\r\n      )\r\n    }\r\n\r\n    if(searchChats.messages.length === 0){\r\n      console.log(\"no match\")\r\n      elem = (\r\n        <h5 style={{ textAlign: \"center\" }}>No match found!</h5>\r\n      )\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  \r\n  return (    \r\n    <RenderChat recipientInfo={recipientInfo.current} \r\n     element={elem}\r\n     loading = {loading}\r\n     sendMessage = {sendMessage}\r\n     isDel ={isDel}\r\n     setDel = {setDel}\r\n     isFriend = {isFriend}\r\n     isChat={isChat}\r\n     getData ={getData}\r\n     searchTerm = {searchTerm}\r\n     setTerm = {setSearchTerm}\r\n     searchHandler ={searchChatHandler}\r\n    />\r\n  );\r\n}","import React, { useEffect, useRef, useState ,useContext} from \"react\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport chatservice from \"../../services/ChatService\";\r\nimport { format } from \"timeago.js\";\r\nimport \"./chat.css\";\r\nimport {SocketContext} from '../../context/SocketContext';\r\nconst useStyles = makeStyles((theme) => ({\r\n  subheader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  globe: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  subheaderText: {\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  list: {\r\n    maxHeight: \"calc(100vh - 112px)\",\r\n    overflowY: \"auto\",\r\n  },\r\n   \r\n  listText: {\r\n    fontSize: \"1.5rem\",\r\n    fontFamily: \"Roboto\",\r\n    marginLeft: \"0.5rem\",\r\n    marginTop:\"2rem\",\r\n    fontWeight:\"bold\",\r\n    display:\"inline\"\r\n   \r\n  },\r\n  listText1: {\r\n    fontSize: \"1.3rem\",\r\n    fontFamily: \"Roboto\",\r\n    color: \"gray\",\r\n   marginLeft: \"0.5rem\",\r\n    \r\n    \r\n  },\r\n  listTime:{\r\n    fontSize: \"0.8rem\",\r\n    fontFamily: \"Roboto\",\r\n    color: \"gray\",\r\n    marginLeft: \"0.5rem\",\r\n    display:\"inline\"\r\n     \r\n  },\r\n  listBtn: {\r\n    backgroundColor: \"rgb(0, 172, 193)\",\r\n    color: \"white\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  mygrid: {\r\n    marginTop: \"50px\",\r\n    marginLeft: \"350px\",\r\n    width: \"650px\",\r\n  },\r\n  mygrid1: {\r\n    padding: \"20px\",\r\n  },\r\n  img: {\r\n    width: \"4rem\",\r\n    height: \"4rem\",\r\n    borderRadius: \"60px\",\r\n  },\r\n}));\r\nconst SingleChat = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  let elem = null;\r\n  let user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let messages = useRef([]);\r\nconst {msgNotify}=useContext(SocketContext);\r\n  console.log(\"props\",props.lastMsg)\r\n  const recipientClickHandler = (fr, type) => {\r\n    chatservice.getMessagesbyEmail(user.email, fr.email).then((res) => {\r\n      messages.current = res;\r\n      messages.current.map((m) => {\r\n        if (m.type === \"offline\" && m.from !== user.email) {\r\n          chatservice\r\n            .changeMessageType({ type: \"read\" }, m._id)\r\n            .then((res) => {\r\n              console.log(\"The response is here\",res) \r\n              msgNotify();})\r\n            .catch((err) => console.log(err));\r\n        }\r\n        console.log(\"user matched\")\r\n      });\r\n    });\r\n    //console.log(\"fr\", fr);\r\n    localStorage.setItem(\"friendId\", fr.id);\r\n    localStorage.setItem(\"recName\", fr.name);\r\n    localStorage.setItem(\"recLang\", fr.lang);\r\n    localStorage.setItem(\"profileUrl\", fr.img);\r\n    history.push(\"/chat/\" + fr.email + \" \" + fr.id);\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.recipients.map((r, index) => {\r\n        return (\r\n           \r\n             <Paper style={{padding:  '12px 10px', marginBottom:\"1rem\" }}  >\r\n              <Grid container>\r\n               <Grid item xs={1}  >\r\n                  <img src={r.img} alt='img'    style={{ height: \"50px\", width: \"50px\", borderRadius: \"50%\",display:\"inline\" }}/>\r\n               </Grid>\r\n           <Grid item    xs ={11}  >\r\n              <Typography className={classes.listText}>{r.name}</Typography>\r\n                 {props.lastMsg.emails.forEach((u, ind) => {\r\n                  //console.log(\"inside for each lastMsg\", u,ind)\r\n                  //console.log(\"inside map:\",props.lastMsg.types[ind])\r\n                  //console.log(\"inside map:\",props.lastMsg.senders[ind])\r\n                   if (u === r.email) {\r\n                    if (props.lastMsg.types[ind] === \"read\") {\r\n                      //console.log(\"in 1\",props.lastMsg.msgs[ind])\r\n                      elem = (\r\n                        <div>\r\n                            <Typography\r\n                              className={classes.listText1}\r\n                              onClick={() =>\r\n                                recipientClickHandler(\r\n                                  r,\r\n                                  props.lastMsg.types[ind],\r\n                                  props.lastMsg.msgId[ind]\r\n                                )\r\n                              }\r\n                            >\r\n                              {props.lastMsg.msgs[ind]}\r\n                              \r\n                            </Typography>\r\n                            <Typography className={classes.listTime}>\r\n                            {format(props.lastMsg.time[ind])}\r\n                            </Typography>\r\n                        </div>\r\n                        \r\n                      );\r\n                    } else if (props.lastMsg.types[ind] === \"unread\") {\r\n                      //console.log(\"in 2\")\r\n                      elem = (\r\n                        <div>\r\n                        <Typography\r\n                          style={{ fontWeight: \"bold\", color: \"black\" }}\r\n                          className={classes.listText1}\r\n                          onClick={() =>\r\n                            recipientClickHandler(\r\n                              r,\r\n                              props.lastMsg.types[ind],\r\n                              props.lastMsg.msgId[ind]\r\n                            )\r\n                          }\r\n                        >\r\n                          {props.lastMsg.msgs[ind]}\r\n                        </Typography>\r\n                        <Typography className={classes.listTime}>\r\n                            {format(props.lastMsg.time[ind])}\r\n                        </Typography>\r\n                        </div>\r\n                      );\r\n                    } else if (\r\n                      props.lastMsg.types[ind] === \"offline\" &&\r\n                      props.lastMsg.senders[ind] !== user.email\r\n                    ) {\r\n                      //console.log(\"in 3\")\r\n                      elem = (\r\n                        <div>\r\n                        <Typography\r\n                       style={{ fontWeight: \"bold\", color: \"black\" }}\r\n                          className={classes.listText1}\r\n                          onClick={() =>\r\n                            recipientClickHandler(\r\n                              r,\r\n                              props.lastMsg.types[ind]\r\n                            )\r\n                          }\r\n                        >\r\n                          {props.lastMsg.msgs[ind]}\r\n                        </Typography>\r\n                        <Typography className={classes.listTime}>\r\n                            {format(props.lastMsg.time[ind])}\r\n                        </Typography>\r\n                        </div>\r\n                        \r\n                      );\r\n                    } else {\r\n                      console.log(\"in nothing\", props.lastMsg.types[ind]);\r\n                       console.log(\"in nothing1\", props.lastMsg.senders[ind]);\r\n                      elem = (\r\n                        <div>\r\n                          <Typography\r\n                         //  style={{ fontWeight: \"bold\", color: \"black\" }}\r\n                            className={classes.listText1}\r\n                            onClick={() =>\r\n                              recipientClickHandler(\r\n                                r,\r\n                                props.lastMsg.types[ind],\r\n                              )\r\n                            }\r\n                          >\r\n                            {props.lastMsg.msgs[ind]}\r\n                          </Typography>\r\n                          <Typography className={classes.listTime}>\r\n                              {format(props.lastMsg.time[ind])}\r\n                          </Typography>\r\n                        </div>\r\n                      );\r\n                    }\r\n                  }\r\n                })}\r\n\r\n                {elem}\r\n           </Grid>\r\n               \r\n               \r\n                \r\n              <div>\r\n                {/*  {setText(r,chatRecipients.lastMsg[index],chatRecipients.msgType[index])}\r\n                {elem}*/\r\n                 }\r\n              </div>\r\n              \r\n          \r\n           </Grid>\r\n          </Paper>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default SingleChat;","import React, { useEffect, useRef, useContext, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { SocketContext } from \"../../context/SocketContext\";\r\nimport SingleChat from \"./SingleChat\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PageTitle from \"../FrontendComponents/components/pageTitle\";\r\nimport Header from \"../FrontendComponents/components/Header\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport chatservice from \"../../services/ChatService\";\r\nimport userservice from \"../../services/UserService\";\r\nimport \"./chat.css\";\r\nimport { Grid, Hidden } from \"@material-ui/core\";\r\nimport SideBar from \"../FrontendComponents/components/SideBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mygrid: {\r\n    marginTop: \"50px\",\r\n    marginLeft: \"350px\",\r\n    width: \"650px\",\r\n  },\r\n}));\r\nconst AllChats = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const { clientSocket } = useContext(SocketContext);\r\n  let uId = JSON.parse(localStorage.getItem(\"user\")).email;\r\n  const {setSocket,roomJoin,messageEvent, friendReq} = useContext(SocketContext);\r\n  let emails = useRef([]);\r\n  //let usersData = useRef([])\r\n  const [usersData, setData] = useState({uData:[]});\r\n  const [lastMsg, setLastMsg] = useState({\r\n    msgs: [],\r\n    msgId: [],\r\n    emails: [],\r\n    types: [],\r\n    senders: [],\r\n    time : []\r\n  });\r\n  const [payload, setPayload] = useState()\r\n  //const [recipients, setRecipients] = useState([])\r\n  let roomId = useRef();\r\n  let count = useRef(0);\r\n  let notPresent = useRef(0);\r\n  roomId.current = \"mychats/\" + props.match.params.id;\r\n  let recData = [];\r\n  let recMsgs = [];\r\n  let dummy = [];\r\n let clientSocket1 = useRef()\r\n\r\n  window.onload = () => {\r\n    friendReq()\r\n    messageEvent()\r\n    let did = JSON.parse(localStorage.getItem('user'))._id\r\n    roomJoin(did)\r\n    clientSocket1 = io(\"http://127.0.0.1:5000\")\r\n    setSocket((s)=>{\r\n      s = clientSocket1\r\n      s.on('connect' , () => {\r\n        console.log(\"connected\",s.id);\r\n        s.emit(\"adduser\",{id:s.id, name: uId})\r\n\r\n      });\r\n      return s;\r\n    })\r\n  };\r\n  const getRecData = (uId) => {\r\n    emails.current = []\r\n    lastMsg.msgs = []; lastMsg.msgId = []; lastMsg.emails = []; \r\n    lastMsg.types = []; lastMsg.senders = []; lastMsg.time = []; \r\n    chatservice\r\n      .getChatRecipients(uId)\r\n      .then((data) => {\r\n        if (data.length > 0) {\r\n          //console.log(\"emails before sorting\", data);\r\n          emails.current = data.sort();\r\n          emails.current = Array.from(new Set(emails.current));\r\n          console.log(\"emails after sorting\", emails.current);\r\n          userservice\r\n            .getUserByEmail({ userArray: emails.current })\r\n            .then((datafromdb) => {\r\n              recData = datafromdb;\r\n              //console.log(\"recdata\", recData);\r\n              setData((d) => {\r\n                d.uData = recData;\r\n                return d;\r\n              });\r\n            });\r\n          // let index = 0\r\n          emails.current.forEach((r, index) => {\r\n            chatservice\r\n              .getLastMsg(uId, r)\r\n              .then((data1) => {\r\n                //console.log(\"data1\", data1);\r\n                if(data1){\r\n                  setLastMsg((msg) => {\r\n                    if (\r\n                      msg.msgs.length >= 1 &&\r\n                      msg.emails.length >= 1 &&\r\n                      msg.types.length >= 1 &&\r\n                      msg.msgId.length >= 1 &&\r\n                      msg.senders.length >= 1\r\n                    ) {\r\n                      let newMsg = [...msg.msgs];\r\n                      let newR = [...msg.emails];\r\n                      let newT = [...msg.types];\r\n                      let id = [...msg.msgId];\r\n                      let sender = [...msg.senders];\r\n                      let newTime = [...msg.time]\r\n                      newMsg = [...newMsg, data1.lastMsg];\r\n                      newR = [...newR, r];\r\n                      newT = [...newT, data1.type];\r\n                      id = [...id, data1.msgId];\r\n                      sender = [...sender, data1.sender];\r\n                      newTime = [...newTime, data1.time]\r\n                      \r\n                      return {\r\n                        ...msg,\r\n                        msgs: newMsg,\r\n                        msgId: id,\r\n                        emails: newR,\r\n                        types: newT,\r\n                        senders: sender,\r\n                        time : newTime\r\n                      };\r\n                    } else {\r\n                      console.log(\"first: \", data1.lastMsg, r);\r\n                      let myMsg =  {\r\n                        msgs: [data1.lastMsg],\r\n                        msgId: [data1.msgId],\r\n                        emails: [r],\r\n                        types: [data1.type],\r\n                        senders: [data1.sender],\r\n                        time : [data1.time]\r\n                      };\r\n                      console.log(\"MY MSG: \",myMsg)\r\n                      return myMsg\r\n                    }\r\n                  });\r\n                }\r\n\r\n              })\r\n              .catch((err) => console.log(err));\r\n          });\r\n\r\n          //setLastMsg(recMsgs)\r\n\r\n          //console.log(\"recipients\",recipients)\r\n        } else console.log(\"no data\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    count.current = 0\r\n    if (clientSocket) {\r\n      clientSocket.emit(\r\n        \"myChatsRoom\",\r\n        { myChatsRoom: roomId.current },\r\n        ({ error, room }) => {\r\n          if (!error) {\r\n            console.log(\"joined room with id\", room);\r\n          } else {\r\n            console.log(\"error joining room\", error);\r\n          }\r\n        }\r\n      );\r\n    }\r\n    //console.log(\"in useEffect 1\");\r\n    getRecData(uId);\r\n    //console.log(\"usersData 1\", usersData);\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    if (clientSocket) {\r\n      clientSocket.on(\"newRecipient\", (payload) => {\r\n        setPayload((p)=>{\r\n          return p = payload\r\n        })\r\n      })\r\n    }\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    console.log(\"IN PAYLOAD\")\r\n    if (payload) {\r\n      console.log(\"payload\",payload)\r\n        let index;\r\n\r\n        if (usersData.uData.length !== 0 && lastMsg.msgs.length !== 0) {\r\n          console.log(\"check:\", usersData);\r\n          count.current = 0;\r\n          /* present.current =0\r\n        notPresent.current =0 */\r\n          usersData.uData.forEach((u, indx) => {\r\n            //console.log(\"emails from map\", payload.message.from, u.email);\r\n            if (payload.message.from === u.email) {\r\n              index = indx;\r\n              console.log(\"index: \", index);\r\n              count.current = count.current + 1;\r\n              console.log(\"count: \", count.current)\r\n              \r\n            } else {\r\n              //count.current.current = notPresent.current + 1 ;\r\n              console.log(\"false\");\r\n            }\r\n          });\r\n          if (count.current !== 0) {\r\n            console.log(\"before setRecArray\",lastMsg.msgs)\r\n            console.log(\"in setRecArray\",count.current);\r\n            setRecArray(\r\n              index,\r\n              payload.message\r\n            );\r\n          } else if (count.current === 0) {\r\n            setNewRecipient(\r\n              payload.message\r\n            );\r\n            console.log(\"in setNewArray\",count.current);\r\n          } else console.log(\"nothing \", count.current);\r\n        } else {\r\n          console.log(\"usersData 1\", lastMsg);\r\n        }\r\n      //});\r\n    }\r\n  }, [payload]);\r\n\r\n  const setRecArray = (index, message) => {\r\n    //if(lastMsg)\r\n    console.log(\"Last msg array and index\",lastMsg.msgs, index )\r\n    let items = []\r\n    items = [...lastMsg.msgs];\r\n    let mtypes = [...lastMsg.types]\r\n    let mTime = [...lastMsg.time]\r\n    console.log(\"items before change\", items);\r\n    items[index] = message.messageBody;\r\n    mtypes[index] = message.type\r\n    mTime[index] = message.time\r\n    console.log(\"items\", items);\r\n    setLastMsg((m) => {\r\n      return { ...m, msgs: items,types: mtypes, time: mTime };\r\n      //}\r\n    });\r\n  };\r\n\r\n  const setNewRecipient = (message) => {\r\n    console.log(\"in new chattt\",message.type)\r\n    userservice\r\n      .getUserByEmail({ userEmail: message.from })\r\n      .then((data) => {\r\n        console.log(\"data\",data);\r\n        setData((d) => {\r\n          let obj = { email: message.from, gender : data[0].gender, id : data[0]._id, \r\n                      name : data[0].firstName + ' '+ data[0].lastName,\r\n                      img : data[0].profileImg }\r\n          let uData = [...d.uData]\r\n          uData = [...uData,obj]\r\n          console.log(\"u\",uData)\r\n          return { ...d, uData}\r\n        });\r\n      })\r\n      if(usersData.uData.length !==0){\r\n        console.log(\"not first recipient\")\r\n        /* setLastMsg((msg) => {\r\n          \r\n            let newMsg = [...msg.msgs];\r\n            let newR = [...msg.emails];\r\n            let newT = [...msg.types];\r\n            let sender = [...msg.senders];\r\n            newMsg = [...newMsg, msg];\r\n            newR = [...newR, rec];\r\n            newT = [...newT, type];\r\n            sender = [...sender, rec];\r\n            let myMsg = {\r\n              ...msg,\r\n              msgs: newMsg,\r\n              emails: newR,\r\n              types: newT,\r\n              senders: sender,\r\n            };\r\n            console.log(\"My new Msg\",myMsg)\r\n            return myMsg\r\n          \r\n        });  */\r\n        setLastMsg({msgs: [...lastMsg.msgs,message.messageBody], emails: [...lastMsg.emails,message.from], \r\n                  types:[...lastMsg.types,message.type], senders:[...lastMsg.senders,message.from],\r\n                  time : [...lastMsg.time,message.time ]})\r\n      }\r\n      else{\r\n        console.log(\"first recipient\")\r\n        setLastMsg({msgs: [message.messageBody], emails: [message.from], \r\n                    types:[message.type], senders:[message.from], time:[message.time]})\r\n      }\r\n      \r\n   \r\n      /*chatservice\r\n      .getLastMsg(uId, rec)\r\n      .then((data1) => {\r\n        console.log(\"data new\", data1);\r\n        \r\n          setLastMsg((msg) => {\r\n          let newMsg = [...msg.msgs];\r\n          let newR = [...msg.emails];\r\n          let newT = [...msg.types];\r\n          let id = [...msg.msgId];\r\n          let sender = [...msg.senders];\r\n          newMsg = [...newMsg, data1.lastMsg];\r\n          newR = [...newR, rec];\r\n          newT = [...newT, data1.type];\r\n          id = [...id, data1.msgId];\r\n          sender = [...sender, data1.sender];\r\n          //console.log(\"newMsg: \", newMsg, newR, newT,id,sender);\r\n          return {\r\n            ...msg,\r\n            msgs: newMsg,\r\n            msgId: id,\r\n            emails: newR,\r\n            types: newT,\r\n            senders: sender,\r\n          };\r\n    });\r\n      }).catch((err)=>console.log(err))\r\n      */\r\n    \r\n  };\r\n\r\n  return (\r\n      <div  style={{height:\"100vh\"}} className=\"back_divs\">\r\n        <Grid container>\r\n           <Hidden only={['xs', 'sm']}>\r\n          <Grid item xs ={5} md={2}><SideBar/></Grid>\r\n          </Hidden>\r\n            <Hidden only={['md', 'lg']}>\r\n          <Grid item xs={12} ><Header/></Grid>\r\n          </Hidden>\r\n       <Grid item xs={12} md={10}>\r\n      <PageTitle name={\"My Chats\"} />\r\n      {usersData.uData.length !== 0  && lastMsg.msgs.length !==0? (\r\n        <div>\r\n            <Grid container   style={{marginTop:\"0.9rem\" }}>\r\n          <Grid item xs ={1} md={1}> </Grid>\r\n          <Grid item xs ={10} md={10}>\r\n          <SingleChat recipients={usersData.uData} lastMsg={lastMsg} />\r\n         \r\n        </Grid>\r\n        <Grid item xs ={1} md={1}> </Grid>\r\n        </Grid>\r\n        </div>\r\n      ) : (\r\n        <h5 style={{ textAlign: \"center\" }}>No Chats Yet!</h5>\r\n      )}\r\n      </Grid>\r\n       </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default AllChats;","import React, { useState, useEffect,useContext } from \"react\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport Select from \"react-select\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport { grey, cyan,lightBlue} from '@material-ui/core/colors';\r\nimport {Button} from \"@material-ui/core\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Webcam from \"react-webcam\";\r\nimport { SocketContext } from \"../../../context/SocketContext\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport friendService from \"../../../services/friendService\";\r\nconst useStyles = makeStyles({\r\n\r\n  textfield: {\r\n    marginTop: \"2rem\",\r\n  },\r\n  Submitbtn: {\r\n    marginTop: \"0.6rem\",\r\n  },\r\n});\r\n\r\n\r\nconst Profile = ( {match}) => {\r\n     console.log(match.params.id)\r\n     const contactId = match.params.id\r\n     const roomId = '/'+contactId\r\n    const myId=isAuthenticated()._id;\r\n    const myName =isAuthenticated().firstName + \" \" +isAuthenticated().lastName;\r\n    var userData=JSON.parse(localStorage.getItem(\"user\")) \r\n    const [showAddBtn, setAddBtn]=useState(userData.sentRequests.includes(contactId)?false:true)\r\n    const myProfileImg =isAuthenticated().profileImg;\r\n    const myEmail =isAuthenticated().email;\r\n    const myGender =isAuthenticated().gender;\r\n    const myLangPreference =isAuthenticated().langPreference;\r\n    const { clientSocket } = useContext(SocketContext);\r\n    //console.log(\"Props \",props.match)\r\n    const sentFriendRequest=() => {\r\n        console.log(\"contact Id\",contactId)\r\n        friendService.sendRequest(\r\n            {friendId:contactId,\r\n            myId,myName,myProfileImg,myEmail,myGender,myLangPreference})\r\n         .then((data) => {\r\n           localStorage.setItem(\"user\",JSON.stringify(data));\r\n              // dispatch({type:\"FRIEND_REQUESTED\",payload:{sentRequests:data.sentRequests }})\r\n             setAddBtn(false)\r\n\r\n            })\r\n         .catch((err) => {console.log(err);});\r\n\r\n         clientSocket.emit(\r\n            \"friendRequest\",\r\n            { myName,roomId },\r\n            (err) => {\r\n              if (!err) console.log(\"emitted event\");\r\n              else console.log(err);\r\n            }\r\n          );\r\n    }\r\n     const cancelFriendRequest=()=>{\r\n\r\n        friendService.cancelRequest(\r\n            {friendId:contactId,myId})\r\n         .then((data) => {\r\n             localStorage.setItem(\"user\",JSON.stringify(data));\r\n            // dispatch({type:\"FRIEND_REQUESTED\",payload:{sentRequests:data.sentRequests }})\r\n             setAddBtn(true)\r\n\r\n         })\r\n         .catch((err) => {console.log(err);});\r\n    }\r\n\r\nreturn (\r\n    <div>\r\n        {showAddBtn ?  \r\n         <Button className= \"loginbtn\"\r\n             style={{display:\"inline-block\"  ,position:\"relative\",float:\"right\",marginTop:\"1rem\", backgroundColor:lightBlue[600],color:\"white\"}}\r\n            variant=\"contained\" \r\n            onClick={sentFriendRequest}>Add friend</Button>\r\n        : \r\n        <Button className= \"loginbtn\"\r\n              style={{display:\"inline-block\" ,position:\"relative\",float:\"right\" ,marginTop:\"1rem\", backgroundColor:grey[500],color:\"white\"}}\r\n            variant=\"contained\" \r\n            onClick={cancelFriendRequest}>Requested</Button> \r\n             }\r\n\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\n\r\nconst UserRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated() && isAuthenticated().role === 0 ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserRoute;","import React, { useEffect, useState,useContext  } from \"react\";\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport Header from \"./Header\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport GroupAddRoundedIcon from '@material-ui/icons/GroupAddRounded';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { Button, Grid, Hidden } from \"@material-ui/core\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport PageTitle from \"./pageTitle\";\r\nimport SideBar from \"./SideBar\";\r\nconst ContactManagement = () => {\r\n    let history = useHistory()\r\n    const {frndcounter}  = useContext(SocketContext);\r\n    const myId= isAuthenticated()._id;\r\n    return(<div div style={{height:\"100vh\"}} className=\"back_divs\">\r\n       \r\n    \r\n     <Grid container>\r\n         <Hidden only={['xs', 'sm']}>\r\n          <Grid item xs ={5} md={2}><SideBar/></Grid>\r\n          </Hidden>\r\n            <Hidden only={['md', 'lg']}>\r\n          <Grid item xs={12} ><Header/></Grid>\r\n          </Hidden>\r\n          \r\n       \r\n       <Grid item xs={12} md={10}>\r\n            <PageTitle name={\"My Contacts\"}/> \r\n            <Grid container style={{marginTop:\"1.5rem\"}}>\r\n                <Grid item xs={1} md={3}></Grid>\r\n                 <Grid item xs={10} md={6}>\r\n             <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 40px\", display:\"block\",backgroundColor:\"#D03384\",marginTop:\"1.5rem\"}}\r\n            variant=\"contained\" \r\n            color=\"Secondary\"\r\n            fullWidth\r\n            onClick={event =>  history.push('/all-my-friends/'+myId)}>\r\n              < PeopleAltIcon className='chaticon'\r\n              color = \"white\"/> My Friends\r\n            </Button>\r\n             {\r\n          frndcounter >= 1 ?\r\n           <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 20px\" ,display:\"block\",backgroundColor:\"#D03384\",marginTop:\"1.5rem\"}}\r\n           variant=\"contained\" \r\n            color=\"Secondary\" \r\n             fullWidth\r\n             onClick={event =>  history.push('/all-friend-requests/'+myId)}>\r\n            <Badge badgeContent={frndcounter} color=\"secondary\" style={{marginRight:\"0.5rem\"}}>\r\n              <GroupAddRoundedIcon className='chaticon'\r\n              onClick={event =>  history.push('/all-friend-requests/'+myId)}\r\n              color = \"white\"\r\n              />  \r\n            </Badge>\r\n            My Friend Requests\r\n            </Button>\r\n          :\r\n         <Button className= \"loginbtn\"\r\n             style={{ padding:\"10px 50px\" , display:\"block\",backgroundColor:\"#D03384\",marginTop:\"1.5rem\"}}\r\n           variant=\"contained\" \r\n            color=\"Secondary\" \r\n            fullWidth\r\n             onClick={event =>  history.push('/all-friend-requests/'+myId)}>\r\n          <GroupAddRoundedIcon className='chaticon'\r\n              color = \"white\"\r\n              />  My Friend Requests\r\n            </Button>\r\n            \r\n        }\r\n        <Button className= \"loginbtn\"\r\n             style={{padding:\"10px 20px\",display:\"block\",backgroundColor:\"#D03384\",marginTop:\"1.5rem\"}}\r\n            variant=\"contained\" \r\n            color=\"Secondary\"\r\n             fullWidth\r\n            onClick={event =>  history.push('/all-contacts/'+myId)}>\r\n              <PersonAddIcon className='chaticon'\r\n              color = \"white\"/> Add New friend\r\n            </Button>\r\n            </Grid>\r\n            </Grid>\r\n             <Grid item xs={1} md={3}></Grid>\r\n       </Grid>\r\n       \r\n       </Grid>\r\n    </div>)\r\n}\r\nexport default ContactManagement;","import './App.css';\r\nimport { Route, Switch,BrowserRouter as Router,Redirect } from \"react-router-dom\";\r\nimport UserDashboard from \"./components/FrontendComponents/components/userDashboard\";\r\nimport SignUp from \"./components/FrontendComponents/components/SignUp\";\r\nimport LogIn from \"./components/FrontendComponents/components/LogIn\";\r\nimport Activate from \"./components/FrontendComponents/components/Activate\";\r\nimport notFound from \"./components/FrontendComponents/components/notFound\";\r\nimport ForgotPassword from \"./components/FrontendComponents/components/forgotPassword\";\r\nimport ResetPassword from \"./components/FrontendComponents/components/resetPassword\";\r\nimport ProfileSetup from \"./components/FrontendComponents/components/profileSetup\";\r\nimport AllContact from \"./components/FrontendComponents/components/AllContacts\";\r\nimport AllFriendRequest from \"./components/FrontendComponents/components/AllFriendRequest\";\r\nimport AllFriends from \"./components/FrontendComponents/components/AllFriends\";\r\nimport UpdateProfileSetup from \"./components/FrontendComponents/components/updateProfileSetup\";\r\nimport Chat from \"./components/ChatComponents/Chat\";\r\nimport MyChats from \"./components/ChatComponents/AllChats\";\r\nimport {SocketProvider} from './context/SocketContext';\r\nimport {MyChatsProvider} from './context/MyChatsContext';\r\nimport {ChatContextProvider} from './context/ChatContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//import Notification from './components/FrontendComponents/Alerts/Notification'\r\n//import Users from \"./components/ChatComponents/Users\";\r\n//import {SocketContext} from './context/SocketContext';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport {useState} from 'react';\r\nimport Profile from './components/FrontendComponents/components/Profile';\r\nimport DeletePermissionProvider from './context/DeletePermissionContext';\r\nimport UserRoute from './components/FrontendComponents/components/userRoutes';\r\nimport ContactManagement from './components/FrontendComponents/components/ContactManagement';\r\n\r\nconst App =() =>{\r\n  const [userId,setId] = useState()\r\n  const [dId,setDid] = useState()\r\n   /*const [msg, setMsg] = useState()\r\n  //const {messageEvent} = useContext(SocketContext);\r\n  useEffect(()=>{\r\n    messageEvent()\r\n\r\n  },[]) */\r\n  return (\r\n    <div className=\"App\"> \r\n    <MyChatsProvider userId={userId} >\r\n    <ChatContextProvider userId={userId} >\r\n    <SocketProvider id={dId} >\r\n    <DeletePermissionProvider> \r\n    <ToastContainer/>\r\n    <Router>\r\n      <Switch>\r\n            <Route path=\"/\" exact><LogIn onIdSubmit={setId} setId={setDid}/></Route>\r\n            <Route exact path=\"/signup\" component={SignUp} />\r\n            <Route exact path=\"/login\"><LogIn onIdSubmit={setId}  setId={setDid}/></Route>\r\n            <Route exact path=\"/user/activate/:token\" component={Activate} />\r\n            <UserRoute exact path=\"/dashboard/:id\"  component ={UserDashboard} />\r\n            <Route exact path=\"/reset-password/:token\" component={ResetPassword} />\r\n            <Route exact path=\"/forgot-password\" component={ForgotPassword} />\r\n            <Route exact path=\"/profile-setup/:token\" component={ProfileSetup}/>\r\n            <UserRoute exact path=\"/update-my-profile-setup/:id\" component={UpdateProfileSetup}/>\r\n            <UserRoute exact path =\"/all-contacts/:id\" component= {AllContact}/>\r\n            <UserRoute exact path = \"/all-friend-requests/:id\" component ={AllFriendRequest}/>\r\n            <UserRoute exact path =\"/all-my-friends/:id\" component ={AllFriends} />\r\n             <UserRoute exact path =\"/profile/:id/:id\" component ={Profile} />\r\n            <UserRoute exact path =\"/my-contact-list/:id\" component ={ContactManagement} />\r\n            <Route exact path=\"/notfound\" component={notFound} />\r\n            <UserRoute path=\"/chat/:id\" render={(props) => (\r\n              <Chat {...props} key={props.location.key} />\r\n            )} exact component={Chat}>\r\n            </UserRoute>\r\n            <UserRoute path=\"/mychats/:id\" render={(props) => (\r\n              <MyChats {...props} key={props.location.key}/>\r\n            )} exact component={MyChats}>\r\n            </UserRoute>\r\n            <Redirect to=\"/notfound\" />  \r\n      </Switch>\r\n      </Router>\r\n       </DeletePermissionProvider>  \r\n    </SocketProvider>\r\n    </ChatContextProvider>\r\n    </MyChatsProvider>\r\n  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//import Pusher from 'pusher-js';\r\n//import Reducer from './Redux/reducers/chat_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n//Pusher.logToConsole = true;\r\n\r\n//useEffect (()=>{\r\n  /* const pusher = new Pusher('18cb37e3146179a6a80e', {\r\n  cluster: 'ap2',\r\n  authEndpoint: 'http://localhost:5000/api/chatapi/pusher/auth'\r\n}); */\r\n/* usher.connection.bind('connected', function () {\r\n  // attach the socket ID to all outgoing Axios requests\r\n  axios.defaults.headers.common['X-Socket-Id'] = pusher.connection.socket_id;\r\n  console.log(\"id:\",pusher.connection.socket_id)\r\n}); */\r\n//},[])\r\n/* var channel = pusher.subscribe('private-my-channel');\r\nchannel.bind('my-event', function(data) {\r\n  console.log(\"in bind\")\r\n  alert(JSON.stringify(data));\r\n  console.log(\"pusher data:\",data)\r\n}); */\r\n\r\n//const myStore = createStore(Reducer, window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n                            //window.__REDUX_DEVTOOLS_EXTENSION__() );\r\n\r\n/* ReactDOM.render(\r\n  <Provider\r\n        store={myStore}\r\n        >\r\n        <App />\r\n  </Provider>\r\n    \r\n  ,\r\n  document.getElementById('root')\r\n); */\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}