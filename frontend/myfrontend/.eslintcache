[{"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\index.js":"1","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\reportWebVitals.js":"2","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\App.js":"3","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\Login.js":"4","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\GroupChat.js":"5","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\ChatPage.js":"6","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Users.js":"7","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\userDashboard.js":"8","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\notFound.js":"9","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SignUp.js":"10","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Chat.js":"11","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\forgotPassword.js":"12","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\resetPassword.js":"13","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\LogIn.js":"14","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\Activate.js":"15","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\profileSetup.js":"16","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\TypeMessage.js":"17","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\SendMessage.js":"18","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\GroupService.js":"19","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\ChatService.js":"20","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\Header.js":"21","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\UserService.js":"22","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\pageTitle.js":"23","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Chats.js":"24","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\SettingMessage.js":"25","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\SingleChat.js":"26","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\AuthService.js":"27","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\accountService.js":"28","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\api\\auth.js":"29","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\AlertBar.js":"30","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\ProgressBar.js":"31","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\auth.js":"32","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\GenericService.js":"33","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\localStorage.js":"34","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\cookies.js":"35","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\SocketContext.js":"36","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\MyChats.js":"37","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\hooks\\useLocalStorage.js":"38","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\MyChatsContext.js":"39","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllContacts.js":"40","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllFriendRequest.js":"41","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllFriends.js":"42","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleContact.js":"43","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleFriend.js":"44","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleFriendRequest.js":"45","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\friendService.js":"46","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\contactService.js":"47"},{"size":1664,"mtime":1618066164985,"results":"48","hashOfConfig":"49"},{"size":362,"mtime":499162500000,"results":"50","hashOfConfig":"49"},{"size":3521,"mtime":1618482132407,"results":"51","hashOfConfig":"49"},{"size":2245,"mtime":1614176287276,"results":"52","hashOfConfig":"49"},{"size":2501,"mtime":1613509401928,"results":"53","hashOfConfig":"49"},{"size":8043,"mtime":1618052506037,"results":"54","hashOfConfig":"49"},{"size":7000,"mtime":1618249738129,"results":"55","hashOfConfig":"49"},{"size":1605,"mtime":1618483949088,"results":"56","hashOfConfig":"49"},{"size":437,"mtime":1614689093529,"results":"57","hashOfConfig":"49"},{"size":11582,"mtime":1618422980426,"results":"58","hashOfConfig":"49"},{"size":8559,"mtime":1618482225604,"results":"59","hashOfConfig":"49"},{"size":4158,"mtime":1618052506116,"results":"60","hashOfConfig":"49"},{"size":7920,"mtime":1618052506119,"results":"61","hashOfConfig":"49"},{"size":6915,"mtime":1618418982175,"results":"62","hashOfConfig":"49"},{"size":3833,"mtime":1618423186432,"results":"63","hashOfConfig":"49"},{"size":9533,"mtime":1618423364213,"results":"64","hashOfConfig":"49"},{"size":1576,"mtime":1615214194986,"results":"65","hashOfConfig":"49"},{"size":1739,"mtime":1615443255969,"results":"66","hashOfConfig":"49"},{"size":440,"mtime":1613505721315,"results":"67","hashOfConfig":"49"},{"size":727,"mtime":1618163366505,"results":"68","hashOfConfig":"49"},{"size":2116,"mtime":1615198211581,"results":"69","hashOfConfig":"49"},{"size":421,"mtime":1614528967086,"results":"70","hashOfConfig":"49"},{"size":747,"mtime":1615434926220,"results":"71","hashOfConfig":"49"},{"size":1822,"mtime":1618052506038,"results":"72","hashOfConfig":"49"},{"size":1572,"mtime":1618066719393,"results":"73","hashOfConfig":"49"},{"size":1704,"mtime":1618052506040,"results":"74","hashOfConfig":"49"},{"size":1156,"mtime":1618052506122,"results":"75","hashOfConfig":"49"},{"size":488,"mtime":1618052506123,"results":"76","hashOfConfig":"49"},{"size":573,"mtime":1618400947391,"results":"77","hashOfConfig":"49"},{"size":2255,"mtime":1614689093224,"results":"78","hashOfConfig":"49"},{"size":1091,"mtime":1614689093239,"results":"79","hashOfConfig":"49"},{"size":522,"mtime":1618052506107,"results":"80","hashOfConfig":"49"},{"size":1643,"mtime":1612354085455,"results":"81","hashOfConfig":"49"},{"size":284,"mtime":1618052506109,"results":"82","hashOfConfig":"49"},{"size":268,"mtime":1618052506108,"results":"83","hashOfConfig":"49"},{"size":981,"mtime":1618483397942,"results":"84","hashOfConfig":"49"},{"size":2159,"mtime":1618339399235,"results":"85","hashOfConfig":"49"},{"size":607,"mtime":1618229829293,"results":"86","hashOfConfig":"49"},{"size":2070,"mtime":1618334881638,"results":"87","hashOfConfig":"49"},{"size":2969,"mtime":1618480405240,"results":"88","hashOfConfig":"49"},{"size":1716,"mtime":1618480173728,"results":"89","hashOfConfig":"49"},{"size":2175,"mtime":1618483001944,"results":"90","hashOfConfig":"49"},{"size":3050,"mtime":1618462048382,"results":"91","hashOfConfig":"49"},{"size":2236,"mtime":1618464535154,"results":"92","hashOfConfig":"49"},{"size":2546,"mtime":1618462190766,"results":"93","hashOfConfig":"49"},{"size":787,"mtime":1618423755981,"results":"94","hashOfConfig":"49"},{"size":306,"mtime":1618423732467,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},"1gexn1j",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"99"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":5,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"99"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"99"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"99"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"99"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"99"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"99"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"114"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"99"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"164","usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"99"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"99"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"99"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"99"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"99"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"99"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\index.js",["213","214","215","216"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//import Pusher from 'pusher-js';\r\n//import Reducer from './Redux/reducers/chat_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n//Pusher.logToConsole = true;\r\n\r\n//useEffect (()=>{\r\n  /* const pusher = new Pusher('18cb37e3146179a6a80e', {\r\n  cluster: 'ap2',\r\n  authEndpoint: 'http://localhost:5000/api/chatapi/pusher/auth'\r\n}); */\r\n/* usher.connection.bind('connected', function () {\r\n  // attach the socket ID to all outgoing Axios requests\r\n  axios.defaults.headers.common['X-Socket-Id'] = pusher.connection.socket_id;\r\n  console.log(\"id:\",pusher.connection.socket_id)\r\n}); */\r\n//},[])\r\n/* var channel = pusher.subscribe('private-my-channel');\r\nchannel.bind('my-event', function(data) {\r\n  console.log(\"in bind\")\r\n  alert(JSON.stringify(data));\r\n  console.log(\"pusher data:\",data)\r\n}); */\r\n\r\n//const myStore = createStore(Reducer, window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n                            //window.__REDUX_DEVTOOLS_EXTENSION__() );\r\n\r\n/* ReactDOM.render(\r\n  <Provider\r\n        store={myStore}\r\n        >\r\n        <App />\r\n  </Provider>\r\n    \r\n  ,\r\n  document.getElementById('root')\r\n); */\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["217","218"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\reportWebVitals.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\App.js",["219","220","221","222","223"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\Login.js",["224","225","226"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport authservice from \"../services/AuthService\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport \"./Login.css\"\r\n//import { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"300px\",\r\n  },\r\n  child: {\r\n    width: \"100%\",\r\n    marginLeft: \"100px\",\r\n    marginTop: \"40px\",\r\n  },\r\n  usericon:{\r\n    fontSize:\"6rem\",\r\n    marginLeft:\"150px\",\r\n    marginTop: \"50px\",\r\n    color:\"rgb(252, 250, 250)\"\r\n  }\r\n  \r\n}));\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = React.useState(\"zeniakiran50@gmail.com\");\r\n  const [password, setPassword] = React.useState(\"12345\");\r\n  return (\r\n    <div id=\"bigdiv\">\r\n    <div className = \"containerlogin\" >\r\n    <AccountCircleIcon className={classes.usericon}/>\r\n      <div className={classes.child}>\r\n      <input type=\"email\" className=\"form-control\" placeholder=\"Email\" \r\n         className=\"tf\" value ={email} onChange={(e) => {\r\n          setEmail(e.target.value);\r\n          }}></input>\r\n        <br />\r\n        <input type=\"password\" className=\"form-control\" placeholder=\"Password\" \r\n         className=\"tf1\" value ={password} onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}></input>\r\n        <br />\r\n        \r\n      </div>\r\n      <Button id=\"btnlogin\"\r\n          variant=\"contained\"\r\n          \r\n          onClick={(e) => {\r\n            authservice\r\n              .login(email, password)\r\n              .then((data) => {\r\n                console.log(\" Data from login \",email);\r\n                localStorage.setItem(\"userId\",email)\r\n                window.location.href = \"/users\";\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n                //toast.error(err.response.data, {\r\n                  //position: toast.POSITION.TOP_LEFT,\r\n                //});\r\n              });\r\n          }}\r\n        >\r\n          Login\r\n        </Button>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\GroupChat.js",["227","228"],"import React, { useState, useEffect ,useRef} from \"react\";\r\nimport TypeMessage from \"./TypeMessage\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\nimport groupservice from \"../../services/GroupService\";\r\nimport \"./chat.css\"\r\n\r\nconst GroupChat = (props) =>{\r\n    let userId = useRef(\"\");\r\n    let recipients = useRef([]);\r\n    let roomId = useRef(\"\");\r\n    let clientSocket = useRef(null);\r\n    let groupName = useRef(\"\")\r\n    useEffect (()=>{\r\n        let groupId = 'bc41dc50-4a2f-4130-a299-8818f9d031fe'//props.match.params.id\r\n        userId.current = localStorage.getItem(\"userId\");\r\n        groupservice.getGroupById(groupId)\r\n        .then((data) => {\r\n            console.log(data) \r\n            recipients.current = data[0].groupMembers\r\n            groupName.current = data[0].groupName\r\n            console.log(recipients.current)\r\n            clientSocket.current = io(\"http://127.0.0.1:5000\");\r\n              clientSocket.current.emit(\r\n                \"roomJoin\",\r\n                { from: userId.current, to: groupName.current },\r\n                ({ error, room }) => {\r\n                  if (!error) {\r\n                    roomId.current = room;\r\n                    console.log(\"joined room with id\", room);\r\n                  } else {\r\n                    console.log(\"error joining room\", error);\r\n                  }\r\n                }\r\n              );\r\n\r\n              clientSocket.current.on(\"messageReceived\", (payload) => {\r\n                console.log(\"Payload\",payload)\r\n            \r\n              });\r\n        }).catch((err)=>{\r\n            console.log(\"Error\",err)\r\n        })\r\n\r\n    },[])\r\n\r\n    useEffect (()=>{\r\n        \r\n\r\n    },[])\r\n\r\n    const sendMessage = (message) =>{\r\n        let messageS = {\r\n            from: userId.current,\r\n            to: groupName.current,\r\n            room: roomId.current,\r\n            messageBody: message,\r\n            time: new Date().toLocaleString(),\r\n            type: \"sent\",\r\n          };\r\n          clientSocket.current.emit(\"messageSend\", messageS, (err) => {\r\n            if (!err) {\r\n                    console.log(\"message sent successfully\");\r\n                    console.log(\"MsgS\",messageS)\r\n             \r\n            } \r\n            else {\r\n                    console.log(\"error sending message:\", err);\r\n            }\r\n          });\r\n      \r\n      \r\n    }\r\n    return (\r\n        <div>\r\n            <TypeMessage sendMessage={sendMessage} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default GroupChat;",["229","230"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\ChatPage.js",["231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./chat.css\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n//import  getChats from \"../../Redux/actions/chat_actions\"\r\nimport chatservice from \"../../services/ChatService\";\r\nimport userservice from \"../../services/UserService\";\r\nimport Chats from \"./Chats\"\r\nimport SingleChat from \"./SingleChat\"\r\nimport SettingMessage from \"./SettingMessage\"\r\nimport SendMessage from \"./SendMessage\"\r\nimport TypeMessage from \"./TypeMessage\"\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '50%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    }\r\n  },\r\n  btn:{\r\n    float:\"right\"\r\n  }\r\n}));\r\n\r\n//import Chats from \"./Chats\";\r\n//import SingleChat from \"./SingleChat\";\r\n\r\nexport default function ChatPage(props) {\r\n  const [chat, setChat] = useState([{ from: \"\", to: \"\", messages: [] }]);\r\n  const [activeChat, setActiveChat] = useState({messages:[]});\r\n  const [rec,setRec] = useState({recipients:[]})\r\n  const [lastmsgs,setLastMsgs] = useState([])\r\n  let userId = localStorage.getItem(\"userId\")\r\n  let chatsfromdb = useRef([])\r\n  let dummy = []\r\n  let recipients = []\r\n  let chatsfromdb1 = useRef([])\r\n  let dummy1 = []\r\n  /* const mychats = useSelector(state => state.chats)\r\n  const dispatch = useDispatch() */\r\n  const classes = useStyles();\r\n  const [show,setShow] = useState(false)\r\n  const [flag,setFlag] = useState(false)\r\n  let recipientInfo = useRef({id: \"\",name:\"\",lang:\"\",url:\"\"})\r\n  const [message, setMessage] = useState(\"\");\r\n  let roomId = useRef(\"\");\r\n  let clientSocket = useRef(null);\r\n\r\n  const activeChatHandler = (rid) => {\r\n    setShow(true)\r\n    console.log(\"active chat handler called with\", rid);\r\n    recipientInfo.current.id=rid\r\n\r\n    userservice.getUserByEmail(rid).\r\n    then((data) =>{\r\n      recipientInfo.current.lang = data.langPreference\r\n      recipientInfo.current.url = data.profileImg\r\n    }).catch((err)=>console.log(err))\r\n\r\n    chatservice.getMessagesbyEmail(userId,rid).\r\n    then((data)=> {\r\n      console.log(data)\r\n      chatsfromdb1.current = data;\r\n      console.log(\"Data\",chatsfromdb1.current)\r\n      if (chatsfromdb1) {\r\n        chatsfromdb1.current.map((chat, index) => {\r\n            dummy1.push(chat)   \r\n        });\r\n      }\r\n      else{\r\n        console.log(\"No chats or some error\")\r\n      }\r\n      setActiveChat({messages:dummy1})\r\n      console.log(\"activechat\",activeChat)\r\n    }).\r\n    catch((err)=>console.log(err))\r\n    clientSocket.current = io(\"http://127.0.0.1:5000\");\r\n    clientSocket.current.emit(\r\n      \"roomJoin\",\r\n      { from: userId, to: recipientInfo.current.id },\r\n      ({ error, room }) => {\r\n        if (!error) {\r\n          roomId.current = room;\r\n          console.log(\"joined room with id\", room);\r\n        } else {\r\n          console.log(\"error joining room\", error);\r\n        }\r\n      }\r\n    );\r\n\r\n    clientSocket.current.on(\"messageReceived\", (payload) => {\r\n      console.log(\"Payload\",payload)\r\n      chatservice.createMessage(payload)\r\n      .then((response)=>console.log(response))\r\n      .catch((err)=>console.log(err))\r\n      setChat((chatState) => {\r\n        if(chatState.messages){\r\n          let newMessages = [...chatState.messages];\r\n        newMessages = [...newMessages, payload];\r\n        return { ...chatState, messages: newMessages };\r\n        }\r\n        else{\r\n          return {messages: [payload] };  \r\n        }\r\n        \r\n      });     \r\n      console.log(\"Received chat\",chat)\r\n      \r\n    });\r\n\r\n  };\r\n \r\n  useEffect(() => {\r\n          \r\n\r\n//console.log(\"Chats\",dispatch(getChats()))\r\n    //console.log(activeCht)\r\n     getRecipients()   \r\n     //props.child(\"getRecipients\")        \r\n  \r\n  },[]);   \r\n  const getRecipients=()=>{\r\n    console.log(\"in recipients\")\r\n    chatservice.getMessagesbyUserId(userId).\r\n    then((response) => {\r\n      console.log(\"Res\",response)\r\n          if(response){\r\n            \r\n          chatsfromdb.current = response\r\n          chatsfromdb.current.map((chat)=>{\r\n                dummy.push(chat.to)\r\n                dummy.push(chat.from)\r\n          })\r\n          const array = Array.from(new Set(dummy));\r\n          array.map((r)=>{\r\n              if(r === userId)\r\n                console.log(\"matched\")\r\n              else\r\n                recipients.push(r)\r\n          })\r\n          setRec({recipients:recipients})\r\n          localStorage.setItem(\"recipients\",rec.recipients)\r\n          \r\n          }\r\n    }).\r\n    catch(err => console.log(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    \r\n          \r\n\r\n}, [activeChatHandler]);\r\n              \r\n  const sendMessage = (message)=>{\r\n      let messageS = {\r\n        from: userId,\r\n        to: recipientInfo.current.id,\r\n        room: roomId.current,\r\n        messageBody: message,\r\n        //translated: returndata,\r\n        time: new Date().toLocaleString(),\r\n        type: \"sent\"\r\n      };\r\n      clientSocket.current.emit(\"messageSend\", messageS, (err) => {\r\n        if (!err) {\r\n                console.log(\"message sent successfully\");\r\n                setFlag(true)\r\n               if(chat.messages){\r\n                setChat({messages : [...chat.messages,messageS]});\r\n                console.log(\"sent chat\",chat)\r\n              }\r\n              else{\r\n                setChat({messages : [messageS]})\r\n                console.log(\"first message \"+ chat)\r\n              } \r\n              getRecipients()\r\n              console.log(\"after get chats\")   \r\n         \r\n        } \r\n        else {\r\n                console.log(\"error sending message:\", err);\r\n        }\r\n        })\r\n  }            \r\n\r\n  let elem = null;\r\n  if(!chat.messages){\r\n      console.log(\"in if part\")\r\n  }\r\n  else{\r\n    console.log(\"in else\")\r\n      elem = (\r\n        <SettingMessage chat={chat} user={userId}/>\r\n      )\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n    {console.log(\"return\")}\r\n      \r\n         \r\n        <div  >\r\n        <h3 className=\"text-center\">Chats</h3>\r\n        <Grid container>\r\n         \r\n        <Grid item xs={7} md={3} style={{borderRight:\"lightgray 2px solid\",height:\"auto\"}} >\r\n            <Chats   recipients = {rec.recipients} setActiveChat={activeChatHandler}/> \r\n            </Grid> \r\n            <Grid item xs={5}  md={9} > \r\n            {\r\n              activeChat.messages != undefined ?\r\n                <div>\r\n                <SingleChat activeChat={activeChat} userId = {userId} rec={rec.recipients.length} />\r\n                </div>\r\n              :\r\n                console.log(\"nope\")\r\n            }\r\n             \r\n            {elem}\r\n            \r\n            {show?\r\n             <div>\r\n                  \r\n                  <InputBase\r\n                    placeholder=\"Type a message\"\r\n                    classes={{\r\n                      root: classes.inputRoot,\r\n                      input: classes.inputInput,\r\n                    }}\r\n                    inputProps={{ 'aria-label': 'type' }}\r\n                    value = {message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                  />\r\n                  <Button className = {classes.btn} \r\n                  variant=\"contained\" \r\n                  color=\"primary\"\r\n                  onClick = {()=>sendMessage(message)}\r\n                  >\r\n                  Send</Button>\r\n                  \r\n             </div> :\r\n             null\r\n             \r\n            }\r\n            </Grid>\r\n            \r\n           \r\n          </Grid>\r\n          \r\n        </div>\r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n",["251","252"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Users.js",["253","254","255","256","257","258","259","260","261","262","263"],"import React, { useState, useEffect ,useRef,useContext} from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\n//import Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import socketIOClient from \"socket.io-client\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport userservice from \"../../services/UserService\";\r\nimport groupservice from \"../../services/GroupService\";\r\nimport { isAuthenticated, logout } from \"../FrontendComponents/clientStorages/auth\";\r\nimport {SocketContext} from '../../context/SocketContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport \"./users.css\"\r\n//import commonUtilites from \"../Utilities/common\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  subheader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  globe: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  subheaderText: {\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  list: {\r\n    maxHeight: \"calc(100vh - 112px)\",\r\n    overflowY: \"auto\",\r\n    \r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(0, 3, 0, 1),\r\n  },\r\n  listText:{\r\n    fontSize : '1.3rem',\r\n    fontFamily : 'Roboto'\r\n  }\r\n  ,listText1:{\r\n    fontSize : '1rem',\r\n    fontFamily : 'Roboto',\r\n    color : 'gray'\r\n  }\r\n  , listBtn:{\r\n    backgroundColor: 'rgb(0, 172, 193)',\r\n    color : 'white',\r\n    fontSize : '1rem'\r\n  }\r\n}));\r\n\r\nconst Users = (props) => {\r\n  const classes = useStyles();\r\n  const [users, setUsers] = useState([]);\r\n  const [newUser, setNewUser] = useState(null);\r\n  const [show, setShow] = React.useState(false)\r\n  let count = useRef(0);\r\n  let userId = useRef(\"\");\r\n  let name = useRef(\"\")\r\n  let userslist = useRef([])\r\n  let history = useHistory();\r\n  let recipients = []\r\n  const clientSocket = useContext(SocketContext);\r\n  //const getUsers = useGetUsers();\r\n  const getData = () => {\r\n    userId.current= localStorage.getItem(\"userId\")\r\n    console.log(userId.current)\r\n    userservice.getUsers()\r\n   .then((data) => {\r\n        userslist.current = data\r\n        userslist.current = userslist.current.filter((u)=>{\r\n          return u.email !== userId.current\r\n        })\r\n        setUsers(userslist.current ); \r\n        console.log(\"contacts\",users)\r\n  })\r\n   .catch((err) => console.log(\"This is err\"+ err));\r\n}\r\n  useEffect(()=>{\r\n    getData()\r\n    console.log(clientSocket)\r\n    if(clientSocket!==undefined)\r\n      clientSocket.emit(\"adduser\",{id:clientSocket.id, name: userId.current})\r\n  },[]);\r\n\r\n    const userClickHandler = (u) =>{\r\n        let email = u.email\r\n        let fname= u.firstName\r\n        let lname = u.lastName\r\n        let lang = u.langPreference\r\n        let profileUrl = u.profileImg\r\n        let x = fname+' '+lname\r\n        localStorage.setItem(\"recName\",x)\r\n        localStorage.setItem(\"recLang\",lang)\r\n        localStorage.setItem(\"profileUrl\",profileUrl)\r\n        history.push('/chat/'+email); \r\n        \r\n  }\r\n\r\n  const viewButtonHandler = ()=>{\r\n    history.push('/mychats/'); \r\n  }\r\n    const showButtons = ()=>{\r\n      setShow(true)\r\n    }\r\n\r\n    const addGroupMember = (e)=>{\r\n          console.log(\"target\",e)\r\n          count.current = count.current+1\r\n          console.log(\"count\",count)\r\n        recipients.push(e)\r\n        console.log(\"Rec\",recipients)\r\n    }\r\n\r\n    const createGroup = () =>{\r\n      if(recipients.length > 1){\r\n        let groupMembers = recipients\r\n        let groupName = name.current\r\n        let groupId = uuidv4();\r\n        let createdBy = userId.current\r\n        groupservice.createGroup({groupName,groupId,createdBy,groupMembers})\r\n              .then((data)=>{\r\n                  console.log(\"Created successfully\",data);\r\n                  history.push('/groupchat'+'/'+groupId)\r\n                  //getData();\r\n                })\r\n              .catch((err)=>{console.log(\"Some Err\")})\r\n        //history.push('/chat/'+address);\r\n        //history.push('/groupchat'+'/'+name.current+'/'+address)\r\n      }\r\n    }\r\n\r\n    const nameHandler = (e) =>{\r\n      name.current = e.target.value\r\n      console.log(name.current)\r\n    }\r\n    const handleLogOut = (evt) => {\r\n      logout(() => {\r\n        history.push(\"/login\");\r\n      });\r\n    };\r\n\r\n  /* useEffect(() => {\r\n    getUsers().then((res) => setUsers(res));\r\n  }, [newUser]); */\r\n\r\n  /* useEffect(() => {\r\n    const socket = socketIOClient(process.env.REACT_APP_API_URL);\r\n    socket.on(\"users\", (data) => {\r\n      setNewUser(data);\r\n    });\r\n  }, []); */\r\n\r\n  return (\r\n    <div>\r\n     {/*<Button onClick={showButtons} variant=\"contained\" color=\"primary\">\r\n        Create Group\r\n      </Button>*/}\r\n      <button\r\n        className=\"btn text-decoration-none btn-link   pl-0\"\r\n        style={{textDecoration:\"none\"}}\r\n        onClick={handleLogOut}\r\n      >\r\n        <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i> Logout\r\n      </button>\r\n      <h3 className=\" text-center\">Contacts</h3>\r\n      <List className={classes.list}>\r\n      {users && (\r\n        <React.Fragment>\r\n          {users.map((u) => (\r\n            <div>\r\n            <ListItem\r\n              className={classes.listItem}\r\n              button\r\n            >\r\n             <ListItemAvatar>\r\n             <Avatar className={classes.globe}>\r\n                <FaceIcon/>\r\n              </Avatar>\r\n            </ListItemAvatar> \r\n              <ListItemText onClick={() => userClickHandler(u)}>\r\n                <Typography className={classes.listText}>{u.firstName}&nbsp;{u.lastName}</Typography>\r\n                <Typography className={classes.listText1}>{u.email}</Typography>\r\n              </ListItemText>\r\n              {/* show ? \r\n              <Button onClick = {() => addGroupMember(u.email)} variant=\"contained\" color=\"primary\">\r\n                Add\r\n              </Button>\r\n              : null */}\r\n              <Button variant=\"contained\" className={classes.listBtn}\r\n              onClick={viewButtonHandler}>View</Button>\r\n            </ListItem>\r\n            <Divider/> \r\n            \r\n            </div>\r\n          ))}\r\n          {/* show ? \r\n              <div>\r\n                <TextField onChange = {nameHandler} id=\"standard-basic\" label=\"Group Name\" />\r\n                <Button onClick = {createGroup} variant=\"contained\" color=\"primary\">\r\n                  Create\r\n                </Button>\r\n                </div>\r\n          : null*/ }\r\n          \r\n        </React.Fragment>\r\n      )}\r\n    </List>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Users;\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\userDashboard.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\notFound.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SignUp.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Chat.js",["264","265","266","267","268","269","270","271","272","273","274","275"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\forgotPassword.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\resetPassword.js",["276"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from 'clsx';\r\nimport accountService from \"../../../services/accountService\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  InputAdornment,\r\n  InputLabel,\r\n  FormControl,\r\n  Input,\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\n import { grey, cyan,indigo} from '@material-ui/core/colors';\r\nimport isEmpty from \"validator/lib/isEmpty\";\r\nimport equals from \"validator/lib/equals\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\n const useStyles = makeStyles((theme) => ({\r\n  textfield: {\r\n     margin: theme.spacing(1),\r\n  },\r\n   margin:{\r\n     marginTop: \"1.2rem\"\r\n   } \r\n}));\r\n\r\nconst ResetPassword = ({ match }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    token: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    errorMessage: \"\",\r\n    successMsg: \"\",\r\n    showPassword: false,\r\n    showPassword1: false,\r\n    loading: false,\r\n  });\r\n  \r\n   const {\r\n    token,\r\n    password,\r\n    confirmPassword,\r\n    errorMessage,\r\n    successMsg,\r\n    loading,\r\n  } = values;\r\n\r\n    useEffect(() => {\r\n        let token = match.params.token\r\n        if(token) {\r\n            setValues({...values, token})\r\n        }\r\n    }, [])\r\n    const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n   const handleChange = (prop) => (event) => {\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n      errorMessage: \"\",\r\n      successMsg: \"\",\r\n    });\r\n  };\r\n const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n  const handleClickShowConfirmPassword = () => {\r\n    setValues({ ...values, showPassword1: !values.showPassword1 });\r\n  };\r\n   const ResetPasswordBtn = (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      isEmpty(password) ||\r\n      isEmpty(confirmPassword)\r\n    ) {\r\n      setValues({ ...values, errorMessage: \"All fields are required\" });\r\n    } else if (!equals(password, confirmPassword)) {\r\n      setValues({ ...values, errorMessage: \"Passwords do not match\" });\r\n    } else {\r\n  \r\n     \r\n      setValues({ ...values, loading: true });\r\n     accountService.resetPassword( { newPassword: password, resetPasswordLink: token})\r\n        .then((response) => {\r\n          setValues({\r\n            ...values,\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errorMessage: false,\r\n            successMsg: response.successMessage,\r\n            loading: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setValues({\r\n            ...values,\r\n             password: \"\",\r\n            confirmPassword: \"\",\r\n            loading: false,\r\n            errorMessage: err.response.data.errorMessage,\r\n          });\r\n        });\r\n    }\r\n  };\r\n     \r\n  const ResetPasswordForm=()=>(\r\n      \r\n    <Grid container >\r\n      <Grid item xs={1} sm={3} md={4}></Grid>\r\n        <Grid item xs={10} sm ={6} md={4}>\r\n          <Paper style={{padding: '30px 50px'}} >\r\n          <Button  \r\n            className= \"loginbtn\"\r\n            href=\"https://mail.google.com/mail/u/0/#inbox\"\r\n            color=\"primary\"\r\n           style={{marginBottom:\"2rem\" ,paddingLeft:\"0rem\",color:indigo[800]  }}\r\n          >\r\n           <ArrowBackIcon style={{fontWeight:\"bold\",marginRight:\"0.3rem\"}}/> Go Back\r\n          </Button>\r\n             <FormControl className={clsx( classes.textField)} fullWidth>\r\n         <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> New Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\" }}>*</Typography>\r\n         </InputLabel>\r\n                    <Input\r\n            id=\"standard-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n              \r\n          startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <LockIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n        \r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n         \r\n          <FormControl className={clsx(classes.margin, classes.textField)} fullWidth>\r\n                 <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> Confirm Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\" }}>*</Typography>\r\n         </InputLabel>\r\n           <Input\r\n            id=\"standard-adornment-confirmPassword\"\r\n            type={values.showPassword1 ? 'text' : 'password'}\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange('confirmPassword')}\r\n             startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <VpnKeyIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowConfirmPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword1 ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n    \r\n         <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n              }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={ResetPasswordBtn}\r\n          >\r\n            Reset Password \r\n          </Button>\r\n          {successMsg &&  <Button\r\n                     style={{  \r\n                     backgroundColor:grey[500],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"outline\"\r\n            fullWidth\r\n            onClick={event =>  window.location.href='/login'}\r\n                  >\r\n                      Login\r\n                  </Button>}\r\n           </Paper>\r\n        </Grid>\r\n     <Grid item xs={1} sm={3} md={4}></Grid>\r\n    </Grid>\r\n       \r\n  );   \r\n  return (\r\n  <div>\r\n        {loading && <LinearBuffer />}\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={4000} />\r\n      )}\r\n       <PageTitle name= {\"Reset Password\"}/>\r\n      {ResetPasswordForm()}\r\n      \r\n  </div>)\r\n      }\r\nexport default ResetPassword;\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\LogIn.js",["277"],"import React, { useState, useEffect ,useContext} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from 'clsx';\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  Input,\r\n  InputAdornment,\r\n  Typography,\r\n  Paper,\r\n  IconButton,\r\n  InputLabel\r\n} from \"@material-ui/core\";\r\nimport { grey, cyan} from '@material-ui/core/colors';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport isEmpty from \"validator/lib/isEmpty\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport { login } from \"../api/auth\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { authentication, isAuthenticated } from \"../clientStorages/auth\";\r\n \r\nconst useStyles = makeStyles((theme) => ({\r\n   textField: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  margin:{\r\n    marginBottom: theme.spacing(2),\r\n    \r\n  }\r\n}));\r\nconst LogIn = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    if (isAuthenticated() && isAuthenticated().role === 1)\r\n      history.push(\"/admin/dashboard\");\r\n    else if (isAuthenticated() && isAuthenticated().role === 0)\r\n      history.push(\"/user/dashboard\");\r\n     \r\n      \r\n  }, [history]);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    errorMessage: \"\",\r\n    showPassword: false,\r\n    loading: false,\r\n  });\r\n  const { email, password, errorMessage, loading } = values;\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n      errorMessage: \"\",\r\n    });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n   const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const handleTextChange = (evt) => {\r\n    setValues({\r\n      ...values,\r\n      [evt.target.name]: evt.target.value,\r\n      errorMessage: \"\",\r\n    });\r\n  };\r\n  const Register = (event) => {\r\n    event.preventDefault();\r\n    if (isEmpty(email) || isEmpty(password)) {\r\n      setValues({ ...values, errorMessage: \"Both fields are required\" });\r\n    } else if (!isEmail(email)) {\r\n      setValues({ ...values, errorMessage: \"Invalid Email\" });\r\n    } else {\r\n      setValues({ ...values, loading: true });\r\n      const { email, password } = values;\r\n      const data = { email, password };\r\n\r\n      login(data)\r\n        .then((response) => {\r\n          authentication(response.data.token, response.data.user);\r\n          console.log(response)\r\n          if (isAuthenticated() && isAuthenticated().role === 1)\r\n            history.push(\"/dashboard\");\r\n          else {\r\n        history.push(\"/dashboard\");};\r\n          setValues({ ...values, loading: false });\r\n        })\r\n        .catch((err) => {\r\n          setValues({\r\n            ...values,\r\n            password:\"\",\r\n            loading: false,\r\n            errorMessage: err.response.data.errorMessage,\r\n          });\r\n        });\r\n    }\r\n  };\r\n  \r\n  const LogInForm = () => (\r\n    <div className=\"Login-container\">\r\n      <Grid container>\r\n        <Grid item xs={1} sm={3} md={4}></Grid>\r\n        <Grid item xs={10} sm={6} md={4}>\r\n           <Paper style={{padding: '30px 50px'}} > \r\n            <Grid container style={{textAlign:\"center\"}}>\r\n          <Grid item xs={6} >\r\n            <Link className=\"active-header\"  to=\"/login\">Sign In</Link>      \r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Link className=\"header\" to=\"/signup\">Sign Up</Link>\r\n          </Grid>\r\n\r\n        </Grid>\r\n           <TextField\r\n           className={classes.textField}\r\n           style={{marginTop:\"2rem\"}}\r\n            label={\r\n              <div> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> Email Address </Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\"}}>*</Typography>\r\n                  </div>\r\n                  }\r\n            id=\"email-field\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            fullWidth\r\n            onChange={handleTextChange}\r\n             InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n             <EmailIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          ),\r\n         }}\r\n          />\r\n          \r\n         <FormControl className={clsx(classes.margin, classes.textField)} fullWidth>\r\n         <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\"}}>*</Typography>\r\n         </InputLabel>\r\n                    <Input\r\n            id=\"standard-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n              \r\n          startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <VpnKeyIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n        \r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n         </FormControl>\r\n            <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginBottom: \"1.2rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={Register}\r\n          >\r\n            Sign in\r\n          </Button>\r\n           <Link to=\"/forgot-password\" style={{textDecoration:\"none\",marginLeft:\"1rem auto\"}}  >Forgot Password?</Link>\r\n   </Paper>\r\n         </Grid>\r\n        <Grid item xs={1} sm={3} md={4}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      {loading && <LinearBuffer />}\r\n     \r\n             <PageTitle name= {\"TalkSee\"}/>\r\n      {LogInForm()}\r\n      \r\n     \r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n       \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\Activate.js",["278","279"],"import React, { useState, useEffect } from 'react';\r\nimport accountService from \"../../../services/accountService\";\r\nimport jwt from 'jsonwebtoken';\r\nimport { grey,green, cyan,red} from '@material-ui/core/colors';\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\nimport PageTitle from \"./pageTitle\";\r\nconst Activate = ({ match }) => {\r\n let token1 = match.params.token;\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    token: '',\r\n    errorMessage: \"\",\r\n    successMsg: \"\",\r\n  });\r\n   const { firstName,lastName, token, errorMessage, successMsg} = formData;\r\n   \r\n  useEffect(() => {\r\n    let token = match.params.token;\r\n    let { firstName } = jwt.decode(token);\r\n    let { lastName } = jwt.decode(token);\r\n    if (token) {\r\n      setFormData({ ...formData, firstName,lastName,  token });  \r\n      accountService.accountActivation({token})\r\n      .then(response => {\r\n        setFormData({\r\n          ...formData,\r\n          errorMessage: false,\r\n          successMsg: response.successMessage,\r\n          firstName: response.firstName,\r\n          lastName: response.lastName,\r\n        });\r\n      })\r\n      .catch(err => {\r\n      setFormData({\r\n          ...formData,\r\n          successMsg: false,\r\n         errorMessage: err.response.data.errorMessage,\r\n          firstName: err.response.data.firstName,\r\n          lastName: err.response.data.lastName,\r\n        });\r\n      });\r\n    }}, [match.params]);\r\n     \r\n  \r\n  const ActivationSuccess=()=>(\r\n<div> \r\n  <Grid container > \r\n <Grid item xs={1} sm={3} md={4}></Grid>\r\n  <Grid item xs={1} sm={3} md={4}> \r\n  \r\n      <p><strong>Hi {firstName +\" \"+lastName}</strong></p>\r\n        <div>  <CheckCircleRoundedIcon \r\n              style = {{ color: green[600],paddingTop:\"0.3rem\" }}/>  \r\n           <span style ={{fontSize:\"1.3rem\"}} > Your account has been successfully verified. Click below to create your profile</span></div>\r\n      <Button\r\n             style={{ \r\n               color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\" }}\r\n              variant=\"contained\"\r\n              className= \"loginbtn\"\r\n              onClick={event =>  window.location.href='/profile-setup/'+token1}\r\n             \r\n          >\r\n            Create Profile\r\n          </Button>\r\n          </Grid>\r\n          <Grid item xs={1} sm={3} md={4}></Grid>\r\n          </Grid>\r\n   </div>\r\n\r\n\r\n  );\r\n   const ActivationFailure=()=>(\r\n<div> \r\n  <Grid container > \r\n <Grid item xs={1} sm={3} md={4}></Grid>\r\n  <Grid item xs={1} sm={3} md={4}> \r\n  \r\n      <p><strong>Hi {firstName+\" \"+lastName}</strong></p>\r\n        <div>  <CancelRoundedIcon \r\n              style = {{ color: red[600]  }}/>  \r\n           <span style ={{fontSize:\"1.3rem\"}} > <strong>{errorMessage}</strong> </span></div>\r\n      <Button\r\n             style={{ \r\n               color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\" }}\r\n            variant=\"contained\"\r\n             className= \"loginbtn\"\r\n            onClick={event =>  window.location.href='/signup'}\r\n             \r\n          >\r\n               Try  Again   \r\n          </Button>\r\n          </Grid>\r\n          <Grid item xs={1} sm={3} md={4}></Grid>\r\n          </Grid>\r\n   </div>\r\n\r\n\r\n  );\r\n  return (\r\n  <div>\r\n        <PageTitle name= {\"Activation\"}/>\r\n       {errorMessage && ( ActivationFailure())}\r\n       {successMsg && (ActivationSuccess())}\r\n  </div>)\r\n      }\r\nexport default Activate;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\profileSetup.js",["280","281","282"],"import React, { useState, useEffect } from \"react\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport Select from \"react-select\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport { grey, cyan} from '@material-ui/core/colors';\r\nimport {Button} from \"@material-ui/core\";\r\nimport axios from 'axios';\r\nimport accountService from \"../../../services/accountService\";\r\nconst useStyles = makeStyles({\r\n  \r\n  textfield: {\r\n    marginTop: \"2rem\",\r\n  },\r\n  Submitbtn: {\r\n    marginTop: \"0.6rem\",\r\n  },\r\n});\r\n\r\n\r\n\r\nconst ProfileSetup = ( {match}) => {\r\n    const classes = useStyles();\r\nconst options = [\r\n  { label: 'Afrikaans',value:'af' },\r\n  { label: 'Albanian',value:'sq'},\r\n  { label: 'Amharic',value:'am'},\r\n  { label: 'Arabic',value:'ar'},\r\n  { label: 'Armenian',value:'hy'},\r\n  { label: 'Azerbaijani',value:'az'},\r\n  { label: 'Basque',value:'eu'},\r\n  { label: 'Belarusian',value:'be'},\r\n  { label: 'Bengali',value:'bn'},\r\n  { label: 'Bosnian',value:'bs'},\r\n  { label: 'Bulgarian',value:'bg'},\r\n  { label: 'Catalan',value:'ca'},\r\n  { label: 'Cebuano',value:'ceb'},\r\n  { label: 'Chichewa',value:'ny'},\r\n  { label: 'Chinese',value:'zh-cn'},\r\n  { label: 'Corsican',value:'co'},\r\n  { label: 'Croatian',value:'hr'},\r\n  { label: 'Czech',value:'cs'},\r\n  { label: 'Danish',value:'da'},\r\n  { label: 'Dutch',value:'nl'},\r\n  { label: 'English',value:'en'},\r\n  { label: 'Esperanto',value:'eo'},\r\n  { label: 'Estonian',value:'et'},\r\n  { label: 'Filipino',value:'tl'},\r\n  { label: 'Finnish',value:'fi'},\r\n  { label: 'French',value:'fr'},\r\n  { label: 'Danish',value:'da'},\r\n  {label: 'Frisian',value: \"fy\"},\r\n  {label: 'Galician',value: \"gl\"},\r\n  {label: 'Georgian',value: \"ka\"},\r\n  {label: 'German',value: \"de\"},\r\n  {label: 'Greek',value: \"el\"},\r\n  {label: 'Gujarati',value: \"gu\"},\r\n  {label: 'Haitian creole',value: \"ht\"},\r\n  {label:'Hausa',value: \"ha\"},\r\n  {label:'Hawaiian',value: \"haw\"},\r\n  {label:'Hebrew',value: \"iw\"},\r\n  {label: 'Hindi',value: \"hi\"},\r\n  {label:'Hmong',value: \"hmn\"},\r\n  {label:'Hungarian',value: \"hu\"},\r\n  {label:'Icelandic',value: \"is\"},\r\n  {label:'Igbo',value: \"ig\"},\r\n  {label:'Indonesian',value: \"id\"},\r\n  {label:'Irish',value: \"ga\"},\r\n  {label:'Italian',value: \"it\"},\r\n  {label:'Japanese',value: \"ja\"},\r\n  {label:'Javanese',value: \"jw\"},\r\n  {label:'Kannada',value: \"kn\"},\r\n  {label:'Kazakh',value: \"kk\"},\r\n  {label:'Khmer',value:'km'},\r\n  {label:'Korean',value:'ko'},\r\n  {label:'Kurdish',value:'ku'},\r\n  {label: 'Kyrgyz',value: \"ky\"},\r\n  {label: 'Lao',value: \"lo\"},\r\n  {label: 'Latin',value: \"la\"},\r\n  {label: 'Latvian',value: \"lv\"},\r\n  {label: 'Lithuanian',value: \"lt\"},\r\n  {label: 'Luxembourgish',value: \"lb\"},\r\n  {label: 'Macedonian',value: \"mk\"},\r\n  {label:'Malagasy',value: \"mg\"},\r\n  {label:'Malay',value: \"ms\"},\r\n  {label:'Malayalam',value: \"ml\"},\r\n  {label: 'Maltese',value: \"mt\"},\r\n  {label:'Maori',value: \"mi\"},\r\n  {label:'Marathi',value: \"mr\"},\r\n  {label:'Mongolian',value: \"mn\"},\r\n  {label:'Myanmar (burmese)',value: \"my\"},\r\n  {label:'Nepali',value: \"ne\"},\r\n  {label:'Norwegian',value: \"no\"},\r\n  {label:'Odia',value: \"or\"},\r\n  {label:'Pashto',value: \"ps\"},\r\n  {label:'Persian',value: \"fa\"},\r\n  {label:'Polish',value: \"pl\"},\r\n  {label:'Portuguese',value: \"pt\"},\r\n  {label:'Punjabi',value: \"pa\"},\r\n  {label :'Romanian', value:\"ro\"},\r\n  {label :'Russian', value:\"ru\"},\r\n  {label:'Samoan',value: \"sm\"},\r\n  {label:'Scots gaelic',value: \"gd\"},\r\n  {label:'Serbian',value: \"sr\"},\r\n  {label:'Sesotho',value: \"st\"},\r\n  {label:'Shona',value: \"sn\"},\r\n  {label:'Sindhi',value: \"sd\"},\r\n  {label:'Sinhala',value: \"si\"},\r\n  {label:'Slovak',value: \"sk\"},\r\n  {label:'Slovenian', value:\"sl\"},\r\n  {label:'Somali', value:\"so\"},\r\n  {label:'Spanish', value:'es' },\r\n  {label:'Sundanese',value: \"su\"},\r\n  {label:'Swahili',value: \"sw\"},\r\n  {label:'Swedish',value: \"sv\"},\r\n  {label:'Tajik',value: \"tg\"},\r\n  {label:'Tamil',value: \"ta\"},\r\n  {label:'Telugu',value: \"te\"},\r\n  {label:'Thai',value: \"th\"},\r\n  {label:'Turkish',value: \"tr\"},\r\n  {label :'Ukrainian', value:\"uk\"},\r\n  {label:'Urdu',value: \"ur\"},\r\n  {label :'Uyghur', value:\"ug\"},\r\n  {label:'Uzbek', value:'uz' },\r\n  {label:'Vietnamese',value: \"vi\"},\r\n  {label :'Welsh', value:\"cy\"},\r\n  {label:'Xhosa',value: \"xh\"},\r\n  {label :'Yiddish', value:\"yi\"},\r\n  {label:'Yoruba', value:'yo' },\r\n  {label:'Zulu',value: \"zu\"},\r\n  \r\n];\r\n    const [values, setValues] = useState({\r\n    img: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\r\n    language:\"\",\r\n    token:\"\",\r\n    errorMessage: \"\",\r\n    successMsg:\"\",\r\n    infoMessage:\"\",\r\n    loading: false,\r\n  });\r\n  const { img,language,token, successMsg, errorMessage,infoMessage, loading } = values;\r\nuseEffect(() => {\r\n        let token = match.params.token\r\n        if(token) {\r\n            setValues({...values, token})\r\n        }\r\n    }, [])\r\n\r\nconst resizeFile = (file) => new Promise(resolve => {\r\n    Resizer.imageFileResizer(file, 300, 300, 'JPEG', 100, 0,\r\n    uri => {resolve(uri);},'base64' );\r\n});\r\n const uploadImage = async (e) => {\r\n  try {\r\n           const imageFile = e.target.files[0];\r\n           const data = new FormData();\r\n           data.append(\"file\", imageFile);\r\n           //axios.post(\"http://127.0.0.1:5000/\",data)\r\n         //.then(async (response) => {\r\n           setValues({ ...values , errorMessage :\"\", successMsg:\"response.data.successMessage\"})\r\n            const compressedImage = await resizeFile(imageFile);\r\n           setValues({...values, infoMessage: \"Loading....\"});\r\n           data.append(\"file\", compressedImage);\r\n           data.append(\"upload_preset\", \"TalkSee\");\r\n           const res = await fetch(\"https://api.cloudinary.com/v1_1/fariha31/image/upload\",\r\n              { method: \"POST\",\r\n                body: data,\r\n             } );   \r\n           const file =  await res.json();\r\n           setValues({ ...values , img: file.secure_url});\r\n        //})\r\n        /* .catch((err) => {\r\n            setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });*/\r\n      } \r\n catch(err)\r\n     {setValues({...values, errorMessage: \"error in uploading photo\"}); }\r\n}\r\nconst SetProfile =()=>{\r\n  accountService.profileSetup({profileImg: img, langPreference: language, token})\r\n .then((response) => {\r\n          setValues({\r\n            ...values,\r\n            img: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\r\n            language:\"\",\r\n            errorMessage: false,\r\n            successMsg: response.successMessage,\r\n            loading: false,\r\n          });\r\n        })\r\n         .catch((err) => {\r\n           setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n}\r\n \r\n  const ProfilePage = () =>( \r\n  <div className=\"profile-page\">\r\n      <div className=\"profile-container\">\r\n          <div className=\"img-holder\">\r\n             <img src={img} className=\"profile-img\"/>\r\n              </div>\r\n             <input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={uploadImage}  />\r\n             <div className=\"label\">\r\n                   <label className=\"image-upload\" htmlFor=\"input\">\r\n\t\t\t\t\t\t<i className=\"material-icons\">add_photo_alternate</i>\r\n\t\t\t\t\t\tChoose Profile Photo\r\n\t\t\t\t\t</label>\r\n                 </div>\r\n                  \r\n              <Select\r\n                    style={{ width: 210, padding: \"0.4rem\" }}\r\n                    placeholder=\"Select Language ---\"\r\n                    value={options.find(c => c.label === language)}\r\n                    className={classes.textfield}\r\n                    options={options}\r\n                    onChange={(e) => {\r\n                      console.log(e)\r\n                      setValues({\r\n                        ...values,\r\n                        language:e.value ,\r\n                      });\r\n                      \r\n                    }}\r\n                  />\r\n                   <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"0.5rem\" , \r\n              marginTop: \"1.5rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={SetProfile}\r\n            \r\n          >\r\n            Set Profile\r\n          </Button>\r\n                   {successMsg &&  <Button\r\n                     style={{  \r\n                     backgroundColor:grey[500],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"outline\"\r\n            fullWidth\r\n            onClick={event =>  window.location.href='/login'}\r\n                  >\r\n                      Login\r\n                  </Button>}\r\n      </div>             \r\n  </div>\r\n)\r\nreturn (<div>\r\n    \r\n    {loading && <LinearBuffer />}\r\n     <PageTitle name= {\"Profile Setup\"}/>\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n       {infoMessage && (\r\n        <AlertBar type=\"info\" message={infoMessage} autoClose={8000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={4000} />\r\n      )}\r\n      {ProfilePage()}\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default ProfileSetup;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\TypeMessage.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\SendMessage.js",["283"],"import React, { useEffect, useRef } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"./chat.css\"\r\nexport default function SendMessage(props) {\r\n  let roomId = useRef(\"\");\r\n  let clientSocket = useRef(null);\r\n  console.log(\"rec\",props.recipientId)\r\n\r\n    useEffect(() => {\r\n            clientSocket.current = io(\"http://127.0.0.1:5000\");\r\n                    clientSocket.current.emit(\r\n                      \"roomJoin\",\r\n                      { from: props.userId, to: props.recipientId },\r\n                      ({ error, room }) => {\r\n                        if (!error) {\r\n                          roomId.current = room;\r\n                          console.log(\"joined room with id\", room);\r\n                        } else {\r\n                          console.log(\"error joining room\", error);\r\n                        }\r\n                      }\r\n                    );\r\n      \r\n                    clientSocket.current.on(\"messageReceived\", (payload) => {\r\n                      console.log(\"Payload\",payload)\r\n                    \r\n                      /* setChat((chatState) => {\r\n                        if(chatState.messages){\r\n                          let newMessages = [...chatState.messages];\r\n                        newMessages = [...newMessages, payload];\r\n                        return { ...chatState, messages: newMessages };\r\n                        }\r\n                        else{\r\n                          return {messages: [payload] };  \r\n                        }\r\n                        \r\n                      });      */\r\n                      //console.log(\"Received chat\",chat)\r\n                    });\r\n      \r\n      \r\n      }, []);\r\n  return (\r\n      <div>\r\n          hello\r\n      </div>\r\n  )\r\n}","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\GroupService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\ChatService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\Header.js",["284"],"import React, { Fragment, useContext } from \"react\";\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\nimport { isAuthenticated, logout } from \"../clientStorages/auth\";\n \n\nconst Header = ({ history }) => {\n  history = useHistory();\n\n  const handleLogOut = (evt) => {\n    logout(() => {\n      history.push(\"/login\");\n    });\n  };\n\n  const showNavbar = () => (\n    <div>\n      <nav id=\"nav\" className=\"navbar navbar-expand-lg navbar-light mt-0\">\n\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavDropdown\"\n          aria-controls=\"navbarNavDropdown\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n          <ul\n            className=\"\n              navbar-nav\n              ml-auto\n              mt-2\n              mt-lg-0\"\n            style={{ padding: \"0.6rem\" }}\n          >\n            \n\n            {isAuthenticated() && isAuthenticated().role === 0 && (\n              <Fragment>\n                <li className=\"nav-item\">\n                  <Link to=\"/notFound\" className=\"nav-link \">\n                     \n                  </Link>\n                </li>\n                <li className=\"nav-item \">\n                  <Link to=\"/\"  className=\"nav-link \" >\n                     \n                  </Link>\n                </li>\n                 <li className=\"nav-item\">\n                  <button\n                    className=\"btn text-decoration-none btn-link   pl-0\"\n                    style={{textDecoration:\"none\"}}\n                    onClick={handleLogOut}\n                  >\n                    <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i> Logout\n                  </button>\n                </li>\n              </Fragment>\n            )}\n             \n            \n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n  return <header>{showNavbar()}</header>;\n};\n\nexport default withRouter(Header);\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\UserService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\pageTitle.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Chats.js",["285","286","287","288"],"import React,{useRef,useEffect,useState} from \"react\";\r\nimport './chat.css'\r\nimport chatservice from \"../../services/ChatService\";\r\n\r\nexport default function Chats(props) {\r\n  let contacts = [\"Fariha\"]\r\n  /* console.log(\"Chats,\",props.lastmsgs)*/\r\n  //console.log(\"Rec,\",props.recipients) \r\n  let recipients = props.recipients\r\n  const onClickHandler =(e)=>{\r\n    props.setActiveChat(e);\r\n  }\r\nuseEffect (()=>{\r\n   \r\n},[])\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div  >\r\n        <div >\r\n        {/* {console.log(\"in return\",lastmsgs)} */}\r\n          {\r\n                  recipients.map((r,index) => {\r\n                    //{\r\n                      //console.log(lastmsgs,index)\r\n                      return (\r\n                      \r\n                      <div className=\"chat_list\">\r\n                      {/* {console.log(\"in return\")} */}\r\n                      <div className=\"chat_people\">\r\n                        <div className=\"chat_img\">\r\n                          <img\r\n                            src=\"https://ptetutorials.com/images/user-profile.png\"\r\n                            alt=\"sunil\"\r\n                          />\r\n                        </div>\r\n                        <div\r\n                          className=\"chat_ib\"\r\n                          onClick={() => onClickHandler(r)}\r\n                        >\r\n                          <p>\r\n                            {r}\r\n                          </p>\r\n                          {\r\n                           \r\n                          }\r\n                          \r\n                          \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    );\r\n                })\r\n          \r\n          }\r\n        </div>\r\n      </div>\r\n      {/* </div> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\SettingMessage.js",["289","290"],"import React from \"react\";\r\nimport \"./chat.css\"\r\n//import myimg from \"./queen.jpg\"\r\nimport { Player } from 'video-react';\r\nimport \"video-react/dist/video-react.css\"\r\nexport default function TypeMessage(props) {\r\n  //console.log(\"From setting\",props.chat)\r\n  return (\r\n    props.chat.messages.map((message) => {\r\n        //console.log(\"msg\",message)\r\n        //console.log(\"user\",props.user)\r\n      if (message.to === props.user) {\r\n        //console.log(\"Type received\")\r\n        return (\r\n          <div className ='msgdiv'>\r\n          <div className=\"incoming_msg_img\">\r\n           \r\n          </div>\r\n            <div className=\"received_msg\">\r\n              <div className=\"received_withd_msg\">\r\n                <div> \r\n                {/* <Player >\r\n                  <source src={message.messageVideo} />\r\n              </Player> */}\r\n                </div>\r\n              \r\n                <p>{message.messageBody}</p>\r\n                <span className=\"time_date\"> {message.time}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else if(message.from === props.user) {\r\n        return (\r\n          <div class=\"outgoing_msg\">\r\n            <div class=\"sent_msg\">\r\n            {/* <Player>\r\n                  <source src={message.messageVideo} />\r\n              </Player> */}\r\n              <p>{message.messageBody}</p>\r\n              <span class=\"time_date\"> {message.time}</span>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else{\r\n        console.log(\"nothing\")\r\n      }\r\n        \r\n    })\r\n  );\r\n}\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\SingleChat.js",["291","292","293","294","295","296"],"import React, { useEffect, useState,useRef } from \"react\";\r\nimport TypeMessage from \"./TypeMessage\"\r\n//import \"./chat.css\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SettingMessage from \"./SettingMessage\"\r\nimport userservice from \"../../services/UserService\"\r\nexport default function SingleChat(props) {\r\n  //\r\n  // const [chat, setChat] = useState(props.activeChat);\r\n  const [showLoading, setShowLoading] = useState(false)\r\n  let userId = props.userId\r\n  const [userName,setUName] = useState(\"\")\r\n  //console.log(\"single chat:\",props.activeChat.messages.length);\r\n useEffect (()=>{\r\n    userservice.getUserByEmail(userId)\r\n    .then((user)=> setUName(user[0].firstName)).\r\n    catch((err)=>console.log(err))\r\n },[userName])\r\n  let element = null;\r\n    if(props.activeChat.messages.length>=1){\r\n      element = (\r\n        <SettingMessage chat={props.activeChat} user={userId}/>\r\n      )\r\n      //console.log(\"IF\")\r\n    }\r\n    else if(props.rec>0){\r\n      element=(\r\n        <div className=\"div-center\">\r\n              <Typography  style={{marginLeft:\"2rem\"}}>Hey &nbsp;{userName}! </Typography>\r\n              <Typography >Select a Chat to view conversation</Typography>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      element = (\r\n        <div className=\"div-center\">\r\n              <Typography  style={{marginLeft:\"2rem\"}}>Hey &nbsp;{userName}! </Typography>\r\n              <Typography >Looks like you have'nt started a Chat yet..</Typography>\r\n              <Typography >Select a <a href=\"/users\">Contact</a> and start chatting!</Typography>\r\n        </div>\r\n      )\r\n    }\r\n  return (\r\n    <React.Fragment>\r\n      \r\n        {element}\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\AuthService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\accountService.js",["297"],"import GenericService from \"./GenericService\";\r\nclass AccountService extends GenericService {\r\n  constructor() {\r\n    super();\r\n  }\r\n   accountActivation = (data) => this.post(\"users/activation\", data);\r\n   forgotPassword = (data) => this.put(\"users/forgot-password\", data);\r\n   resetPassword = (data) => this.put(\"users/reset-password\", data);\r\n   profileSetup =(data)=>this.post(\"users/profile-setup\",data);\r\n}\r\nlet accountService = new AccountService();\r\nexport default accountService;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\api\\auth.js",["298","299"],"import axios from \"axios\";\naxios.defaults.headers.common[\"x-auth-token\"] =localStorage.getItem(\"token\");\nexport const signup = async (data) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await axios.post(\"http://localhost:5000/api/users/signup\", data);\n  return response;\n};\nexport const login = async (data) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await axios.post(\"http://localhost:5000/api/users/login\", data);\n  return response;\n};\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\AlertBar.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\ProgressBar.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\auth.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\GenericService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\localStorage.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\cookies.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\SocketContext.js",["300"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\MyChats.js",["301","302","303","304","305","306","307","308","309"],"import React, { useEffect, useRef,useContext,useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport {MyChatsContext} from '../../context/MyChatsContext';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport \"./chat.css\"\r\nconst MyChats = ()=> {\r\n  const {chatRecipients,getRecData} = useContext(MyChatsContext);\r\n  const [show,setshow]=useState(false)\r\n  let uId = localStorage.getItem(\"userId\")\r\n  let recName = []\r\n  let recMsg = []\r\n  let dummy = []\r\n  const [recArray,setRecArray] = useState([])\r\n  let value;\r\n  //console.log(chatRecipients)\r\n  useEffect(()=>{\r\n    recName = []\r\n    recMsg = []\r\n    dummy=[]\r\n    //recArray = []\r\n    setRecArray([])\r\n    getRecData(uId)\r\n    //setshow(!show)\r\n    console.log(\"id user\",uId)\r\n    console.log(\"chat\",chatRecipients.Rname)\r\n    chatRecipients.Rname.map((r)=>recName.push(r))\r\n    chatRecipients.lastMsg.map((m)=>recMsg.push(m))\r\n    console.log(recName.length)\r\n    for(var i=0; i<recName.length; i++){\r\n        //recArray[i]= recName[i]+\",\"+recMsg[i]\r\n        dummy.push(recName[i]+\",\"+recMsg[i])\r\n    }\r\n    setRecArray(dummy)\r\n    console.log(\"final array\",recArray)\r\n    //console.log(\"Recname\",recName)\r\n    //console.log(\"Recmsg\",recMsg)\r\n  },[])\r\n  return (\r\n    <div>\r\n        {console.log(\"in return\",recArray)}\r\n          {recArray.length ? \r\n            recArray.map((r)=>{\r\n            return (<div>\r\n              {value =r.split(\",\")}\r\n              {console.log(value)}\r\n            <ListItem\r\n              button\r\n            >\r\n              <ListItemText>\r\n                <Typography>{value[0]}</Typography>\r\n                <Typography >{value[1]}</Typography>\r\n              </ListItemText>\r\n            <Divider/> \r\n           </ListItem>\r\n            </div>\r\n            )\r\n            })\r\n          :\r\n          console.log(\"no final array\")\r\n          }\r\n      </div>\r\n  )\r\n}\r\nexport default MyChats;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\hooks\\useLocalStorage.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\MyChatsContext.js",["310","311","312"],"import React ,{createContext, useRef,useEffect,useState} from 'react'\r\nimport chatservice from \"../services/ChatService\"\r\n\r\nexport const MyChatsContext = createContext();\r\nexport function MyChatsProvider({userId,children}) {\r\n    const [chatRecipients,setChatRecipients] = useState(['hy'])\r\n    //let userId=useRef(\"\")\r\n    let recData = []\r\n    let recMsgs = []\r\n    useEffect(()=>{\r\n        //userId.current = localStorage.getItem(\"userId\")\r\n        getRecData(userId)\r\n        console.log(userId)\r\n        \r\n        \r\n    },[userId])\r\n\r\n    const getRecData = (uId)=>{\r\n         recData = []\r\n         recMsgs = []\r\n        console.log(\"in getdata\")\r\n        chatservice.getChatRecipients(uId).then((data)=>{    \r\n            if(data){\r\n                console.log(\"data getchat\",data)\r\n                data.map((rec) =>{\r\n                    return recData.push(rec)\r\n                })\r\n                setChatRecipients((r)=>{\r\n                    r.Rname=recData\r\n                    console.log(chatRecipients)\r\n                    return r\r\n                })\r\n                chatRecipients.Rname.map((r)=>{\r\n                    chatservice.getLastMsg(uId, r)\r\n                    .then((data)=>{\r\n                        console.log(\"data\",data)\r\n                        recMsgs.push(data)\r\n                        return recMsgs\r\n                    })\r\n                    .catch((err)=>console.log(err))\r\n                })\r\n                setChatRecipients((r)=>{\r\n                    r.lastMsg=recMsgs\r\n                    console.log(chatRecipients)\r\n                    return r\r\n                })\r\n            }\r\n            else\r\n                console.log(\"no data\")\r\n            \r\n            })\r\n            .catch((err)=>console.log(err))\r\n    }\r\n\r\n    /* useEffect(()=>{\r\n        \r\n    },[chatRecipients]) */\r\n    //getRecData()\r\n  const value = {\r\n      chatRecipients : chatRecipients,\r\n      getRecData : getRecData\r\n  }\r\n  return (\r\n    <MyChatsContext.Provider value={value}>\r\n      {children}\r\n    </MyChatsContext.Provider>\r\n  )\r\n}\r\n\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllContacts.js",["313"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllFriendRequest.js",["314"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllFriends.js",["315","316"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleContact.js",["317"],"import { Button, Typography,Paper } from \"@material-ui/core\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport React, { useState, useContext} from \"react\";\r\nimport { lightBlue, grey} from '@material-ui/core/colors';\r\nconst SingleContact = (props) => {\r\n     \r\n    const { contact } = props;\r\n    var userData=JSON.parse(localStorage.getItem(\"user\")) \r\n      const [showAddBtn, setAddBtn]=useState(userData.sentRequests.includes(contact._id)?false:true)\r\n     \r\n  \r\n    //const [showAddBtn, setAddBtn]=useState(state?!state.sentRequests.includes(contact._id):true);\r\n    const myId=isAuthenticated()._id;\r\n    const myName =isAuthenticated().firstname + \" \" +isAuthenticated().lastname;\r\n    const myProfileImg =isAuthenticated().profileImg;\r\n    const myEmail =isAuthenticated().email;\r\n    const myGender =isAuthenticated().gender;\r\n    const myLangPreference =isAuthenticated().langPreference;\r\n    const sentFriendRequest=()=>{\r\n        friendService.sendRequest(\r\n            {friendId:contact._id,\r\n            myId,myName,myProfileImg,myEmail,myGender,myLangPreference})\r\n         .then((data) => {\r\n           localStorage.setItem(\"user\",JSON.stringify(data));\r\n              // dispatch({type:\"FRIEND_REQUESTED\",payload:{sentRequests:data.sentRequests }})\r\n             setAddBtn(false)\r\n            \r\n            })\r\n         .catch((err) => {console.log(err);});\r\n    }\r\n     const cancelFriendRequest=()=>{\r\n        friendService.cancelRequest(\r\n            {friendId:contact._id,myId})\r\n         .then((data) => {\r\n             localStorage.setItem(\"user\",JSON.stringify(data));\r\n            // dispatch({type:\"FRIEND_REQUESTED\",payload:{sentRequests:data.sentRequests }})\r\n             setAddBtn(true)\r\n             \r\n         })\r\n         .catch((err) => {console.log(err);});\r\n    }\r\n    return (\r\n        <div>\r\n       <Paper style={{padding: '10px 24px'}} >\r\n              <img src={contact.profileImg}  className=\"img-fluid rounded-circle p-2\"\r\n          style={{ width: \"4.9em\" ,display:\"inline\" }} alt=\"img\"/>\r\n              <h4   style={{display:\"inline\"  }}>{contact.firstname + \" \"+ contact.lastname}</h4>\r\n        {showAddBtn ?  \r\n         <Button className= \"loginbtn\"\r\n             style={{display:\"inline-block\"  ,position:\"relative\",float:\"right\",marginTop:\"1rem\", backgroundColor:lightBlue[600],color:\"white\"}}\r\n            variant=\"contained\" \r\n            onClick={sentFriendRequest}>Add friend</Button>\r\n        : \r\n        <Button className= \"loginbtn\"\r\n              style={{display:\"inline-block\" ,position:\"relative\",float:\"right\" ,marginTop:\"1rem\", backgroundColor:grey[500],color:\"white\"}}\r\n            variant=\"contained\" \r\n            onClick={cancelFriendRequest}>Requested</Button> \r\n             }\r\n        <Typography style={{color:\"gray\",marginLeft:\"5rem\" ,  fontStyle: \"italic\" , fontSize:\"0.9rem\" }}>{contact.email}</Typography>\r\n     </Paper> \r\n    <hr/>\r\n          \r\n   \r\n    </div>);\r\n}\r\n \r\nexport default SingleContact;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleFriend.js",["318"],"import { Button,Paper } from \"@material-ui/core\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport React from \"react\";\r\nimport {   red  ,lightGreen} from '@material-ui/core/colors';\r\nconst SingleFriend = (props) => {\r\n    const { friend ,onRemove} = props;\r\n    console.log(friend)\r\n    const myId=isAuthenticated()._id;\r\n    const myEmail= isAuthenticated().email;\r\n    const friendEmail =  friend.email;\r\n     const RemoveFriend =()=>{\r\n         friendService.deleteFriend({friendId: friend.id, myId}) \r\n          .then((data) => {\r\n           onRemove()\r\n             localStorage.setItem(\"user\",JSON.stringify(data));\r\n             })\r\n         .catch((err) => {console.log(err);});\r\n      }\r\n    const chatButtonHandler = (fr)=>{\r\n      console.log(\"Fr\",fr)\r\n      localStorage.setItem(\"recName\",fr.name)\r\n      localStorage.setItem(\"recLang\",fr.langPreference)\r\n      localStorage.setItem(\"profileUrl\",fr.profileImg)\r\n      history.push(\"/chat/\"+friendEmail)\r\n    } \r\n    let history = useHistory()\r\n    return (\r\n        <div>\r\n       <Paper style={{padding: '10px 24px'}} >\r\n              <img src={friend.profileImg}  className=\"img-fluid rounded-circle p-2\"\r\n          style={{ width: \"4.9em\" ,display:\"inline\" }} alt=\"img\"/>\r\n              <h4   style={{display:\"inline\"  }}>{friend.name}</h4>\r\n        \r\n     <div style={{display:\"inline-flex\",justifyContent:\"space-between\", position:\"relative\", float:\"right\",width: \"170px\",height: \"auto\",marginTop:\"0.8rem\"}}>\r\n           \r\n            <Button className= \"loginbtn\"\r\n              style={{ backgroundColor:lightGreen[700],color:\"white\"}}\r\n            variant=\"contained\" \r\n            size=\"medium\"\r\n            onClick={()=> chatButtonHandler(friend)} \r\n            >Chat</Button>\r\n\r\n            <Button className= \"loginbtn\"\r\n             style={{  backgroundColor:red[400],color:\"white\" }}\r\n            variant=\"contained\" \r\n             onClick ={RemoveFriend}\r\n            >Remove</Button>\r\n            \r\n           \r\n          </div>\r\n               </Paper> \r\n    <hr/>\r\n          \r\n   \r\n    </div>);\r\n}\r\n \r\nexport default SingleFriend;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleFriendRequest.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\friendService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\contactService.js",[],{"ruleId":"319","severity":1,"message":"320","line":3,"column":10,"nodeType":"321","messageId":"322","endLine":3,"endColumn":19},{"ruleId":"319","severity":1,"message":"323","line":4,"column":8,"nodeType":"321","messageId":"322","endLine":4,"endColumn":13},{"ruleId":"319","severity":1,"message":"324","line":10,"column":10,"nodeType":"321","messageId":"322","endLine":10,"endColumn":18},{"ruleId":"319","severity":1,"message":"325","line":11,"column":10,"nodeType":"321","messageId":"322","endLine":11,"endColumn":21},{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"319","severity":1,"message":"330","line":6,"column":8,"nodeType":"321","messageId":"322","endLine":6,"endColumn":13},{"ruleId":"319","severity":1,"message":"331","line":19,"column":8,"nodeType":"321","messageId":"322","endLine":19,"endColumn":10},{"ruleId":"319","severity":1,"message":"320","line":22,"column":10,"nodeType":"321","messageId":"322","endLine":22,"endColumn":19},{"ruleId":"319","severity":1,"message":"332","line":22,"column":20,"nodeType":"321","messageId":"322","endLine":22,"endColumn":26},{"ruleId":"319","severity":1,"message":"333","line":23,"column":8,"nodeType":"321","messageId":"322","endLine":23,"endColumn":23},{"ruleId":"319","severity":1,"message":"334","line":3,"column":10,"nodeType":"321","messageId":"322","endLine":3,"endColumn":19},{"ruleId":"335","severity":1,"message":"336","line":39,"column":10,"nodeType":"337","endLine":39,"endColumn":24},{"ruleId":"335","severity":1,"message":"336","line":44,"column":10,"nodeType":"337","endLine":44,"endColumn":25},{"ruleId":"319","severity":1,"message":"338","line":1,"column":17,"nodeType":"321","messageId":"322","endLine":1,"endColumn":25},{"ruleId":"319","severity":1,"message":"323","line":3,"column":8,"nodeType":"321","messageId":"322","endLine":3,"endColumn":13},{"ruleId":"326","replacedBy":"339"},{"ruleId":"328","replacedBy":"340"},{"ruleId":"319","severity":1,"message":"341","line":4,"column":10,"nodeType":"321","messageId":"322","endLine":4,"endColumn":21},{"ruleId":"319","severity":1,"message":"342","line":4,"column":23,"nodeType":"321","messageId":"322","endLine":4,"endColumn":34},{"ruleId":"319","severity":1,"message":"343","line":11,"column":8,"nodeType":"321","messageId":"322","endLine":11,"endColumn":19},{"ruleId":"319","severity":1,"message":"344","line":12,"column":8,"nodeType":"321","messageId":"322","endLine":12,"endColumn":19},{"ruleId":"319","severity":1,"message":"323","line":15,"column":8,"nodeType":"321","messageId":"322","endLine":15,"endColumn":13},{"ruleId":"319","severity":1,"message":"345","line":20,"column":8,"nodeType":"321","messageId":"322","endLine":20,"endColumn":9},{"ruleId":"319","severity":1,"message":"346","line":49,"column":10,"nodeType":"321","messageId":"322","endLine":49,"endColumn":18},{"ruleId":"319","severity":1,"message":"347","line":49,"column":19,"nodeType":"321","messageId":"322","endLine":49,"endColumn":30},{"ruleId":"319","severity":1,"message":"348","line":60,"column":10,"nodeType":"321","messageId":"322","endLine":60,"endColumn":14},{"ruleId":"349","severity":1,"message":"350","line":66,"column":9,"nodeType":"351","endLine":128,"endColumn":4,"suggestions":"352"},{"ruleId":"353","severity":1,"message":"354","line":71,"column":36,"nodeType":"355","messageId":"356","endLine":71,"endColumn":37,"fix":"357"},{"ruleId":"353","severity":1,"message":"354","line":77,"column":47,"nodeType":"355","messageId":"356","endLine":77,"endColumn":48,"fix":"358"},{"ruleId":"359","severity":1,"message":"360","line":83,"column":48,"nodeType":"361","messageId":"362","endLine":83,"endColumn":50},{"ruleId":"353","severity":1,"message":"354","line":92,"column":7,"nodeType":"355","messageId":"356","endLine":92,"endColumn":8,"fix":"363"},{"ruleId":"349","severity":1,"message":"364","line":138,"column":5,"nodeType":"365","endLine":138,"endColumn":7,"suggestions":"366"},{"ruleId":"353","severity":1,"message":"354","line":141,"column":44,"nodeType":"355","messageId":"356","endLine":141,"endColumn":45,"fix":"367"},{"ruleId":"359","severity":1,"message":"360","line":147,"column":41,"nodeType":"361","messageId":"362","endLine":147,"endColumn":43},{"ruleId":"359","severity":1,"message":"360","line":152,"column":24,"nodeType":"361","messageId":"362","endLine":152,"endColumn":26},{"ruleId":"353","severity":1,"message":"354","line":162,"column":7,"nodeType":"355","messageId":"356","endLine":162,"endColumn":8,"fix":"368"},{"ruleId":"369","severity":1,"message":"370","line":229,"column":35,"nodeType":"371","messageId":"372","endLine":229,"endColumn":37},{"ruleId":"326","replacedBy":"373"},{"ruleId":"328","replacedBy":"374"},{"ruleId":"319","severity":1,"message":"334","line":6,"column":8,"nodeType":"321","messageId":"322","endLine":6,"endColumn":17},{"ruleId":"319","severity":1,"message":"375","line":19,"column":10,"nodeType":"321","messageId":"322","endLine":19,"endColumn":25},{"ruleId":"319","severity":1,"message":"376","line":64,"column":10,"nodeType":"321","messageId":"322","endLine":64,"endColumn":17},{"ruleId":"319","severity":1,"message":"377","line":64,"column":19,"nodeType":"321","messageId":"322","endLine":64,"endColumn":29},{"ruleId":"319","severity":1,"message":"378","line":65,"column":10,"nodeType":"321","messageId":"322","endLine":65,"endColumn":14},{"ruleId":"349","severity":1,"message":"379","line":93,"column":5,"nodeType":"365","endLine":93,"endColumn":7,"suggestions":"380"},{"ruleId":"319","severity":1,"message":"381","line":112,"column":11,"nodeType":"321","messageId":"322","endLine":112,"endColumn":22},{"ruleId":"319","severity":1,"message":"382","line":116,"column":11,"nodeType":"321","messageId":"322","endLine":116,"endColumn":25},{"ruleId":"319","severity":1,"message":"383","line":124,"column":11,"nodeType":"321","messageId":"322","endLine":124,"endColumn":22},{"ruleId":"384","severity":1,"message":"385","line":133,"column":44,"nodeType":"371","messageId":"386","endLine":133,"endColumn":45},{"ruleId":"319","severity":1,"message":"387","line":142,"column":11,"nodeType":"321","messageId":"322","endLine":142,"endColumn":22},{"ruleId":"319","severity":1,"message":"323","line":3,"column":8,"nodeType":"321","messageId":"322","endLine":3,"endColumn":13},{"ruleId":"319","severity":1,"message":"331","line":4,"column":8,"nodeType":"321","messageId":"322","endLine":4,"endColumn":10},{"ruleId":"319","severity":1,"message":"375","line":12,"column":10,"nodeType":"321","messageId":"322","endLine":12,"endColumn":25},{"ruleId":"319","severity":1,"message":"388","line":14,"column":10,"nodeType":"321","messageId":"322","endLine":14,"endColumn":25},{"ruleId":"319","severity":1,"message":"389","line":22,"column":7,"nodeType":"321","messageId":"322","endLine":22,"endColumn":8},{"ruleId":"319","severity":1,"message":"390","line":33,"column":7,"nodeType":"321","messageId":"322","endLine":33,"endColumn":17},{"ruleId":"319","severity":1,"message":"391","line":35,"column":7,"nodeType":"321","messageId":"322","endLine":35,"endColumn":13},{"ruleId":"353","severity":1,"message":"354","line":62,"column":47,"nodeType":"355","messageId":"356","endLine":62,"endColumn":48,"fix":"392"},{"ruleId":"359","severity":1,"message":"360","line":78,"column":49,"nodeType":"361","messageId":"362","endLine":78,"endColumn":51},{"ruleId":"349","severity":1,"message":"393","line":113,"column":4,"nodeType":"365","endLine":113,"endColumn":6,"suggestions":"394"},{"ruleId":"349","severity":1,"message":"395","line":154,"column":3,"nodeType":"365","endLine":154,"endColumn":5,"suggestions":"396"},{"ruleId":"319","severity":1,"message":"397","line":164,"column":13,"nodeType":"321","messageId":"322","endLine":164,"endColumn":17},{"ruleId":"349","severity":1,"message":"398","line":63,"column":8,"nodeType":"365","endLine":63,"endColumn":10,"suggestions":"399"},{"ruleId":"319","severity":1,"message":"400","line":1,"column":38,"nodeType":"321","messageId":"322","endLine":1,"endColumn":48},{"ruleId":"319","severity":1,"message":"401","line":18,"column":32,"nodeType":"321","messageId":"322","endLine":18,"endColumn":37},{"ruleId":"349","severity":1,"message":"402","line":45,"column":9,"nodeType":"365","endLine":45,"endColumn":23,"suggestions":"403"},{"ruleId":"319","severity":1,"message":"323","line":10,"column":8,"nodeType":"321","messageId":"322","endLine":10,"endColumn":13},{"ruleId":"349","severity":1,"message":"398","line":150,"column":8,"nodeType":"365","endLine":150,"endColumn":10,"suggestions":"404"},{"ruleId":"405","severity":1,"message":"406","line":203,"column":14,"nodeType":"407","endLine":203,"endColumn":54},{"ruleId":"349","severity":1,"message":"408","line":42,"column":10,"nodeType":"365","endLine":42,"endColumn":12,"suggestions":"409"},{"ruleId":"319","severity":1,"message":"400","line":1,"column":27,"nodeType":"321","messageId":"322","endLine":1,"endColumn":37},{"ruleId":"319","severity":1,"message":"332","line":1,"column":15,"nodeType":"321","messageId":"322","endLine":1,"endColumn":21},{"ruleId":"319","severity":1,"message":"338","line":1,"column":32,"nodeType":"321","messageId":"322","endLine":1,"endColumn":40},{"ruleId":"319","severity":1,"message":"410","line":3,"column":8,"nodeType":"321","messageId":"322","endLine":3,"endColumn":19},{"ruleId":"319","severity":1,"message":"411","line":6,"column":7,"nodeType":"321","messageId":"322","endLine":6,"endColumn":15},{"ruleId":"319","severity":1,"message":"412","line":4,"column":10,"nodeType":"321","messageId":"322","endLine":4,"endColumn":16},{"ruleId":"359","severity":1,"message":"413","line":9,"column":39,"nodeType":"361","messageId":"414","endLine":9,"endColumn":41},{"ruleId":"319","severity":1,"message":"332","line":1,"column":37,"nodeType":"321","messageId":"322","endLine":1,"endColumn":43},{"ruleId":"319","severity":1,"message":"344","line":2,"column":8,"nodeType":"321","messageId":"322","endLine":2,"endColumn":19},{"ruleId":"319","severity":1,"message":"415","line":10,"column":10,"nodeType":"321","messageId":"322","endLine":10,"endColumn":21},{"ruleId":"319","severity":1,"message":"416","line":10,"column":23,"nodeType":"321","messageId":"322","endLine":10,"endColumn":37},{"ruleId":"353","severity":1,"message":"354","line":16,"column":48,"nodeType":"355","messageId":"356","endLine":16,"endColumn":49,"fix":"417"},{"ruleId":"349","severity":1,"message":"418","line":18,"column":4,"nodeType":"365","endLine":18,"endColumn":14,"suggestions":"419"},{"ruleId":"420","severity":1,"message":"421","line":3,"column":3,"nodeType":"422","messageId":"423","endLine":5,"endColumn":4},{"ruleId":"319","severity":1,"message":"424","line":4,"column":9,"nodeType":"321","messageId":"322","endLine":4,"endColumn":15},{"ruleId":"319","severity":1,"message":"424","line":13,"column":9,"nodeType":"321","messageId":"322","endLine":13,"endColumn":15},{"ruleId":"319","severity":1,"message":"332","line":1,"column":31,"nodeType":"321","messageId":"322","endLine":1,"endColumn":37},{"ruleId":"319","severity":1,"message":"332","line":1,"column":28,"nodeType":"321","messageId":"322","endLine":1,"endColumn":34},{"ruleId":"319","severity":1,"message":"331","line":2,"column":8,"nodeType":"321","messageId":"322","endLine":2,"endColumn":10},{"ruleId":"319","severity":1,"message":"425","line":4,"column":8,"nodeType":"321","messageId":"322","endLine":4,"endColumn":12},{"ruleId":"319","severity":1,"message":"426","line":9,"column":8,"nodeType":"321","messageId":"322","endLine":9,"endColumn":14},{"ruleId":"319","severity":1,"message":"378","line":13,"column":10,"nodeType":"321","messageId":"322","endLine":13,"endColumn":14},{"ruleId":"319","severity":1,"message":"427","line":13,"column":15,"nodeType":"321","messageId":"322","endLine":13,"endColumn":22},{"ruleId":"349","severity":1,"message":"428","line":22,"column":15,"nodeType":"365","endLine":22,"endColumn":17},{"ruleId":"349","severity":1,"message":"429","line":23,"column":14,"nodeType":"365","endLine":23,"endColumn":16},{"ruleId":"349","severity":1,"message":"430","line":24,"column":11,"nodeType":"365","endLine":24,"endColumn":13},{"ruleId":"319","severity":1,"message":"332","line":1,"column":31,"nodeType":"321","messageId":"322","endLine":1,"endColumn":37},{"ruleId":"349","severity":1,"message":"431","line":16,"column":7,"nodeType":"365","endLine":16,"endColumn":15,"suggestions":"432"},{"ruleId":"359","severity":1,"message":"360","line":33,"column":45,"nodeType":"361","messageId":"362","endLine":33,"endColumn":47},{"ruleId":"349","severity":1,"message":"433","line":45,"column":6,"nodeType":"365","endLine":45,"endColumn":8,"suggestions":"434"},{"ruleId":"349","severity":1,"message":"435","line":18,"column":34,"nodeType":"365","endLine":18,"endColumn":36,"suggestions":"436"},{"ruleId":"319","severity":1,"message":"437","line":14,"column":12,"nodeType":"321","messageId":"322","endLine":14,"endColumn":24},{"ruleId":"349","severity":1,"message":"438","line":28,"column":8,"nodeType":"365","endLine":28,"endColumn":10,"suggestions":"439"},{"ruleId":"319","severity":1,"message":"400","line":4,"column":27,"nodeType":"321","messageId":"322","endLine":4,"endColumn":37},{"ruleId":"319","severity":1,"message":"440","line":11,"column":11,"nodeType":"321","messageId":"322","endLine":11,"endColumn":18},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Provider' is defined but never used.","'createStore' is defined but never used.","no-native-reassign",["441"],"no-negated-in-lhs",["442"],"'Login' is defined but never used.","'io' is defined but never used.","'useRef' is defined but never used.","'useLocalStorage' is defined but never used.","'TextField' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.",["441"],["442"],"'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'SendMessage' is defined but never used.","'TypeMessage' is defined but never used.","'_' is defined but never used.","'lastmsgs' is assigned a value but never used.","'setLastMsgs' is assigned a value but never used.","'flag' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'activeChatHandler' function makes the dependencies of useEffect Hook (at line 170) change on every render. To fix this, wrap the definition of 'activeChatHandler' in its own useCallback() Hook.","VariableDeclarator",["443"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"444","text":"445"},{"range":"446","text":"445"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"range":"447","text":"445"},"React Hook useEffect has a missing dependency: 'getRecipients'. Either include it or remove the dependency array.","ArrayExpression",["448"],{"range":"449","text":"445"},{"range":"450","text":"445"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["441"],["442"],"'isAuthenticated' is defined but never used.","'newUser' is assigned a value but never used.","'setNewUser' is assigned a value but never used.","'show' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clientSocket' and 'getData'. Either include them or remove the dependency array.",["451"],"'showButtons' is assigned a value but never used.","'addGroupMember' is assigned a value but never used.","'createGroup' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'nameHandler' is assigned a value but never used.","'PromiseProvider' is defined but never used.","'x' is assigned a value but never used.","'returndata' is defined but never used.","'pusher' is assigned a value but never used.",{"range":"452","text":"445"},"React Hook useEffect has missing dependencies: 'dummy' and 'props.match.params.id'. Either include them or remove the dependency array.",["453"],"React Hook useEffect has a missing dependency: 'clientSocket'. Either include it or remove the dependency array.",["454"],"'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'match.params.token' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["455"],"'useContext' is defined but never used.","'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["456"],["457"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'props.recipientId' and 'props.userId'. Either include them or remove the dependency array.",["458"],"'chatservice' is defined but never used.","'contacts' is assigned a value but never used.","'Player' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'showLoading' is assigned a value but never used.","'setShowLoading' is assigned a value but never used.",{"range":"459","text":"445"},"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["460"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'config' is assigned a value but never used.","'List' is defined but never used.","'Button' is defined but never used.","'setshow' is assigned a value but never used.","Assignments to the 'recName' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'recMsg' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'dummy' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'getRecData'. Either include it or remove the dependency array.",["461"],"React Hook useEffect has missing dependencies: 'getAllMyFriends' and 'getFriendRequest'. Either include them or remove the dependency array.",["462"],"React Hook useEffect has a missing dependency: 'myId'. Either include it or remove the dependency array.",["463"],"'clientSocket' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllMyFriends'. Either include it or remove the dependency array.",["464"],"'myEmail' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"465","fix":"466"},[2345,2352],"\r\n    .",[2563,2570],[2991,2998],{"desc":"467","fix":"468"},[4369,4376],[5007,5014],{"desc":"469","fix":"470"},[2342,2349],{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"475","fix":"479"},{"desc":"480","fix":"481"},[694,701],{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},"Wrap the definition of 'activeChatHandler' in its own useCallback() Hook.",{"range":"492","text":"493"},"Update the dependencies array to be: [getRecipients]",{"range":"494","text":"495"},"Update the dependencies array to be: [clientSocket, getData]",{"range":"496","text":"497"},"Update the dependencies array to be: [dummy, props.match.params.id]",{"range":"498","text":"499"},"Update the dependencies array to be: [clientSocket]",{"range":"500","text":"501"},"Update the dependencies array to be: [match.params.token, values]",{"range":"502","text":"503"},"Update the dependencies array to be: [formData, match.params]",{"range":"504","text":"505"},{"range":"506","text":"503"},"Update the dependencies array to be: [props.recipientId, props.userId]",{"range":"507","text":"508"},"Update the dependencies array to be: [userId, userName]",{"range":"509","text":"510"},"Update the dependencies array to be: [getRecData, userId]",{"range":"511","text":"512"},"Update the dependencies array to be: [getAllMyFriends, getFriendRequest]",{"range":"513","text":"514"},"Update the dependencies array to be: [myId]",{"range":"515","text":"516"},"Update the dependencies array to be: [getAllMyFriends]",{"range":"517","text":"518"},[2185,4060],"useCallback((rid) => {\r\n    setShow(true)\r\n    console.log(\"active chat handler called with\", rid);\r\n    recipientInfo.current.id=rid\r\n\r\n    userservice.getUserByEmail(rid).\r\n    then((data) =>{\r\n      recipientInfo.current.lang = data.langPreference\r\n      recipientInfo.current.url = data.profileImg\r\n    }).catch((err)=>console.log(err))\r\n\r\n    chatservice.getMessagesbyEmail(userId,rid).\r\n    then((data)=> {\r\n      console.log(data)\r\n      chatsfromdb1.current = data;\r\n      console.log(\"Data\",chatsfromdb1.current)\r\n      if (chatsfromdb1) {\r\n        chatsfromdb1.current.map((chat, index) => {\r\n            dummy1.push(chat)   \r\n        });\r\n      }\r\n      else{\r\n        console.log(\"No chats or some error\")\r\n      }\r\n      setActiveChat({messages:dummy1})\r\n      console.log(\"activechat\",activeChat)\r\n    }).\r\n    catch((err)=>console.log(err))\r\n    clientSocket.current = io(\"http://127.0.0.1:5000\");\r\n    clientSocket.current.emit(\r\n      \"roomJoin\",\r\n      { from: userId, to: recipientInfo.current.id },\r\n      ({ error, room }) => {\r\n        if (!error) {\r\n          roomId.current = room;\r\n          console.log(\"joined room with id\", room);\r\n        } else {\r\n          console.log(\"error joining room\", error);\r\n        }\r\n      }\r\n    );\r\n\r\n    clientSocket.current.on(\"messageReceived\", (payload) => {\r\n      console.log(\"Payload\",payload)\r\n      chatservice.createMessage(payload)\r\n      .then((response)=>console.log(response))\r\n      .catch((err)=>console.log(err))\r\n      setChat((chatState) => {\r\n        if(chatState.messages){\r\n          let newMessages = [...chatState.messages];\r\n        newMessages = [...newMessages, payload];\r\n        return { ...chatState, messages: newMessages };\r\n        }\r\n        else{\r\n          return {messages: [payload] };  \r\n        }\r\n        \r\n      });     \r\n      console.log(\"Received chat\",chat)\r\n      \r\n    });\r\n\r\n  })",[4254,4256],"[getRecipients]",[3027,3029],"[clientSocket, getData]",[4129,4131],"[dummy, props.match.params.id]",[5228,5230],"[clientSocket]",[1602,1604],"[match.params.token, values]",[1574,1588],"[formData, match.params]",[4931,4933],[1671,1673],"[props.recipientId, props.userId]",[736,746],"[userId, userName]",[527,535],"[getRecData, userId]",[1297,1299],"[getAllMyFriends, getFriendRequest]",[761,763],"[myId]",[998,1000],"[getAllMyFriends]"]