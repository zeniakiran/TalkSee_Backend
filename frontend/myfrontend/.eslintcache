[{"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\index.js":"1","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\reportWebVitals.js":"2","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\App.js":"3","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\MyChats.js":"4","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\MyChatsContext.js":"5","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\hooks\\useLocalStorage.js":"6","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\Login.js":"7","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\SocketContext.js":"8","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Users.js":"9","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\LogIn.js":"10","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\notFound.js":"11","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\forgotPassword.js":"12","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\resetPassword.js":"13","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SignUp.js":"14","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllContacts.js":"15","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\profileSetup.js":"16","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllFriendRequest.js":"17","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllFriends.js":"18","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\Activate.js":"19","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\userDashboard.js":"20","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Chat.js":"21","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\pageTitle.js":"22","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\GroupService.js":"23","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\UserService.js":"24","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\friendService.js":"25","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\auth.js":"26","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\accountService.js":"27","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\ProgressBar.js":"28","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\api\\auth.js":"29","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\AuthService.js":"30","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\ChatService.js":"31","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleFriend.js":"32","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\AlertBar.js":"33","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleFriendRequest.js":"34","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\SettingMessage.js":"35","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\Header.js":"36","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\TypeMessage.js":"37","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\GenericService.js":"38","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\localStorage.js":"39","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\cookies.js":"40","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\contactService.js":"41","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleContact.js":"42","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\updateProfileSetup.js":"43"},{"size":1664,"mtime":1618066164985,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"45"},{"size":3713,"mtime":1618935145694,"results":"47","hashOfConfig":"45"},{"size":4402,"mtime":1618866871937,"results":"48","hashOfConfig":"45"},{"size":2157,"mtime":1618863876602,"results":"49","hashOfConfig":"45"},{"size":607,"mtime":1618229829293,"results":"50","hashOfConfig":"45"},{"size":2245,"mtime":1614176287276,"results":"51","hashOfConfig":"45"},{"size":981,"mtime":1618483397942,"results":"52","hashOfConfig":"45"},{"size":7000,"mtime":1618249738129,"results":"53","hashOfConfig":"45"},{"size":6996,"mtime":1618679664394,"results":"54","hashOfConfig":"45"},{"size":437,"mtime":1614689093529,"results":"55","hashOfConfig":"45"},{"size":4158,"mtime":1618052506116,"results":"56","hashOfConfig":"45"},{"size":7992,"mtime":1618996175065,"results":"57","hashOfConfig":"45"},{"size":11582,"mtime":1618422980426,"results":"58","hashOfConfig":"45"},{"size":2239,"mtime":1618995471942,"results":"59","hashOfConfig":"45"},{"size":9533,"mtime":1618423364213,"results":"60","hashOfConfig":"45"},{"size":1930,"mtime":1618995669138,"results":"61","hashOfConfig":"45"},{"size":2484,"mtime":1618995797550,"results":"62","hashOfConfig":"45"},{"size":3893,"mtime":1618995410609,"results":"63","hashOfConfig":"45"},{"size":4521,"mtime":1618994387666,"results":"64","hashOfConfig":"45"},{"size":9499,"mtime":1618994366195,"results":"65","hashOfConfig":"45"},{"size":781,"mtime":1618996042146,"results":"66","hashOfConfig":"45"},{"size":440,"mtime":1613505721315,"results":"67","hashOfConfig":"45"},{"size":421,"mtime":1614528967086,"results":"68","hashOfConfig":"45"},{"size":787,"mtime":1618423755981,"results":"69","hashOfConfig":"45"},{"size":522,"mtime":1618052506107,"results":"70","hashOfConfig":"45"},{"size":607,"mtime":1618937715752,"results":"71","hashOfConfig":"45"},{"size":1091,"mtime":1614689093239,"results":"72","hashOfConfig":"45"},{"size":573,"mtime":1618400947391,"results":"73","hashOfConfig":"45"},{"size":1156,"mtime":1618052506122,"results":"74","hashOfConfig":"45"},{"size":727,"mtime":1618163366505,"results":"75","hashOfConfig":"45"},{"size":2272,"mtime":1618995948472,"results":"76","hashOfConfig":"45"},{"size":2255,"mtime":1614689093224,"results":"77","hashOfConfig":"45"},{"size":2553,"mtime":1618995980257,"results":"78","hashOfConfig":"45"},{"size":1558,"mtime":1618906550145,"results":"79","hashOfConfig":"45"},{"size":2845,"mtime":1618995280535,"results":"80","hashOfConfig":"45"},{"size":1576,"mtime":1615214194986,"results":"81","hashOfConfig":"45"},{"size":1643,"mtime":1612354085455,"results":"82","hashOfConfig":"45"},{"size":284,"mtime":1618052506109,"results":"83","hashOfConfig":"45"},{"size":268,"mtime":1618052506108,"results":"84","hashOfConfig":"45"},{"size":308,"mtime":1618996505101,"results":"85","hashOfConfig":"45"},{"size":3055,"mtime":1618995919347,"results":"86","hashOfConfig":"45"},{"size":9172,"mtime":1618996430744,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},"1gexn1j",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"91"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"91"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"91"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"91"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"91"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"91"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"91"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"91"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"91"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"91"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\index.js",["187","188","189","190"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//import Pusher from 'pusher-js';\r\n//import Reducer from './Redux/reducers/chat_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n//Pusher.logToConsole = true;\r\n\r\n//useEffect (()=>{\r\n  /* const pusher = new Pusher('18cb37e3146179a6a80e', {\r\n  cluster: 'ap2',\r\n  authEndpoint: 'http://localhost:5000/api/chatapi/pusher/auth'\r\n}); */\r\n/* usher.connection.bind('connected', function () {\r\n  // attach the socket ID to all outgoing Axios requests\r\n  axios.defaults.headers.common['X-Socket-Id'] = pusher.connection.socket_id;\r\n  console.log(\"id:\",pusher.connection.socket_id)\r\n}); */\r\n//},[])\r\n/* var channel = pusher.subscribe('private-my-channel');\r\nchannel.bind('my-event', function(data) {\r\n  console.log(\"in bind\")\r\n  alert(JSON.stringify(data));\r\n  console.log(\"pusher data:\",data)\r\n}); */\r\n\r\n//const myStore = createStore(Reducer, window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n                            //window.__REDUX_DEVTOOLS_EXTENSION__() );\r\n\r\n/* ReactDOM.render(\r\n  <Provider\r\n        store={myStore}\r\n        >\r\n        <App />\r\n  </Provider>\r\n    \r\n  ,\r\n  document.getElementById('root')\r\n); */\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["191","192"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\reportWebVitals.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\App.js",["193","194","195","196","197"],"import './App.css';\r\nimport { Route, Switch,BrowserRouter as Router,Redirect } from \"react-router-dom\";\r\nimport UserDashboard from \"./components/FrontendComponents/components/userDashboard\";\r\nimport SignUp from \"./components/FrontendComponents/components/SignUp\";\r\nimport LogIn from \"./components/FrontendComponents/components/LogIn\";\r\nimport Login from \"./components/Login\";\r\nimport Activate from \"./components/FrontendComponents/components/Activate\";\r\nimport notFound from \"./components/FrontendComponents/components/notFound\";\r\nimport ForgotPassword from \"./components/FrontendComponents/components/forgotPassword\";\r\nimport ResetPassword from \"./components/FrontendComponents/components/resetPassword\";\r\nimport ProfileSetup from \"./components/FrontendComponents/components/profileSetup\";\r\nimport AllContact from \"./components/FrontendComponents/components/AllContacts\";\r\nimport AllFriendRequest from \"./components/FrontendComponents/components/AllFriendRequest\";\r\nimport AllFriends from \"./components/FrontendComponents/components/AllFriends\";\r\nimport UpdateProfileSetup from \"./components/FrontendComponents/components/updateProfileSetup\";\r\nimport Chat from \"./components/ChatComponents/Chat\";\r\nimport MyChats from \"./components/ChatComponents/MyChats\";\r\nimport Users from \"./components/ChatComponents/Users\";\r\n//import GroupChat from \"./components/ChatComponents/GroupChat\";\r\nimport io from \"socket.io-client\";\r\nimport {SocketProvider} from './context/SocketContext';\r\nimport {MyChatsProvider} from './context/MyChatsContext';\r\nimport { useEffect,useRef,useState } from 'react';\r\nimport useLocalStorage from './hooks/useLocalStorage';\r\nconst App =() =>{\r\n  /* let clientSocket = useRef(null);\r\n  useEffect(() => {\r\n    clientSocket.current = io(\"http://127.0.0.1:5000\");\r\n    clientSocket.current.on('connect' , () => {\r\n      console.log(clientSocket.current.id);\r\n    });\r\n  }, []) */\r\n  \r\n  const [userId,setId] = useState()\r\n  return (\r\n    <div className=\"App\">\r\n    <MyChatsProvider userId={userId}>\r\n    <SocketProvider >\r\n    <Router>\r\n      <Switch>\r\n            <Route path=\"/\" exact><LogIn onIdSubmit={setId} /></Route>\r\n            <Route exact path=\"/signup\" component={SignUp} />\r\n            <Route exact path=\"/login\"><LogIn onIdSubmit={setId} /></Route>\r\n            <Route exact path=\"/user/activate/:token\" component={Activate} />\r\n            <Route exact path=\"/dashboard\" component={UserDashboard} />\r\n            <Route exact path=\"/reset-password/:token\" component={ResetPassword} />\r\n            <Route exact path=\"/forgot-password\" component={ForgotPassword} />\r\n            <Route exact path=\"/profile-setup/:token\" component={ProfileSetup}/>\r\n            <Route exact path=\"/update-my-profile-setup/:id\" component={UpdateProfileSetup}/>\r\n            <Route exact path=\"/notfound\" component={notFound} />\r\n            <Route exact path =\"/all-contacts\" component= {AllContact}/>\r\n            <Route exact path = \"/all-friend-requests\" component ={AllFriendRequest}/>\r\n            <Route exact path =\"/all-my-friends\"><AllFriends /></Route>\r\n            <Route path=\"/chat/:id\" render={(props) => (\r\n              <Chat {...props} key={props.location.key} />\r\n            )} exact>\r\n            </Route>\r\n            {/* <Route path=\"/groupchat/:id\" render={(props) => (\r\n              <GroupChat {...props} key={props.location.key} />\r\n            )} exact>\r\n            </Route>  */}\r\n            <Route path=\"/users\" exact ><Users/></Route>\r\n            <Route path=\"/mychats\" exact ><MyChats /></Route>\r\n            {<Redirect to=\"/notfound\" /> }     \r\n      </Switch>\r\n      </Router>\r\n    </SocketProvider>\r\n    </MyChatsProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\MyChats.js",["198","199","200","201","202","203","204","205","206","207","208","209"],"import React, { useEffect, useRef,useContext,useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport {MyChatsContext} from '../../context/MyChatsContext';\r\nimport {SocketContext} from '../../context/SocketContext';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport \"./chat.css\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  subheader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  globe: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  subheaderText: {\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  list: {\r\n    maxHeight: \"calc(100vh - 112px)\",\r\n    overflowY: \"auto\",\r\n    \r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(0, 3, 0, 1),\r\n  },\r\n  listText:{\r\n    fontSize : '1.3rem',\r\n    fontFamily : 'Roboto'\r\n  }\r\n  ,listText1:{\r\n    fontSize : '1rem',\r\n    fontFamily : 'Roboto',\r\n    color : 'gray'\r\n  }\r\n  , listBtn:{\r\n    backgroundColor: 'rgb(0, 172, 193)',\r\n    color : 'white',\r\n    fontSize : '1rem'\r\n  },\r\n  mygrid:{\r\n    marginTop:'100px'\r\n  }\r\n}));\r\nconst MyChats = ()=> {\r\n  const classes = useStyles();\r\n  const {chatRecipients,getRecData,setRecipients} = useContext(MyChatsContext);\r\n  const clientSocket = useContext(SocketContext);\r\n  const [newMsg,setNewMsg]=useState(false)\r\n  let uId = JSON.parse(localStorage.getItem(\"user\"))\r\n  let recName = []\r\n  let recMsg = []\r\n  let dummy = []\r\n  //const [recArray,setRecArray] = useState([])\r\n\r\n  const setRecArray = (index,msg)=>{\r\n    let items = [...chatRecipients.lastMsg];\r\n    items[index] = msg;\r\n    console.log(\"items\",items)\r\n    setRecipients((r)=>{\r\n      /* let newR = [...r.lastMsg]\r\n      newR = [...newR,items]\r\n      console.log(r) */\r\n      return {...r,lastMsg:items}\r\n    });\r\n     \r\n  }\r\n\r\n  const setNewRecipient = (rec,msg)=>{\r\n    setRecipients((r)=>{\r\n      let newR = [...r.Rname]\r\n      newR = [...newR,rec]\r\n      let newMsg = [...r.lastMsg]\r\n      newMsg = [...newMsg,msg]\r\n      console.log(newR,newMsg)\r\n      return {...r,Rname:newR,lastMsg:newMsg}\r\n    });\r\n\r\n  }\r\n  useEffect(()=>{\r\n    getRecData(uId.email)\r\n    console.log(\"id user\",uId.email)\r\n    console.log(\"chat\",chatRecipients.Rname)\r\n    \r\n  },[chatRecipients])\r\n\r\n  useEffect(()=>{\r\n    clientSocket.on(\"newRecipient\", (payload) => {\r\n      console.log(\"IN NEW REc\",payload)\r\n      let index;\r\n      let count=0;\r\n      if(chatRecipients.Rname && chatRecipients.lastMsg){\r\n        console.log(chatRecipients)\r\n        chatRecipients.Rname.map((r,indx)=>{\r\n        console.log(payload.payload.from)\r\n        if(payload.payload.from ===r){\r\n          index = indx\r\n          count = count+1\r\n          //setIsRec(count)\r\n        }\r\n        else{\r\n          console.log(\"false\",payload.payload.from,r)\r\n        }\r\n        })\r\n        if(count >=1)\r\n            setRecArray(index,payload.payload.messageBody)\r\n        else if(count === 0)\r\n            setNewRecipient(payload.payload.from,payload.payload.messageBody)\r\n        console.log(\"After state\",chatRecipients)\r\n      }\r\n      else{\r\n        console.log(\"no chat\")\r\n      }\r\n\r\n  })\r\n  },[])\r\n  return (\r\n    <div>\r\n          {chatRecipients.Rname !== undefined ? \r\n            chatRecipients.Rname.map((r,index)=>{\r\n            return (<Grid className={classes.mygrid} xs={12}>\r\n            <ListItem\r\n              button\r\n            >\r\n            <ListItemAvatar>\r\n             <Avatar className={classes.globe}>\r\n                <FaceIcon/>\r\n             </Avatar>\r\n            </ListItemAvatar> \r\n              <ListItemText>\r\n                <Typography>{r}</Typography>\r\n                <Typography>{chatRecipients.lastMsg[index]}</Typography>\r\n              </ListItemText>\r\n            <Divider/> \r\n           </ListItem>\r\n            </Grid>\r\n            )\r\n            })\r\n          :\r\n          console.log(\"no final array\")\r\n          }\r\n      </div>\r\n  )\r\n}\r\nexport default MyChats;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\MyChatsContext.js",["210","211","212"],"import React ,{createContext, useRef,useEffect,useState} from 'react'\r\nimport chatservice from \"../services/ChatService\"\r\n\r\nexport const MyChatsContext = createContext();\r\nexport function MyChatsProvider({userId,children}) {\r\n    const [chatRecipients,setChatRecipients] = useState(['hy'])\r\n    //let userId=useRef(\"\")\r\n    let recData = []\r\n    let recMsgs = []\r\n    useEffect(()=>{\r\n        //userId.current = localStorage.getItem(\"userId\")\r\n        getRecData(userId)\r\n        console.log(userId)\r\n        \r\n        \r\n    },[userId])\r\n\r\n    const getRecData = (uId)=>{\r\n         recData = []\r\n         recMsgs = []\r\n        console.log(\"in getdata\")\r\n        chatservice.getChatRecipients(uId).then((data)=>{    \r\n            if(data.length>0){\r\n                console.log(\"data getchat\",data)\r\n                data.map((rec) =>{\r\n                    return recData.push(rec)\r\n                })\r\n                setChatRecipients((r)=>{\r\n                    r.Rname=recData\r\n                    console.log(chatRecipients)\r\n                    return r\r\n                })\r\n                chatRecipients.Rname.map((r)=>{\r\n                    console.log(r)\r\n                    chatservice.getLastMsg(uId, r)\r\n                    .then((data)=>{\r\n                        console.log(\"data\",data)\r\n                        recMsgs.push(data)\r\n                        return recMsgs\r\n                    })\r\n                    .catch((err)=>console.log(err))\r\n                })\r\n                setChatRecipients((r)=>{\r\n                    r.lastMsg=recMsgs\r\n                    console.log(chatRecipients)\r\n                    return r\r\n                })\r\n            }\r\n            else\r\n                console.log(\"no data\")\r\n            \r\n            })\r\n            .catch((err)=>console.log(err))\r\n    }\r\n\r\n    /* useEffect(()=>{\r\n        \r\n    },[chatRecipients]) */\r\n    //getRecData()\r\n  const value = {\r\n      chatRecipients : chatRecipients,\r\n      getRecData : getRecData,\r\n      setRecipients : setChatRecipients\r\n  }\r\n  return (\r\n    <MyChatsContext.Provider value={value}>\r\n      {children}\r\n    </MyChatsContext.Provider>\r\n  )\r\n}\r\n\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\hooks\\useLocalStorage.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\Login.js",["213","214","215"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport authservice from \"../services/AuthService\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport \"./Login.css\"\r\n//import { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"300px\",\r\n  },\r\n  child: {\r\n    width: \"100%\",\r\n    marginLeft: \"100px\",\r\n    marginTop: \"40px\",\r\n  },\r\n  usericon:{\r\n    fontSize:\"6rem\",\r\n    marginLeft:\"150px\",\r\n    marginTop: \"50px\",\r\n    color:\"rgb(252, 250, 250)\"\r\n  }\r\n  \r\n}));\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = React.useState(\"zeniakiran50@gmail.com\");\r\n  const [password, setPassword] = React.useState(\"12345\");\r\n  return (\r\n    <div id=\"bigdiv\">\r\n    <div className = \"containerlogin\" >\r\n    <AccountCircleIcon className={classes.usericon}/>\r\n      <div className={classes.child}>\r\n      <input type=\"email\" className=\"form-control\" placeholder=\"Email\" \r\n         className=\"tf\" value ={email} onChange={(e) => {\r\n          setEmail(e.target.value);\r\n          }}></input>\r\n        <br />\r\n        <input type=\"password\" className=\"form-control\" placeholder=\"Password\" \r\n         className=\"tf1\" value ={password} onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}></input>\r\n        <br />\r\n        \r\n      </div>\r\n      <Button id=\"btnlogin\"\r\n          variant=\"contained\"\r\n          \r\n          onClick={(e) => {\r\n            authservice\r\n              .login(email, password)\r\n              .then((data) => {\r\n                console.log(\" Data from login \",email);\r\n                localStorage.setItem(\"userId\",email)\r\n                window.location.href = \"/users\";\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n                //toast.error(err.response.data, {\r\n                  //position: toast.POSITION.TOP_LEFT,\r\n                //});\r\n              });\r\n          }}\r\n        >\r\n          Login\r\n        </Button>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\SocketContext.js",["216"],"import React ,{createContext, useRef,useEffect,useState} from 'react'\r\nimport io from \"socket.io-client\";\r\n\r\n//export let clientSocket = useRef(null);\r\nexport const SocketContext = createContext();\r\nexport function SocketProvider({id,children}) {\r\n  /* const clientSocket = io(\"http://127.0.0.1:5000\", );\r\n  clientSocket.on('connect' , () => {\r\n    console.log(clientSocket.id);\r\n  }); */\r\n  //const clientSocket = useRef(null);\r\n  const [clientSocket, setSocket] = useState()\r\n  //let clientSocket = useRef(null);\r\n  useEffect(() => {\r\n    const socket = io(\r\n      'http://localhost:5000',\r\n      //{ query: { id } }\r\n    )\r\n    setSocket(socket)\r\n    return () => socket.close()\r\n    /* clientSocket.current = io(\"http://127.0.0.1:5000\");\r\n    clientSocket.current.on('connect' , () => {\r\n      console.log(clientSocket.current.id);\r\n    }); */\r\n  }, [])\r\n  return (\r\n    <SocketContext.Provider value={clientSocket}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  )\r\n}\r\n\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Users.js",["217","218","219","220","221","222","223","224","225","226","227"],"import React, { useState, useEffect ,useRef,useContext} from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\n//import Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import socketIOClient from \"socket.io-client\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport userservice from \"../../services/UserService\";\r\nimport groupservice from \"../../services/GroupService\";\r\nimport { isAuthenticated, logout } from \"../FrontendComponents/clientStorages/auth\";\r\nimport {SocketContext} from '../../context/SocketContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport \"./users.css\"\r\n//import commonUtilites from \"../Utilities/common\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  subheader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  globe: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  subheaderText: {\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  list: {\r\n    maxHeight: \"calc(100vh - 112px)\",\r\n    overflowY: \"auto\",\r\n    \r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(0, 3, 0, 1),\r\n  },\r\n  listText:{\r\n    fontSize : '1.3rem',\r\n    fontFamily : 'Roboto'\r\n  }\r\n  ,listText1:{\r\n    fontSize : '1rem',\r\n    fontFamily : 'Roboto',\r\n    color : 'gray'\r\n  }\r\n  , listBtn:{\r\n    backgroundColor: 'rgb(0, 172, 193)',\r\n    color : 'white',\r\n    fontSize : '1rem'\r\n  }\r\n}));\r\n\r\nconst Users = (props) => {\r\n  const classes = useStyles();\r\n  const [users, setUsers] = useState([]);\r\n  const [newUser, setNewUser] = useState(null);\r\n  const [show, setShow] = React.useState(false)\r\n  let count = useRef(0);\r\n  let userId = useRef(\"\");\r\n  let name = useRef(\"\")\r\n  let userslist = useRef([])\r\n  let history = useHistory();\r\n  let recipients = []\r\n  const clientSocket = useContext(SocketContext);\r\n  //const getUsers = useGetUsers();\r\n  const getData = () => {\r\n    userId.current= localStorage.getItem(\"userId\")\r\n    console.log(userId.current)\r\n    userservice.getUsers()\r\n   .then((data) => {\r\n        userslist.current = data\r\n        userslist.current = userslist.current.filter((u)=>{\r\n          return u.email !== userId.current\r\n        })\r\n        setUsers(userslist.current ); \r\n        console.log(\"contacts\",users)\r\n  })\r\n   .catch((err) => console.log(\"This is err\"+ err));\r\n}\r\n  useEffect(()=>{\r\n    getData()\r\n    console.log(clientSocket)\r\n    if(clientSocket!==undefined)\r\n      clientSocket.emit(\"adduser\",{id:clientSocket.id, name: userId.current})\r\n  },[]);\r\n\r\n    const userClickHandler = (u) =>{\r\n        let email = u.email\r\n        let fname= u.firstName\r\n        let lname = u.lastName\r\n        let lang = u.langPreference\r\n        let profileUrl = u.profileImg\r\n        let x = fname+' '+lname\r\n        localStorage.setItem(\"recName\",x)\r\n        localStorage.setItem(\"recLang\",lang)\r\n        localStorage.setItem(\"profileUrl\",profileUrl)\r\n        history.push('/chat/'+email); \r\n        \r\n  }\r\n\r\n  const viewButtonHandler = ()=>{\r\n    history.push('/mychats/'); \r\n  }\r\n    const showButtons = ()=>{\r\n      setShow(true)\r\n    }\r\n\r\n    const addGroupMember = (e)=>{\r\n          console.log(\"target\",e)\r\n          count.current = count.current+1\r\n          console.log(\"count\",count)\r\n        recipients.push(e)\r\n        console.log(\"Rec\",recipients)\r\n    }\r\n\r\n    const createGroup = () =>{\r\n      if(recipients.length > 1){\r\n        let groupMembers = recipients\r\n        let groupName = name.current\r\n        let groupId = uuidv4();\r\n        let createdBy = userId.current\r\n        groupservice.createGroup({groupName,groupId,createdBy,groupMembers})\r\n              .then((data)=>{\r\n                  console.log(\"Created successfully\",data);\r\n                  history.push('/groupchat'+'/'+groupId)\r\n                  //getData();\r\n                })\r\n              .catch((err)=>{console.log(\"Some Err\")})\r\n        //history.push('/chat/'+address);\r\n        //history.push('/groupchat'+'/'+name.current+'/'+address)\r\n      }\r\n    }\r\n\r\n    const nameHandler = (e) =>{\r\n      name.current = e.target.value\r\n      console.log(name.current)\r\n    }\r\n    const handleLogOut = (evt) => {\r\n      logout(() => {\r\n        history.push(\"/login\");\r\n      });\r\n    };\r\n\r\n  /* useEffect(() => {\r\n    getUsers().then((res) => setUsers(res));\r\n  }, [newUser]); */\r\n\r\n  /* useEffect(() => {\r\n    const socket = socketIOClient(process.env.REACT_APP_API_URL);\r\n    socket.on(\"users\", (data) => {\r\n      setNewUser(data);\r\n    });\r\n  }, []); */\r\n\r\n  return (\r\n    <div>\r\n     {/*<Button onClick={showButtons} variant=\"contained\" color=\"primary\">\r\n        Create Group\r\n      </Button>*/}\r\n      <button\r\n        className=\"btn text-decoration-none btn-link   pl-0\"\r\n        style={{textDecoration:\"none\"}}\r\n        onClick={handleLogOut}\r\n      >\r\n        <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i> Logout\r\n      </button>\r\n      <h3 className=\" text-center\">Contacts</h3>\r\n      <List className={classes.list}>\r\n      {users && (\r\n        <React.Fragment>\r\n          {users.map((u) => (\r\n            <div>\r\n            <ListItem\r\n              className={classes.listItem}\r\n              button\r\n            >\r\n             <ListItemAvatar>\r\n             <Avatar className={classes.globe}>\r\n                <FaceIcon/>\r\n              </Avatar>\r\n            </ListItemAvatar> \r\n              <ListItemText onClick={() => userClickHandler(u)}>\r\n                <Typography className={classes.listText}>{u.firstName}&nbsp;{u.lastName}</Typography>\r\n                <Typography className={classes.listText1}>{u.email}</Typography>\r\n              </ListItemText>\r\n              {/* show ? \r\n              <Button onClick = {() => addGroupMember(u.email)} variant=\"contained\" color=\"primary\">\r\n                Add\r\n              </Button>\r\n              : null */}\r\n              <Button variant=\"contained\" className={classes.listBtn}\r\n              onClick={viewButtonHandler}>View</Button>\r\n            </ListItem>\r\n            <Divider/> \r\n            \r\n            </div>\r\n          ))}\r\n          {/* show ? \r\n              <div>\r\n                <TextField onChange = {nameHandler} id=\"standard-basic\" label=\"Group Name\" />\r\n                <Button onClick = {createGroup} variant=\"contained\" color=\"primary\">\r\n                  Create\r\n                </Button>\r\n                </div>\r\n          : null*/ }\r\n          \r\n        </React.Fragment>\r\n      )}\r\n    </List>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Users;\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\LogIn.js",["228"],"import React, { useState, useEffect ,useContext} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from 'clsx';\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  Input,\r\n  InputAdornment,\r\n  Typography,\r\n  Paper,\r\n  IconButton,\r\n  InputLabel\r\n} from \"@material-ui/core\";\r\nimport { grey, cyan} from '@material-ui/core/colors';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport isEmpty from \"validator/lib/isEmpty\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport { login } from \"../api/auth\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { authentication, isAuthenticated } from \"../clientStorages/auth\";\r\n \r\nconst useStyles = makeStyles((theme) => ({\r\n   textField: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  margin:{\r\n    marginBottom: theme.spacing(2),\r\n    \r\n  }\r\n}));\r\nconst LogIn = ({onIdSubmit}) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    if (isAuthenticated() && isAuthenticated().role === 1)\r\n      history.push(\"/admin/dashboard\");\r\n    else if (isAuthenticated() && isAuthenticated().role === 0)\r\n      history.push(\"/user/dashboard\");\r\n     \r\n      \r\n  }, [history]);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    errorMessage: \"\",\r\n    showPassword: false,\r\n    loading: false,\r\n  });\r\n  const { email, password, errorMessage, loading } = values;\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n      errorMessage: \"\",\r\n    });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n   const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const handleTextChange = (evt) => {\r\n    setValues({\r\n      ...values,\r\n      [evt.target.name]: evt.target.value,\r\n      errorMessage: \"\",\r\n    });\r\n  };\r\n  const Register = (event) => {\r\n    event.preventDefault();\r\n    if (isEmpty(email) || isEmpty(password)) {\r\n      setValues({ ...values, errorMessage: \"Both fields are required\" });\r\n    } else if (!isEmail(email)) {\r\n      setValues({ ...values, errorMessage: \"Invalid Email\" });\r\n    } else {\r\n      setValues({ ...values, loading: true });\r\n      const { email, password } = values;\r\n      const data = { email, password };\r\n\r\n      login(data)\r\n        .then((response) => {\r\n          authentication(response.data.token, response.data.user);\r\n          console.log(response)\r\n          if (isAuthenticated() && isAuthenticated().role === 1)\r\n            history.push(\"/dashboard\");\r\n          else {\r\n        history.push(\"/dashboard\");};\r\n          setValues({ ...values, loading: false });\r\n        })\r\n        .catch((err) => {\r\n          setValues({\r\n            ...values,\r\n            password:\"\",\r\n            loading: false,\r\n            errorMessage: err.response.data.errorMessage,\r\n          });\r\n        });\r\n        //var id \r\n        onIdSubmit(email)\r\n        console.log(email)\r\n    }\r\n  };\r\n  \r\n  const LogInForm = () => (\r\n    <div className=\"Login-container\">\r\n      <Grid container>\r\n        <Grid item xs={1} sm={3} md={4}></Grid>\r\n        <Grid item xs={10} sm={6} md={4}>\r\n           <Paper style={{padding: '30px 50px'}} > \r\n            <Grid container style={{textAlign:\"center\"}}>\r\n          <Grid item xs={6} >\r\n            <Link className=\"active-header\"  to=\"/login\">Sign In</Link>      \r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Link className=\"header\" to=\"/signup\">Sign Up</Link>\r\n          </Grid>\r\n\r\n        </Grid>\r\n           <TextField\r\n           className={classes.textField}\r\n           style={{marginTop:\"2rem\"}}\r\n            label={\r\n              <div> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> Email Address </Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\"}}>*</Typography>\r\n                  </div>\r\n                  }\r\n            id=\"email-field\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            fullWidth\r\n            onChange={handleTextChange}\r\n             InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n             <EmailIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          ),\r\n         }}\r\n          />\r\n          \r\n         <FormControl className={clsx(classes.margin, classes.textField)} fullWidth>\r\n         <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\"}}>*</Typography>\r\n         </InputLabel>\r\n                    <Input\r\n            id=\"standard-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n              \r\n          startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <VpnKeyIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n        \r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n         </FormControl>\r\n            <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginBottom: \"1.2rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={Register}\r\n          >\r\n            Sign in\r\n          </Button>\r\n           <Link to=\"/forgot-password\" style={{textDecoration:\"none\",marginLeft:\"1rem auto\"}}  >Forgot Password?</Link>\r\n   </Paper>\r\n         </Grid>\r\n        <Grid item xs={1} sm={3} md={4}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      {loading && <LinearBuffer />}\r\n     \r\n             <PageTitle name= {\"TalkSee\"}/>\r\n      {LogInForm()}\r\n      \r\n     \r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n       \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\notFound.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\forgotPassword.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\resetPassword.js",["229"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SignUp.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllContacts.js",["230"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\profileSetup.js",["231","232","233"],"import React, { useState, useEffect } from \"react\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport Select from \"react-select\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport { grey, cyan} from '@material-ui/core/colors';\r\nimport {Button} from \"@material-ui/core\";\r\nimport axios from 'axios';\r\nimport accountService from \"../../../services/accountService\";\r\nconst useStyles = makeStyles({\r\n  \r\n  textfield: {\r\n    marginTop: \"2rem\",\r\n  },\r\n  Submitbtn: {\r\n    marginTop: \"0.6rem\",\r\n  },\r\n});\r\n\r\n\r\n\r\nconst ProfileSetup = ( {match}) => {\r\n    const classes = useStyles();\r\nconst options = [\r\n  { label: 'Afrikaans',value:'af' },\r\n  { label: 'Albanian',value:'sq'},\r\n  { label: 'Amharic',value:'am'},\r\n  { label: 'Arabic',value:'ar'},\r\n  { label: 'Armenian',value:'hy'},\r\n  { label: 'Azerbaijani',value:'az'},\r\n  { label: 'Basque',value:'eu'},\r\n  { label: 'Belarusian',value:'be'},\r\n  { label: 'Bengali',value:'bn'},\r\n  { label: 'Bosnian',value:'bs'},\r\n  { label: 'Bulgarian',value:'bg'},\r\n  { label: 'Catalan',value:'ca'},\r\n  { label: 'Cebuano',value:'ceb'},\r\n  { label: 'Chichewa',value:'ny'},\r\n  { label: 'Chinese',value:'zh-cn'},\r\n  { label: 'Corsican',value:'co'},\r\n  { label: 'Croatian',value:'hr'},\r\n  { label: 'Czech',value:'cs'},\r\n  { label: 'Danish',value:'da'},\r\n  { label: 'Dutch',value:'nl'},\r\n  { label: 'English',value:'en'},\r\n  { label: 'Esperanto',value:'eo'},\r\n  { label: 'Estonian',value:'et'},\r\n  { label: 'Filipino',value:'tl'},\r\n  { label: 'Finnish',value:'fi'},\r\n  { label: 'French',value:'fr'},\r\n  { label: 'Danish',value:'da'},\r\n  {label: 'Frisian',value: \"fy\"},\r\n  {label: 'Galician',value: \"gl\"},\r\n  {label: 'Georgian',value: \"ka\"},\r\n  {label: 'German',value: \"de\"},\r\n  {label: 'Greek',value: \"el\"},\r\n  {label: 'Gujarati',value: \"gu\"},\r\n  {label: 'Haitian creole',value: \"ht\"},\r\n  {label:'Hausa',value: \"ha\"},\r\n  {label:'Hawaiian',value: \"haw\"},\r\n  {label:'Hebrew',value: \"iw\"},\r\n  {label: 'Hindi',value: \"hi\"},\r\n  {label:'Hmong',value: \"hmn\"},\r\n  {label:'Hungarian',value: \"hu\"},\r\n  {label:'Icelandic',value: \"is\"},\r\n  {label:'Igbo',value: \"ig\"},\r\n  {label:'Indonesian',value: \"id\"},\r\n  {label:'Irish',value: \"ga\"},\r\n  {label:'Italian',value: \"it\"},\r\n  {label:'Japanese',value: \"ja\"},\r\n  {label:'Javanese',value: \"jw\"},\r\n  {label:'Kannada',value: \"kn\"},\r\n  {label:'Kazakh',value: \"kk\"},\r\n  {label:'Khmer',value:'km'},\r\n  {label:'Korean',value:'ko'},\r\n  {label:'Kurdish',value:'ku'},\r\n  {label: 'Kyrgyz',value: \"ky\"},\r\n  {label: 'Lao',value: \"lo\"},\r\n  {label: 'Latin',value: \"la\"},\r\n  {label: 'Latvian',value: \"lv\"},\r\n  {label: 'Lithuanian',value: \"lt\"},\r\n  {label: 'Luxembourgish',value: \"lb\"},\r\n  {label: 'Macedonian',value: \"mk\"},\r\n  {label:'Malagasy',value: \"mg\"},\r\n  {label:'Malay',value: \"ms\"},\r\n  {label:'Malayalam',value: \"ml\"},\r\n  {label: 'Maltese',value: \"mt\"},\r\n  {label:'Maori',value: \"mi\"},\r\n  {label:'Marathi',value: \"mr\"},\r\n  {label:'Mongolian',value: \"mn\"},\r\n  {label:'Myanmar (burmese)',value: \"my\"},\r\n  {label:'Nepali',value: \"ne\"},\r\n  {label:'Norwegian',value: \"no\"},\r\n  {label:'Odia',value: \"or\"},\r\n  {label:'Pashto',value: \"ps\"},\r\n  {label:'Persian',value: \"fa\"},\r\n  {label:'Polish',value: \"pl\"},\r\n  {label:'Portuguese',value: \"pt\"},\r\n  {label:'Punjabi',value: \"pa\"},\r\n  {label :'Romanian', value:\"ro\"},\r\n  {label :'Russian', value:\"ru\"},\r\n  {label:'Samoan',value: \"sm\"},\r\n  {label:'Scots gaelic',value: \"gd\"},\r\n  {label:'Serbian',value: \"sr\"},\r\n  {label:'Sesotho',value: \"st\"},\r\n  {label:'Shona',value: \"sn\"},\r\n  {label:'Sindhi',value: \"sd\"},\r\n  {label:'Sinhala',value: \"si\"},\r\n  {label:'Slovak',value: \"sk\"},\r\n  {label:'Slovenian', value:\"sl\"},\r\n  {label:'Somali', value:\"so\"},\r\n  {label:'Spanish', value:'es' },\r\n  {label:'Sundanese',value: \"su\"},\r\n  {label:'Swahili',value: \"sw\"},\r\n  {label:'Swedish',value: \"sv\"},\r\n  {label:'Tajik',value: \"tg\"},\r\n  {label:'Tamil',value: \"ta\"},\r\n  {label:'Telugu',value: \"te\"},\r\n  {label:'Thai',value: \"th\"},\r\n  {label:'Turkish',value: \"tr\"},\r\n  {label :'Ukrainian', value:\"uk\"},\r\n  {label:'Urdu',value: \"ur\"},\r\n  {label :'Uyghur', value:\"ug\"},\r\n  {label:'Uzbek', value:'uz' },\r\n  {label:'Vietnamese',value: \"vi\"},\r\n  {label :'Welsh', value:\"cy\"},\r\n  {label:'Xhosa',value: \"xh\"},\r\n  {label :'Yiddish', value:\"yi\"},\r\n  {label:'Yoruba', value:'yo' },\r\n  {label:'Zulu',value: \"zu\"},\r\n  \r\n];\r\n    const [values, setValues] = useState({\r\n    img: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\r\n    language:\"\",\r\n    token:\"\",\r\n    errorMessage: \"\",\r\n    successMsg:\"\",\r\n    infoMessage:\"\",\r\n    loading: false,\r\n  });\r\n  const { img,language,token, successMsg, errorMessage,infoMessage, loading } = values;\r\nuseEffect(() => {\r\n        let token = match.params.token\r\n        if(token) {\r\n            setValues({...values, token})\r\n        }\r\n    }, [])\r\n\r\nconst resizeFile = (file) => new Promise(resolve => {\r\n    Resizer.imageFileResizer(file, 300, 300, 'JPEG', 100, 0,\r\n    uri => {resolve(uri);},'base64' );\r\n});\r\n const uploadImage = async (e) => {\r\n  try {\r\n           const imageFile = e.target.files[0];\r\n           const data = new FormData();\r\n           data.append(\"file\", imageFile);\r\n           //axios.post(\"http://127.0.0.1:5000/\",data)\r\n         //.then(async (response) => {\r\n           setValues({ ...values , errorMessage :\"\", successMsg:\"response.data.successMessage\"})\r\n            const compressedImage = await resizeFile(imageFile);\r\n           setValues({...values, infoMessage: \"Loading....\"});\r\n           data.append(\"file\", compressedImage);\r\n           data.append(\"upload_preset\", \"TalkSee\");\r\n           const res = await fetch(\"https://api.cloudinary.com/v1_1/fariha31/image/upload\",\r\n              { method: \"POST\",\r\n                body: data,\r\n             } );   \r\n           const file =  await res.json();\r\n           setValues({ ...values , img: file.secure_url});\r\n        //})\r\n        /* .catch((err) => {\r\n            setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });*/\r\n      } \r\n catch(err)\r\n     {setValues({...values, errorMessage: \"error in uploading photo\"}); }\r\n}\r\nconst SetProfile =()=>{\r\n  accountService.profileSetup({profileImg: img, langPreference: language, token})\r\n .then((response) => {\r\n          setValues({\r\n            ...values,\r\n            img: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\r\n            language:\"\",\r\n            errorMessage: false,\r\n            successMsg: response.successMessage,\r\n            loading: false,\r\n          });\r\n        })\r\n         .catch((err) => {\r\n           setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n}\r\n \r\n  const ProfilePage = () =>( \r\n  <div className=\"profile-page\">\r\n      <div className=\"profile-container\">\r\n          <div className=\"img-holder\">\r\n             <img src={img} className=\"profile-img\"/>\r\n              </div>\r\n             <input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={uploadImage}  />\r\n             <div className=\"label\">\r\n                   <label className=\"image-upload\" htmlFor=\"input\">\r\n\t\t\t\t\t\t<i className=\"material-icons\">add_photo_alternate</i>\r\n\t\t\t\t\t\tChoose Profile Photo\r\n\t\t\t\t\t</label>\r\n                 </div>\r\n                  \r\n              <Select\r\n                    style={{ width: 210, padding: \"0.4rem\" }}\r\n                    placeholder=\"Select Language ---\"\r\n                    value={options.find(c => c.label === language)}\r\n                    className={classes.textfield}\r\n                    options={options}\r\n                    onChange={(e) => {\r\n                      console.log(e)\r\n                      setValues({\r\n                        ...values,\r\n                        language:e.value ,\r\n                      });\r\n                      \r\n                    }}\r\n                  />\r\n                   <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"0.5rem\" , \r\n              marginTop: \"1.5rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={SetProfile}\r\n            \r\n          >\r\n            Set Profile\r\n          </Button>\r\n                   {successMsg &&  <Button\r\n                     style={{  \r\n                     backgroundColor:grey[500],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"outline\"\r\n            fullWidth\r\n            onClick={event =>  window.location.href='/login'}\r\n                  >\r\n                      Login\r\n                  </Button>}\r\n      </div>             \r\n  </div>\r\n)\r\nreturn (<div>\r\n    \r\n    {loading && <LinearBuffer />}\r\n     <PageTitle name= {\"Profile Setup\"}/>\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n       {infoMessage && (\r\n        <AlertBar type=\"info\" message={infoMessage} autoClose={8000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={4000} />\r\n      )}\r\n      {ProfilePage()}\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default ProfileSetup;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllFriendRequest.js",["234"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllFriends.js",["235","236"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\Activate.js",["237","238"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\userDashboard.js",["239","240","241","242","243","244","245"],"import React, { useEffect, useState,useContext,useRef } from \"react\";\nimport Header from \"./Header\";\nimport { isAuthenticated } from \"../clientStorages/auth\";\nimport { Button } from \"@material-ui/core\";\nimport {SocketContext} from '../../../context/SocketContext';\nimport {MyChatsContext} from '../../../context/MyChatsContext';\nimport { useHistory } from 'react-router-dom';\n\nconst UserDashboard = ( ) => {\n  const {chatRecipients,setRecipients,getRecData} = useContext(MyChatsContext);\n  const [isRecipient,setIsRec] = useState(0)\n  const [Fname, setFname] = useState(\"\");\n  const [Lname, setLname] = useState(\"\");\n  const myId= isAuthenticated()._id;\n  let userEmail = useRef()\n  let history = useHistory()\n  userEmail.current = JSON.parse(localStorage.getItem(\"user\")).email\n  console.log(userEmail)\n  const clientSocket = useContext(SocketContext);\n   useEffect (()=>{\n    setFname(isAuthenticated().firstName);\n    setLname(isAuthenticated().lastName);\n   },[])\n   window.onload = () => {\n    //alert('page is fully loaded');\n    if(clientSocket!==undefined){\n      console.log(\"ok\")\n      clientSocket.emit(\"adduser\",{id:clientSocket.id, name: userEmail.current})\n    }\n    else{\n      console.log(\"ghy\")\n    }\n  };\n  \n   useEffect(()=>{\n    if(clientSocket!==undefined){\n        console.log(clientSocket)\n        clientSocket.emit(\"adduser\",{id:clientSocket.id, name: userEmail.current})\n        \n        /* clientSocket.on(\"newRecipient\", (payload) => {\n          console.log(\"IN NEW REc\",payload)\n          let index;\n          let count=0;\n          if(chatRecipients.Rname && chatRecipients.lastMsg){\n            console.log(chatRecipients)\n            chatRecipients.Rname.map((r,indx)=>{\n              console.log(payload.payload.from)\n                if(payload.payload.from ===r){\n                  console.log(\"true\",typeof(payload.payload.from),r)\n                  //setRecArray(index,payload.messageBody) \n                  index = indx\n                  count = count+1\n                  //setIsRec(count)\n                }\n                else{\n                  console.log(\"false\",payload.payload.from,r)\n                }\n            })\n            if(count >=1)\n                setRecArray(index,payload.payload.messageBody)\n            else if(count === 0)\n                console.log(\"recipient not present\")\n            console.log(\"After state\",chatRecipients)\n          }\n          else{\n            console.log(\"no chat\")\n          }\n        //props.appFunc(payload.notification)\n\n        \n      }) */\n      }\n      else{\n        console.log(\"no socket\")\n      }\n   },[],[clientSocket])\n\n   useEffect (()=>{\n    if(clientSocket!==undefined){\n    clientSocket.once(\"newMessage\", (payload) => {\n      console.log(\"IN NEW MSG\")\n      alert(\"new message!\")\n    //props.appFunc(payload.notification)\n    \n  })\n}\n   },[])\n   const setRecArray = (index,msg)=>{\n    let items = [...chatRecipients.lastMsg];\n      // 2. Make a shallow copy of the item you want to mutate\n      let item = {...items[index]};\n      // 3. Replace the property you're intested in\n      //item.lastMsg = msg;\n      // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n      items[index] = msg;\n      // 5. Set the state to our new copy\n      setRecipients((r)=>{\n        r.lastMsg = items\n        console.log(r)\n        return r\n      });\n      history.push('/mychats')\n  }\n  return <div>\n    <Header/>\n   \n    <h1> Hi, {Fname + \" \" + Lname}</h1>\n     <Button className= \"loginbtn\"\n             style={{marginLeft:\"20rem\" ,display:\"block\"}}\n            variant=\"outlined\" \n            color=\"Primary\"\n            onClick={event =>  history.push('/all-contacts')}> Add New friend</Button>\n    <Button className= \"loginbtn\"\n             style={{marginLeft:\"20rem\",marginTop:\"2rem\"}}\n            variant=\"outlined\" \n            color=\"Primary\"\n            onClick={event =>  history.push('/all-my-friends')}> My friend Lists</Button>\n    <Button className= \"loginbtn\"\n             style={{marginLeft:\"20rem\"}}\n            variant=\"outlined\" \n            color=\"Primary\"\n            onClick={event =>  history.push('/mychats')}> My Chats</Button>\n    <Button className= \"loginbtn\"\n             style={{marginLeft:\"20rem\",marginTop:\"2rem\",display:\"block\"}}\n            variant=\"outlined\" \n            color=\"Primary\"\n            onClick={event =>  history.push('/update-my-profile-setup/'+myId)}>Update Profile</Button>\n      \n    </div>\n};\n\nexport default UserDashboard;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Chat.js",["246","247","248","249","250","251","252","253","254","255","256","257","258","259"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\pageTitle.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\GroupService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\UserService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\friendService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\auth.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\accountService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\ProgressBar.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\api\\auth.js",["260","261"],"import axios from \"axios\";\naxios.defaults.headers.common[\"x-auth-token\"] =localStorage.getItem(\"token\");\nexport const signup = async (data) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await axios.post(\"http://localhost:5000/api/users/signup\", data);\n  return response;\n};\nexport const login = async (data) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await axios.post(\"http://localhost:5000/api/users/login\", data);\n  return response;\n};\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\AuthService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\ChatService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleFriend.js",["262"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\AlertBar.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleFriendRequest.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\SettingMessage.js",["263"],"import React from \"react\";\r\nimport \"./chat.css\"\r\n//import myimg from \"./queen.jpg\"\r\nimport { Player } from 'video-react';\r\nimport \"video-react/dist/video-react.css\"\r\nexport default function TypeMessage(props) {\r\n  //console.log(\"From setting\",props.chat)\r\n  return (\r\n    props.chat.messages.map((message) => {\r\n        //console.log(\"msg\",message)\r\n        //console.log(\"user\",props.user)\r\n      if (message.to === props.user) {\r\n        //console.log(\"Type received\")\r\n        return (\r\n          <div className ='msgdiv'>\r\n          <div className=\"incoming_msg_img\">\r\n           \r\n          </div>\r\n            <div className=\"received_msg\">\r\n              <div className=\"received_withd_msg\">\r\n                <div> \r\n                <Player >\r\n                  <source src={message.messageVideo} />\r\n              </Player>\r\n                </div>\r\n              \r\n                <p>{message.messageBody}</p>\r\n                <span className=\"time_date\"> {message.time}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else if(message.from === props.user) {\r\n        return (\r\n          <div class=\"outgoing_msg\">\r\n            <div class=\"sent_msg\">\r\n            {<Player>\r\n                  <source src={message.messageVideo} />\r\n              </Player>}\r\n              <p>{message.messageBody}</p>\r\n              <span class=\"time_date\"> {message.time}</span>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else{\r\n        console.log(\"nothing\")\r\n      }\r\n        \r\n    })\r\n  );\r\n}\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\Header.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\TypeMessage.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\GenericService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\localStorage.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\cookies.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\contactService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleContact.js",["264"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\updateProfileSetup.js",["265"],{"ruleId":"266","severity":1,"message":"267","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":19},{"ruleId":"266","severity":1,"message":"270","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":13},{"ruleId":"266","severity":1,"message":"271","line":10,"column":10,"nodeType":"268","messageId":"269","endLine":10,"endColumn":18},{"ruleId":"266","severity":1,"message":"272","line":11,"column":10,"nodeType":"268","messageId":"269","endLine":11,"endColumn":21},{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","replacedBy":"276"},{"ruleId":"266","severity":1,"message":"277","line":6,"column":8,"nodeType":"268","messageId":"269","endLine":6,"endColumn":13},{"ruleId":"266","severity":1,"message":"278","line":20,"column":8,"nodeType":"268","messageId":"269","endLine":20,"endColumn":10},{"ruleId":"266","severity":1,"message":"267","line":23,"column":10,"nodeType":"268","messageId":"269","endLine":23,"endColumn":19},{"ruleId":"266","severity":1,"message":"279","line":23,"column":20,"nodeType":"268","messageId":"269","endLine":23,"endColumn":26},{"ruleId":"266","severity":1,"message":"280","line":24,"column":8,"nodeType":"268","messageId":"269","endLine":24,"endColumn":23},{"ruleId":"266","severity":1,"message":"279","line":1,"column":28,"nodeType":"268","messageId":"269","endLine":1,"endColumn":34},{"ruleId":"266","severity":1,"message":"278","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":10},{"ruleId":"266","severity":1,"message":"281","line":6,"column":8,"nodeType":"268","messageId":"269","endLine":6,"endColumn":12},{"ruleId":"266","severity":1,"message":"282","line":15,"column":8,"nodeType":"268","messageId":"269","endLine":15,"endColumn":14},{"ruleId":"266","severity":1,"message":"283","line":60,"column":10,"nodeType":"268","messageId":"269","endLine":60,"endColumn":16},{"ruleId":"266","severity":1,"message":"284","line":60,"column":17,"nodeType":"268","messageId":"269","endLine":60,"endColumn":26},{"ruleId":"266","severity":1,"message":"285","line":62,"column":7,"nodeType":"268","messageId":"269","endLine":62,"endColumn":14},{"ruleId":"266","severity":1,"message":"286","line":63,"column":7,"nodeType":"268","messageId":"269","endLine":63,"endColumn":13},{"ruleId":"266","severity":1,"message":"287","line":64,"column":7,"nodeType":"268","messageId":"269","endLine":64,"endColumn":12},{"ruleId":"288","severity":1,"message":"289","line":96,"column":5,"nodeType":"290","endLine":96,"endColumn":21,"suggestions":"291"},{"ruleId":"292","severity":1,"message":"293","line":105,"column":42,"nodeType":"294","messageId":"295","endLine":105,"endColumn":44},{"ruleId":"288","severity":1,"message":"296","line":127,"column":5,"nodeType":"290","endLine":127,"endColumn":7,"suggestions":"297"},{"ruleId":"266","severity":1,"message":"279","line":1,"column":31,"nodeType":"268","messageId":"269","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"298","line":16,"column":7,"nodeType":"290","endLine":16,"endColumn":15,"suggestions":"299"},{"ruleId":"292","severity":1,"message":"293","line":33,"column":45,"nodeType":"294","messageId":"295","endLine":33,"endColumn":47},{"ruleId":"266","severity":1,"message":"300","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":19},{"ruleId":"301","severity":1,"message":"302","line":39,"column":10,"nodeType":"303","endLine":39,"endColumn":24},{"ruleId":"301","severity":1,"message":"302","line":44,"column":10,"nodeType":"303","endLine":44,"endColumn":25},{"ruleId":"266","severity":1,"message":"279","line":1,"column":31,"nodeType":"268","messageId":"269","endLine":1,"endColumn":37},{"ruleId":"266","severity":1,"message":"300","line":6,"column":8,"nodeType":"268","messageId":"269","endLine":6,"endColumn":17},{"ruleId":"266","severity":1,"message":"304","line":19,"column":10,"nodeType":"268","messageId":"269","endLine":19,"endColumn":25},{"ruleId":"266","severity":1,"message":"305","line":64,"column":10,"nodeType":"268","messageId":"269","endLine":64,"endColumn":17},{"ruleId":"266","severity":1,"message":"306","line":64,"column":19,"nodeType":"268","messageId":"269","endLine":64,"endColumn":29},{"ruleId":"266","severity":1,"message":"307","line":65,"column":10,"nodeType":"268","messageId":"269","endLine":65,"endColumn":14},{"ruleId":"288","severity":1,"message":"308","line":93,"column":5,"nodeType":"290","endLine":93,"endColumn":7,"suggestions":"309"},{"ruleId":"266","severity":1,"message":"310","line":112,"column":11,"nodeType":"268","messageId":"269","endLine":112,"endColumn":22},{"ruleId":"266","severity":1,"message":"311","line":116,"column":11,"nodeType":"268","messageId":"269","endLine":116,"endColumn":25},{"ruleId":"266","severity":1,"message":"312","line":124,"column":11,"nodeType":"268","messageId":"269","endLine":124,"endColumn":22},{"ruleId":"313","severity":1,"message":"314","line":133,"column":44,"nodeType":"315","messageId":"316","endLine":133,"endColumn":45},{"ruleId":"266","severity":1,"message":"317","line":142,"column":11,"nodeType":"268","messageId":"269","endLine":142,"endColumn":22},{"ruleId":"266","severity":1,"message":"318","line":1,"column":38,"nodeType":"268","messageId":"269","endLine":1,"endColumn":48},{"ruleId":"288","severity":1,"message":"319","line":65,"column":8,"nodeType":"290","endLine":65,"endColumn":10,"suggestions":"320"},{"ruleId":"288","severity":1,"message":"321","line":31,"column":5,"nodeType":"290","endLine":31,"endColumn":7,"suggestions":"322"},{"ruleId":"266","severity":1,"message":"270","line":10,"column":8,"nodeType":"268","messageId":"269","endLine":10,"endColumn":13},{"ruleId":"288","severity":1,"message":"319","line":150,"column":8,"nodeType":"290","endLine":150,"endColumn":10,"suggestions":"323"},{"ruleId":"324","severity":1,"message":"325","line":203,"column":14,"nodeType":"326","endLine":203,"endColumn":54},{"ruleId":"288","severity":1,"message":"327","line":20,"column":34,"nodeType":"290","endLine":20,"endColumn":36,"suggestions":"328"},{"ruleId":"266","severity":1,"message":"329","line":16,"column":12,"nodeType":"268","messageId":"269","endLine":16,"endColumn":24},{"ruleId":"288","severity":1,"message":"330","line":30,"column":8,"nodeType":"290","endLine":30,"endColumn":10,"suggestions":"331"},{"ruleId":"266","severity":1,"message":"332","line":19,"column":32,"nodeType":"268","messageId":"269","endLine":19,"endColumn":37},{"ruleId":"288","severity":1,"message":"333","line":46,"column":9,"nodeType":"290","endLine":46,"endColumn":23,"suggestions":"334"},{"ruleId":"266","severity":1,"message":"335","line":10,"column":39,"nodeType":"268","messageId":"269","endLine":10,"endColumn":49},{"ruleId":"266","severity":1,"message":"336","line":11,"column":10,"nodeType":"268","messageId":"269","endLine":11,"endColumn":21},{"ruleId":"266","severity":1,"message":"337","line":11,"column":22,"nodeType":"268","messageId":"269","endLine":11,"endColumn":30},{"ruleId":"288","severity":1,"message":"338","line":76,"column":6,"nodeType":"290","endLine":76,"endColumn":8,"suggestions":"339"},{"ruleId":"288","severity":1,"message":"338","line":87,"column":6,"nodeType":"290","endLine":87,"endColumn":8,"suggestions":"340"},{"ruleId":"266","severity":1,"message":"341","line":88,"column":10,"nodeType":"268","messageId":"269","endLine":88,"endColumn":21},{"ruleId":"266","severity":1,"message":"342","line":91,"column":11,"nodeType":"268","messageId":"269","endLine":91,"endColumn":15},{"ruleId":"266","severity":1,"message":"270","line":3,"column":8,"nodeType":"268","messageId":"269","endLine":3,"endColumn":13},{"ruleId":"266","severity":1,"message":"278","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":10},{"ruleId":"266","severity":1,"message":"304","line":12,"column":10,"nodeType":"268","messageId":"269","endLine":12,"endColumn":25},{"ruleId":"266","severity":1,"message":"336","line":21,"column":10,"nodeType":"268","messageId":"269","endLine":21,"endColumn":21},{"ruleId":"266","severity":1,"message":"337","line":21,"column":22,"nodeType":"268","messageId":"269","endLine":21,"endColumn":30},{"ruleId":"266","severity":1,"message":"343","line":23,"column":7,"nodeType":"268","messageId":"269","endLine":23,"endColumn":8},{"ruleId":"266","severity":1,"message":"344","line":37,"column":7,"nodeType":"268","messageId":"269","endLine":37,"endColumn":13},{"ruleId":"345","severity":1,"message":"346","line":64,"column":47,"nodeType":"347","messageId":"348","endLine":64,"endColumn":48,"fix":"349"},{"ruleId":"292","severity":1,"message":"293","line":80,"column":49,"nodeType":"294","messageId":"295","endLine":80,"endColumn":51},{"ruleId":"288","severity":1,"message":"350","line":115,"column":4,"nodeType":"290","endLine":115,"endColumn":6,"suggestions":"351"},{"ruleId":"288","severity":1,"message":"298","line":120,"column":3,"nodeType":"290","endLine":120,"endColumn":19,"suggestions":"352"},{"ruleId":"288","severity":1,"message":"353","line":160,"column":15,"nodeType":"315","endLine":160,"endColumn":24},{"ruleId":"266","severity":1,"message":"341","line":181,"column":7,"nodeType":"268","messageId":"269","endLine":181,"endColumn":18},{"ruleId":"266","severity":1,"message":"354","line":196,"column":13,"nodeType":"268","messageId":"269","endLine":196,"endColumn":17},{"ruleId":"266","severity":1,"message":"355","line":4,"column":9,"nodeType":"268","messageId":"269","endLine":4,"endColumn":15},{"ruleId":"266","severity":1,"message":"355","line":13,"column":9,"nodeType":"268","messageId":"269","endLine":13,"endColumn":15},{"ruleId":"266","severity":1,"message":"356","line":11,"column":11,"nodeType":"268","messageId":"269","endLine":11,"endColumn":18},{"ruleId":"292","severity":1,"message":"357","line":9,"column":39,"nodeType":"294","messageId":"358","endLine":9,"endColumn":41},{"ruleId":"266","severity":1,"message":"318","line":4,"column":27,"nodeType":"268","messageId":"269","endLine":4,"endColumn":37},{"ruleId":"288","severity":1,"message":"359","line":152,"column":6,"nodeType":"290","endLine":152,"endColumn":8,"suggestions":"360"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Provider' is defined but never used.","'createStore' is defined but never used.","no-native-reassign",["361"],"no-negated-in-lhs",["362"],"'Login' is defined but never used.","'io' is defined but never used.","'useRef' is defined but never used.","'useLocalStorage' is defined but never used.","'List' is defined but never used.","'Button' is defined but never used.","'newMsg' is assigned a value but never used.","'setNewMsg' is assigned a value but never used.","'recName' is assigned a value but never used.","'recMsg' is assigned a value but never used.","'dummy' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getRecData' and 'uId.email'. Either include them or remove the dependency array.","ArrayExpression",["363"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'chatRecipients', 'clientSocket', 'setNewRecipient', and 'setRecArray'. Either include them or remove the dependency array.",["364"],"React Hook useEffect has a missing dependency: 'getRecData'. Either include it or remove the dependency array.",["365"],"'TextField' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'isAuthenticated' is defined but never used.","'newUser' is assigned a value but never used.","'setNewUser' is assigned a value but never used.","'show' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clientSocket' and 'getData'. Either include them or remove the dependency array.",["366"],"'showButtons' is assigned a value but never used.","'addGroupMember' is assigned a value but never used.","'createGroup' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'nameHandler' is assigned a value but never used.","'useContext' is defined but never used.","React Hook useEffect has missing dependencies: 'match.params.token' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["367"],"React Hook useEffect has missing dependencies: 'getData' and 'getSingleContact'. Either include them or remove the dependency array.",["368"],["369"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'myId'. Either include it or remove the dependency array.",["370"],"'clientSocket' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllMyFriends'. Either include it or remove the dependency array.",["371"],"'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["372"],"'getRecData' is assigned a value but never used.","'isRecipient' is assigned a value but never used.","'setIsRec' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'clientSocket'. Either include it or remove the dependency array.",["373"],["374"],"'setRecArray' is assigned a value but never used.","'item' is assigned a value but never used.","'x' is assigned a value but never used.","'pusher' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"375","text":"376"},"React Hook useEffect has missing dependencies: 'dummy' and 'props.match.params.id'. Either include them or remove the dependency array.",["377"],["378"],"Assignments to the 'count' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'data' is assigned a value but never used.","'config' is assigned a value but never used.","'myEmail' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'myId' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["379"],"no-global-assign","no-unsafe-negation",{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"388","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"399","fix":"401"},[2486,2493],"\r\n    .",{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},"Update the dependencies array to be: [chatRecipients, getRecData, uId.email]",{"range":"408","text":"409"},"Update the dependencies array to be: [chatRecipients, clientSocket, setNewRecipient, setRecArray]",{"range":"410","text":"411"},"Update the dependencies array to be: [getRecData, userId]",{"range":"412","text":"413"},"Update the dependencies array to be: [clientSocket, getData]",{"range":"414","text":"415"},"Update the dependencies array to be: [match.params.token, values]",{"range":"416","text":"417"},"Update the dependencies array to be: [getData, getSingleContact]",{"range":"418","text":"419"},{"range":"420","text":"417"},"Update the dependencies array to be: [myId]",{"range":"421","text":"422"},"Update the dependencies array to be: [getAllMyFriends]",{"range":"423","text":"424"},"Update the dependencies array to be: [formData, match.params]",{"range":"425","text":"426"},"Update the dependencies array to be: [clientSocket]",{"range":"427","text":"428"},{"range":"429","text":"428"},"Update the dependencies array to be: [dummy, props.match.params.id]",{"range":"430","text":"431"},"Update the dependencies array to be: [chatRecipients, getRecData]",{"range":"432","text":"433"},"Update the dependencies array to be: [myId, values]",{"range":"434","text":"435"},[2694,2710],"[chatRecipients, getRecData, uId.email]",[3592,3594],"[chatRecipients, clientSocket, setNewRecipient, setRecArray]",[527,535],"[getRecData, userId]",[3027,3029],"[clientSocket, getData]",[1681,1683],"[match.params.token, values]",[1054,1056],"[getData, getSingleContact]",[4931,4933],[852,854],"[myId]",[1089,1091],"[getAllMyFriends]",[1648,1662],"[formData, match.params]",[2600,2602],"[clientSocket]",[2844,2846],[4273,4275],"[dummy, props.match.params.id]",[4363,4379],"[chatRecipients, getRecData]",[5079,5081],"[myId, values]"]