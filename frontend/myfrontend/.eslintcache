[{"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\index.js":"1","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\reportWebVitals.js":"2","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\App.js":"3","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\MyChatsContext.js":"4","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\SocketContext.js":"5","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Users.js":"6","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\Login.js":"7","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\notFound.js":"8","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\hooks\\useLocalStorage.js":"9","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\profileSetup.js":"10","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\forgotPassword.js":"11","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\MyChats.js":"12","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\LogIn.js":"13","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\updateProfileSetup.js":"14","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\Activate.js":"15","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllContacts.js":"16","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\resetPassword.js":"17","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllFriends.js":"18","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SignUp.js":"19","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllFriendRequest.js":"20","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\userDashboard.js":"21","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Chat.js":"22","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\GroupService.js":"23","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\UserService.js":"24","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\pageTitle.js":"25","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\ChatService.js":"26","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\friendService.js":"27","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\Header.js":"28","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleFriend.js":"29","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\AuthService.js":"30","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\auth.js":"31","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\accountService.js":"32","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\api\\auth.js":"33","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\AlertBar.js":"34","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\ProgressBar.js":"35","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\TypeMessage.js":"36","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\SettingMessage.js":"37","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleFriendRequest.js":"38","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\contactService.js":"39","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleContact.js":"40","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\GenericService.js":"41","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\localStorage.js":"42","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\cookies.js":"43","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\AllChats.js":"44","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\SingleChat.js":"45","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\RenderChat.js":"46"},{"size":1664,"mtime":1618066164985,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":499162500000,"results":"49","hashOfConfig":"48"},{"size":3478,"mtime":1620150562511,"results":"50","hashOfConfig":"48"},{"size":3708,"mtime":1619802370153,"results":"51","hashOfConfig":"48"},{"size":2296,"mtime":1620161841467,"results":"52","hashOfConfig":"48"},{"size":7000,"mtime":1618249738129,"results":"53","hashOfConfig":"48"},{"size":2245,"mtime":1614176287276,"results":"54","hashOfConfig":"48"},{"size":437,"mtime":1614689093529,"results":"55","hashOfConfig":"48"},{"size":607,"mtime":1618229829293,"results":"56","hashOfConfig":"48"},{"size":9533,"mtime":1618423364213,"results":"57","hashOfConfig":"48"},{"size":4158,"mtime":1618052506116,"results":"58","hashOfConfig":"48"},{"size":9224,"mtime":1619802539531,"results":"59","hashOfConfig":"48"},{"size":7518,"mtime":1620157220871,"results":"60","hashOfConfig":"48"},{"size":9931,"mtime":1620166007149,"results":"61","hashOfConfig":"48"},{"size":3893,"mtime":1618995410609,"results":"62","hashOfConfig":"48"},{"size":3857,"mtime":1620165977754,"results":"63","hashOfConfig":"48"},{"size":7992,"mtime":1618996175065,"results":"64","hashOfConfig":"48"},{"size":3333,"mtime":1620165828028,"results":"65","hashOfConfig":"48"},{"size":11582,"mtime":1618422980426,"results":"66","hashOfConfig":"48"},{"size":3382,"mtime":1620165960567,"results":"67","hashOfConfig":"48"},{"size":3206,"mtime":1620157384309,"results":"68","hashOfConfig":"48"},{"size":5914,"mtime":1620413701937,"results":"69","hashOfConfig":"48"},{"size":440,"mtime":1613505721315,"results":"70","hashOfConfig":"48"},{"size":425,"mtime":1620237375174,"results":"71","hashOfConfig":"48"},{"size":781,"mtime":1618996042146,"results":"72","hashOfConfig":"48"},{"size":727,"mtime":1618163366505,"results":"73","hashOfConfig":"48"},{"size":787,"mtime":1618423755981,"results":"74","hashOfConfig":"48"},{"size":2865,"mtime":1619896905411,"results":"75","hashOfConfig":"48"},{"size":2394,"mtime":1620067098679,"results":"76","hashOfConfig":"48"},{"size":1156,"mtime":1618052506122,"results":"77","hashOfConfig":"48"},{"size":522,"mtime":1618052506107,"results":"78","hashOfConfig":"48"},{"size":607,"mtime":1618937715752,"results":"79","hashOfConfig":"48"},{"size":573,"mtime":1618400947391,"results":"80","hashOfConfig":"48"},{"size":2255,"mtime":1614689093224,"results":"81","hashOfConfig":"48"},{"size":1091,"mtime":1614689093239,"results":"82","hashOfConfig":"48"},{"size":1576,"mtime":1615214194986,"results":"83","hashOfConfig":"48"},{"size":1938,"mtime":1620341077262,"results":"84","hashOfConfig":"48"},{"size":2553,"mtime":1618997269887,"results":"85","hashOfConfig":"48"},{"size":308,"mtime":1618996505101,"results":"86","hashOfConfig":"48"},{"size":3055,"mtime":1618995919347,"results":"87","hashOfConfig":"48"},{"size":1643,"mtime":1612354085455,"results":"88","hashOfConfig":"48"},{"size":284,"mtime":1618052506109,"results":"89","hashOfConfig":"48"},{"size":268,"mtime":1618052506108,"results":"90","hashOfConfig":"48"},{"size":7218,"mtime":1620673372883,"results":"91","hashOfConfig":"48"},{"size":3468,"mtime":1620601244673,"results":"92","hashOfConfig":"48"},{"size":2931,"mtime":1620341548758,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},"1gexn1j",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"97"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"97"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"97"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"97"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"97"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"97"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"97"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"97"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"97"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"97"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"97"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"97"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"97"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"97"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"97"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"97"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"97"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"97"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"97"},"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\index.js",["209","210","211","212"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//import Pusher from 'pusher-js';\r\n//import Reducer from './Redux/reducers/chat_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n//Pusher.logToConsole = true;\r\n\r\n//useEffect (()=>{\r\n  /* const pusher = new Pusher('18cb37e3146179a6a80e', {\r\n  cluster: 'ap2',\r\n  authEndpoint: 'http://localhost:5000/api/chatapi/pusher/auth'\r\n}); */\r\n/* usher.connection.bind('connected', function () {\r\n  // attach the socket ID to all outgoing Axios requests\r\n  axios.defaults.headers.common['X-Socket-Id'] = pusher.connection.socket_id;\r\n  console.log(\"id:\",pusher.connection.socket_id)\r\n}); */\r\n//},[])\r\n/* var channel = pusher.subscribe('private-my-channel');\r\nchannel.bind('my-event', function(data) {\r\n  console.log(\"in bind\")\r\n  alert(JSON.stringify(data));\r\n  console.log(\"pusher data:\",data)\r\n}); */\r\n\r\n//const myStore = createStore(Reducer, window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n                            //window.__REDUX_DEVTOOLS_EXTENSION__() );\r\n\r\n/* ReactDOM.render(\r\n  <Provider\r\n        store={myStore}\r\n        >\r\n        <App />\r\n  </Provider>\r\n    \r\n  ,\r\n  document.getElementById('root')\r\n); */\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["213","214"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\reportWebVitals.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\App.js",["215","216","217"],"import './App.css';\r\nimport { Route, Switch,BrowserRouter as Router,Redirect } from \"react-router-dom\";\r\nimport UserDashboard from \"./components/FrontendComponents/components/userDashboard\";\r\nimport SignUp from \"./components/FrontendComponents/components/SignUp\";\r\nimport LogIn from \"./components/FrontendComponents/components/LogIn\";\r\nimport Activate from \"./components/FrontendComponents/components/Activate\";\r\nimport notFound from \"./components/FrontendComponents/components/notFound\";\r\nimport ForgotPassword from \"./components/FrontendComponents/components/forgotPassword\";\r\nimport ResetPassword from \"./components/FrontendComponents/components/resetPassword\";\r\nimport ProfileSetup from \"./components/FrontendComponents/components/profileSetup\";\r\nimport AllContact from \"./components/FrontendComponents/components/AllContacts\";\r\nimport AllFriendRequest from \"./components/FrontendComponents/components/AllFriendRequest\";\r\nimport AllFriends from \"./components/FrontendComponents/components/AllFriends\";\r\nimport UpdateProfileSetup from \"./components/FrontendComponents/components/updateProfileSetup\";\r\nimport Chat from \"./components/ChatComponents/Chat\";\r\nimport MyChats from \"./components/ChatComponents/AllChats\";\r\nimport Users from \"./components/ChatComponents/Users\";\r\nimport {SocketProvider} from './context/SocketContext';\r\nimport {MyChatsProvider} from './context/MyChatsContext';\r\n//import {SocketContext} from './context/SocketContext';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport {useState, useEffect, useContext } from 'react';\r\n\r\nconst App =() =>{\r\n  const [userId,setId] = useState()\r\n  const [dId,setDid] = useState()\r\n  //const {messageEvent} = useContext(SocketContext);\r\n  \r\n  /* useEffect(()=>{\r\n    messageEvent()\r\n\r\n  },[]) */\r\n  return (\r\n    <div className=\"App\">\r\n    <MyChatsProvider userId={userId}>\r\n    <SocketProvider id={dId} >\r\n    <ToastContainer/>\r\n    <Router>\r\n      <Switch>\r\n            <Route path=\"/\" exact><LogIn onIdSubmit={setId} setId={setDid}/></Route>\r\n            <Route exact path=\"/signup\" component={SignUp} />\r\n            <Route exact path=\"/login\"><LogIn onIdSubmit={setId}  setId={setDid}/></Route>\r\n            <Route exact path=\"/user/activate/:token\" component={Activate} />\r\n            <Route exact path=\"/dashboard/:id\" ><UserDashboard/></Route>\r\n            <Route exact path=\"/reset-password/:token\" component={ResetPassword} />\r\n            <Route exact path=\"/forgot-password\" component={ForgotPassword} />\r\n            <Route exact path=\"/profile-setup/:token\" component={ProfileSetup}/>\r\n            <Route exact path=\"/update-my-profile-setup/:id\" component={UpdateProfileSetup}/>\r\n            <Route exact path=\"/notfound\" component={notFound} />\r\n            <Route exact path =\"/all-contacts/:id\" component= {AllContact}/>\r\n            <Route exact path = \"/all-friend-requests/:id\" component ={AllFriendRequest}/>\r\n            <Route exact path =\"/all-my-friends/:id\"><AllFriends /></Route>\r\n\r\n            <Route path=\"/chat/:id\" render={(props) => (\r\n              <Chat {...props} key={props.location.key} />\r\n            )} exact>\r\n            </Route>\r\n            <Route path=\"/mychats/:id\" render={(props) => (\r\n              <MyChats {...props} key={props.location.key}/>\r\n            )} exact>\r\n            </Route>\r\n            <Redirect to=\"/notfound\" />  \r\n      </Switch>\r\n      </Router>\r\n    </SocketProvider>\r\n    </MyChatsProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\MyChatsContext.js",["218","219","220","221"],"import React ,{createContext, useRef,useEffect,useState} from 'react'\r\nimport chatservice from \"../services/ChatService\"\r\nimport userservice from \"../services/UserService\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const MyChatsContext = createContext();\r\nexport function MyChatsProvider({userId,children}) {\r\n    const [chatRecipients,setChatRecipients] = useState([])\r\n    let recData = []\r\n    let recMsgs = []\r\n    let msgType = []\r\n    let recName = []\r\n    let recId=[]\r\n    let imgUrl =[]\r\n    useEffect(()=>{\r\n        //userId.current = localStorage.getItem(\"userId\")\r\n        if(userId !== undefined){\r\n        getRecData(userId,undefined)\r\n        //console.log(userId)\r\n        }\r\n        console.log(\"undefined\")\r\n        \r\n    },[userId])\r\n\r\n    const getRecData = (uId)=>{\r\n         recData = []; recName =[]; recMsgs = []; msgType = []; imgUrl=[]; recId=[]\r\n        //console.log(\"in getdata\")\r\n        chatservice.getChatRecipients(uId).then((data)=>{    \r\n            if(data.length>0){\r\n                //console.log(\"data getchat\",data)\r\n                /* dataFromDb.push(data)\r\n                console.log(\"data from db getchat\",dataFromDb) */\r\n                data.map((rec) =>{\r\n                    //console.log('single rec',rec)\r\n                    return recData.push(rec)\r\n                })\r\n                console.log(\"rec data\",recData)\r\n                recData = Array.from(new Set(recData));\r\n                console.log(\"rec data updated\",recData)\r\n                setChatRecipients((r)=>{\r\n                    r.Rname=recData\r\n                    //console.log(chatRecipients)\r\n                    return r\r\n                })\r\n                chatRecipients.Rname.map((r)=>{\r\n                    //console.log(\"r\",r)\r\n                    chatservice.getLastMsg(uId, r)\r\n                    .then((data1)=>{\r\n                        //console.log(\"data\",data1.type)\r\n                        recMsgs.push(data1.lastMsg)\r\n                        msgType.push(data1.type)\r\n                        //return {recMsgs,msgType}\r\n                    })\r\n                    .catch((err)=>console.log(err))\r\n\r\n                    userservice.getUserByEmail(r).then((data2)=>{\r\n                        //console.log(\"data 2\",data2)\r\n                        recId.push(data2[0]._id)\r\n                        imgUrl.push(data2[0].profileImg)\r\n                        recName.push(data2[0].firstName+' '+data2[0].lastName)\r\n                        setChatRecipients((r)=>{\r\n                            r.lastMsg = recMsgs\r\n                            r.msgType = msgType\r\n                            r.recId = recId\r\n                            r.imgUrl= imgUrl\r\n                            r.name = recName\r\n                            console.log(chatRecipients)\r\n                            return r\r\n                        })\r\n                       /*  if(cb === undefined)\r\n                            console.log(\"do nothing\")\r\n                        else\r\n                            cb() */\r\n                    }).catch((err)=>console.log(err))\r\n                })\r\n                \r\n            }\r\n            else\r\n                console.log(\"no data\")\r\n            \r\n            })\r\n            .catch((err)=>console.log(err))\r\n            return chatRecipients\r\n    }\r\n\r\n    /* useEffect(()=>{\r\n        \r\n    },[chatRecipients]) */\r\n    //getRecData()\r\n  const value = {\r\n      chatRecipients : chatRecipients,\r\n      getRecData : getRecData,\r\n      setRecipients : setChatRecipients,\r\n      /* setuuIdFunc : setuuId,\r\n      uuId : uuId */\r\n  }\r\n  return (\r\n    <MyChatsContext.Provider value={value}>\r\n      {children}\r\n    </MyChatsContext.Provider>\r\n  )\r\n}\r\n\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\SocketContext.js",["222","223","224","225","226"],"import React ,{createContext,useEffect,useState,useRef} from 'react'\r\nimport io from \"socket.io-client\";\r\nimport { toast } from 'react-toastify';\r\nimport { Slide, Zoom, Flip, Bounce } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const SocketContext = createContext();\r\nexport function SocketProvider({id,children}) {\r\n  \r\n  const [clientSocket, setSocket] = useState()\r\n  let count=0;\r\n  let roomId = useRef()\r\n  \r\n  useEffect(() => {\r\n    \r\n    const socket = io(\r\n      'http://localhost:5000',\r\n    )\r\n    setSocket(socket)\r\n    return () => socket.close()\r\n    /* clientSocket.current = io(\"http://127.0.0.1:5000\");\r\n    clientSocket.current.on('connect' , () => {\r\n      console.log(clientSocket.current.id);\r\n    }); */\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    roomId.current= '/'+id\r\n    console.log(roomId)\r\n  },[])\r\n\r\n  const newMessageEvent = ()=>{\r\n    count=0;\r\n    if(clientSocket){\r\n      clientSocket.on(\"newMessage\", (payload) => {\r\n      <button onClick={()=>console.log(\"clicked\")}>{toast(payload.RecipientName +':'+\r\n        payload.payload.messageBody, {\r\n          onOpen: () => console.log('Called when I open'),\r\n          position: toast.POSITION.TOP_LEFT,\r\n          toastId: '007',\r\n          transition: Bounce\r\n        })}\r\n      </button>\r\n      //count=count+1\r\n      console.log(\"new message\",payload)\r\n      })\r\n    }\r\n    else{\r\n      console.log(\"no socket\")\r\n    }\r\n    \r\n  //return () => {clientSocket.removeAllListeners(\"newMessage\");}\r\n  }\r\n\r\n  /* useEffect(()=>{\r\n    newMessageEvent()\r\n    console.log(\"2\")\r\n  },[])\r\n */\r\n  const roomJoin = (did) =>{\r\n    //did = did || roomId.current\r\n    did = '/'+did\r\n    if(clientSocket){\r\n      clientSocket.emit(\r\n        \"NotificationRoom\",\r\n        { myNotificationRoom : did},\r\n        ({error,room}) => {\r\n          if (!error) {\r\n            console.log(\"joined room with id\", room);\r\n          } else {\r\n            console.log(\"error joining room\", error);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n  \r\n\r\n  let value={\r\n    clientSocket : clientSocket,\r\n    setSocket : setSocket,\r\n    messageEvent : newMessageEvent,\r\n    roomJoin: roomJoin\r\n  }\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  )\r\n\r\n  \r\n}\r\n\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Users.js",["227","228","229","230","231","232","233","234","235","236","237"],"import React, { useState, useEffect ,useRef,useContext} from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\n//import Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import socketIOClient from \"socket.io-client\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport userservice from \"../../services/UserService\";\r\nimport groupservice from \"../../services/GroupService\";\r\nimport { isAuthenticated, logout } from \"../FrontendComponents/clientStorages/auth\";\r\nimport {SocketContext} from '../../context/SocketContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport \"./users.css\"\r\n//import commonUtilites from \"../Utilities/common\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  subheader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  globe: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  subheaderText: {\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  list: {\r\n    maxHeight: \"calc(100vh - 112px)\",\r\n    overflowY: \"auto\",\r\n    \r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(0, 3, 0, 1),\r\n  },\r\n  listText:{\r\n    fontSize : '1.3rem',\r\n    fontFamily : 'Roboto'\r\n  }\r\n  ,listText1:{\r\n    fontSize : '1rem',\r\n    fontFamily : 'Roboto',\r\n    color : 'gray'\r\n  }\r\n  , listBtn:{\r\n    backgroundColor: 'rgb(0, 172, 193)',\r\n    color : 'white',\r\n    fontSize : '1rem'\r\n  }\r\n}));\r\n\r\nconst Users = (props) => {\r\n  const classes = useStyles();\r\n  const [users, setUsers] = useState([]);\r\n  const [newUser, setNewUser] = useState(null);\r\n  const [show, setShow] = React.useState(false)\r\n  let count = useRef(0);\r\n  let userId = useRef(\"\");\r\n  let name = useRef(\"\")\r\n  let userslist = useRef([])\r\n  let history = useHistory();\r\n  let recipients = []\r\n  const clientSocket = useContext(SocketContext);\r\n  //const getUsers = useGetUsers();\r\n  const getData = () => {\r\n    userId.current= localStorage.getItem(\"userId\")\r\n    console.log(userId.current)\r\n    userservice.getUsers()\r\n   .then((data) => {\r\n        userslist.current = data\r\n        userslist.current = userslist.current.filter((u)=>{\r\n          return u.email !== userId.current\r\n        })\r\n        setUsers(userslist.current ); \r\n        console.log(\"contacts\",users)\r\n  })\r\n   .catch((err) => console.log(\"This is err\"+ err));\r\n}\r\n  useEffect(()=>{\r\n    getData()\r\n    console.log(clientSocket)\r\n    if(clientSocket!==undefined)\r\n      clientSocket.emit(\"adduser\",{id:clientSocket.id, name: userId.current})\r\n  },[]);\r\n\r\n    const userClickHandler = (u) =>{\r\n        let email = u.email\r\n        let fname= u.firstName\r\n        let lname = u.lastName\r\n        let lang = u.langPreference\r\n        let profileUrl = u.profileImg\r\n        let x = fname+' '+lname\r\n        localStorage.setItem(\"recName\",x)\r\n        localStorage.setItem(\"recLang\",lang)\r\n        localStorage.setItem(\"profileUrl\",profileUrl)\r\n        history.push('/chat/'+email); \r\n        \r\n  }\r\n\r\n  const viewButtonHandler = ()=>{\r\n    history.push('/mychats/'); \r\n  }\r\n    const showButtons = ()=>{\r\n      setShow(true)\r\n    }\r\n\r\n    const addGroupMember = (e)=>{\r\n          console.log(\"target\",e)\r\n          count.current = count.current+1\r\n          console.log(\"count\",count)\r\n        recipients.push(e)\r\n        console.log(\"Rec\",recipients)\r\n    }\r\n\r\n    const createGroup = () =>{\r\n      if(recipients.length > 1){\r\n        let groupMembers = recipients\r\n        let groupName = name.current\r\n        let groupId = uuidv4();\r\n        let createdBy = userId.current\r\n        groupservice.createGroup({groupName,groupId,createdBy,groupMembers})\r\n              .then((data)=>{\r\n                  console.log(\"Created successfully\",data);\r\n                  history.push('/groupchat'+'/'+groupId)\r\n                  //getData();\r\n                })\r\n              .catch((err)=>{console.log(\"Some Err\")})\r\n        //history.push('/chat/'+address);\r\n        //history.push('/groupchat'+'/'+name.current+'/'+address)\r\n      }\r\n    }\r\n\r\n    const nameHandler = (e) =>{\r\n      name.current = e.target.value\r\n      console.log(name.current)\r\n    }\r\n    const handleLogOut = (evt) => {\r\n      logout(() => {\r\n        history.push(\"/login\");\r\n      });\r\n    };\r\n\r\n  /* useEffect(() => {\r\n    getUsers().then((res) => setUsers(res));\r\n  }, [newUser]); */\r\n\r\n  /* useEffect(() => {\r\n    const socket = socketIOClient(process.env.REACT_APP_API_URL);\r\n    socket.on(\"users\", (data) => {\r\n      setNewUser(data);\r\n    });\r\n  }, []); */\r\n\r\n  return (\r\n    <div>\r\n     {/*<Button onClick={showButtons} variant=\"contained\" color=\"primary\">\r\n        Create Group\r\n      </Button>*/}\r\n      <button\r\n        className=\"btn text-decoration-none btn-link   pl-0\"\r\n        style={{textDecoration:\"none\"}}\r\n        onClick={handleLogOut}\r\n      >\r\n        <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i> Logout\r\n      </button>\r\n      <h3 className=\" text-center\">Contacts</h3>\r\n      <List className={classes.list}>\r\n      {users && (\r\n        <React.Fragment>\r\n          {users.map((u) => (\r\n            <div>\r\n            <ListItem\r\n              className={classes.listItem}\r\n              button\r\n            >\r\n             <ListItemAvatar>\r\n             <Avatar className={classes.globe}>\r\n                <FaceIcon/>\r\n              </Avatar>\r\n            </ListItemAvatar> \r\n              <ListItemText onClick={() => userClickHandler(u)}>\r\n                <Typography className={classes.listText}>{u.firstName}&nbsp;{u.lastName}</Typography>\r\n                <Typography className={classes.listText1}>{u.email}</Typography>\r\n              </ListItemText>\r\n              {/* show ? \r\n              <Button onClick = {() => addGroupMember(u.email)} variant=\"contained\" color=\"primary\">\r\n                Add\r\n              </Button>\r\n              : null */}\r\n              <Button variant=\"contained\" className={classes.listBtn}\r\n              onClick={viewButtonHandler}>View</Button>\r\n            </ListItem>\r\n            <Divider/> \r\n            \r\n            </div>\r\n          ))}\r\n          {/* show ? \r\n              <div>\r\n                <TextField onChange = {nameHandler} id=\"standard-basic\" label=\"Group Name\" />\r\n                <Button onClick = {createGroup} variant=\"contained\" color=\"primary\">\r\n                  Create\r\n                </Button>\r\n                </div>\r\n          : null*/ }\r\n          \r\n        </React.Fragment>\r\n      )}\r\n    </List>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Users;\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\Login.js",["238","239","240"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport authservice from \"../services/AuthService\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport \"./Login.css\"\r\n//import { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"300px\",\r\n  },\r\n  child: {\r\n    width: \"100%\",\r\n    marginLeft: \"100px\",\r\n    marginTop: \"40px\",\r\n  },\r\n  usericon:{\r\n    fontSize:\"6rem\",\r\n    marginLeft:\"150px\",\r\n    marginTop: \"50px\",\r\n    color:\"rgb(252, 250, 250)\"\r\n  }\r\n  \r\n}));\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = React.useState(\"zeniakiran50@gmail.com\");\r\n  const [password, setPassword] = React.useState(\"12345\");\r\n  return (\r\n    <div id=\"bigdiv\">\r\n    <div className = \"containerlogin\" >\r\n    <AccountCircleIcon className={classes.usericon}/>\r\n      <div className={classes.child}>\r\n      <input type=\"email\" className=\"form-control\" placeholder=\"Email\" \r\n         className=\"tf\" value ={email} onChange={(e) => {\r\n          setEmail(e.target.value);\r\n          }}></input>\r\n        <br />\r\n        <input type=\"password\" className=\"form-control\" placeholder=\"Password\" \r\n         className=\"tf1\" value ={password} onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}></input>\r\n        <br />\r\n        \r\n      </div>\r\n      <Button id=\"btnlogin\"\r\n          variant=\"contained\"\r\n          \r\n          onClick={(e) => {\r\n            authservice\r\n              .login(email, password)\r\n              .then((data) => {\r\n                console.log(\" Data from login \",email);\r\n                localStorage.setItem(\"userId\",email)\r\n                window.location.href = \"/users\";\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n                //toast.error(err.response.data, {\r\n                  //position: toast.POSITION.TOP_LEFT,\r\n                //});\r\n              });\r\n          }}\r\n        >\r\n          Login\r\n        </Button>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;",["241","242"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\notFound.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\hooks\\useLocalStorage.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\profileSetup.js",["243","244","245"],"import React, { useState, useEffect } from \"react\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport Select from \"react-select\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport { grey, cyan} from '@material-ui/core/colors';\r\nimport {Button} from \"@material-ui/core\";\r\nimport axios from 'axios';\r\nimport accountService from \"../../../services/accountService\";\r\nconst useStyles = makeStyles({\r\n  \r\n  textfield: {\r\n    marginTop: \"2rem\",\r\n  },\r\n  Submitbtn: {\r\n    marginTop: \"0.6rem\",\r\n  },\r\n});\r\n\r\n\r\n\r\nconst ProfileSetup = ( {match}) => {\r\n    const classes = useStyles();\r\nconst options = [\r\n  { label: 'Afrikaans',value:'af' },\r\n  { label: 'Albanian',value:'sq'},\r\n  { label: 'Amharic',value:'am'},\r\n  { label: 'Arabic',value:'ar'},\r\n  { label: 'Armenian',value:'hy'},\r\n  { label: 'Azerbaijani',value:'az'},\r\n  { label: 'Basque',value:'eu'},\r\n  { label: 'Belarusian',value:'be'},\r\n  { label: 'Bengali',value:'bn'},\r\n  { label: 'Bosnian',value:'bs'},\r\n  { label: 'Bulgarian',value:'bg'},\r\n  { label: 'Catalan',value:'ca'},\r\n  { label: 'Cebuano',value:'ceb'},\r\n  { label: 'Chichewa',value:'ny'},\r\n  { label: 'Chinese',value:'zh-cn'},\r\n  { label: 'Corsican',value:'co'},\r\n  { label: 'Croatian',value:'hr'},\r\n  { label: 'Czech',value:'cs'},\r\n  { label: 'Danish',value:'da'},\r\n  { label: 'Dutch',value:'nl'},\r\n  { label: 'English',value:'en'},\r\n  { label: 'Esperanto',value:'eo'},\r\n  { label: 'Estonian',value:'et'},\r\n  { label: 'Filipino',value:'tl'},\r\n  { label: 'Finnish',value:'fi'},\r\n  { label: 'French',value:'fr'},\r\n  { label: 'Danish',value:'da'},\r\n  {label: 'Frisian',value: \"fy\"},\r\n  {label: 'Galician',value: \"gl\"},\r\n  {label: 'Georgian',value: \"ka\"},\r\n  {label: 'German',value: \"de\"},\r\n  {label: 'Greek',value: \"el\"},\r\n  {label: 'Gujarati',value: \"gu\"},\r\n  {label: 'Haitian creole',value: \"ht\"},\r\n  {label:'Hausa',value: \"ha\"},\r\n  {label:'Hawaiian',value: \"haw\"},\r\n  {label:'Hebrew',value: \"iw\"},\r\n  {label: 'Hindi',value: \"hi\"},\r\n  {label:'Hmong',value: \"hmn\"},\r\n  {label:'Hungarian',value: \"hu\"},\r\n  {label:'Icelandic',value: \"is\"},\r\n  {label:'Igbo',value: \"ig\"},\r\n  {label:'Indonesian',value: \"id\"},\r\n  {label:'Irish',value: \"ga\"},\r\n  {label:'Italian',value: \"it\"},\r\n  {label:'Japanese',value: \"ja\"},\r\n  {label:'Javanese',value: \"jw\"},\r\n  {label:'Kannada',value: \"kn\"},\r\n  {label:'Kazakh',value: \"kk\"},\r\n  {label:'Khmer',value:'km'},\r\n  {label:'Korean',value:'ko'},\r\n  {label:'Kurdish',value:'ku'},\r\n  {label: 'Kyrgyz',value: \"ky\"},\r\n  {label: 'Lao',value: \"lo\"},\r\n  {label: 'Latin',value: \"la\"},\r\n  {label: 'Latvian',value: \"lv\"},\r\n  {label: 'Lithuanian',value: \"lt\"},\r\n  {label: 'Luxembourgish',value: \"lb\"},\r\n  {label: 'Macedonian',value: \"mk\"},\r\n  {label:'Malagasy',value: \"mg\"},\r\n  {label:'Malay',value: \"ms\"},\r\n  {label:'Malayalam',value: \"ml\"},\r\n  {label: 'Maltese',value: \"mt\"},\r\n  {label:'Maori',value: \"mi\"},\r\n  {label:'Marathi',value: \"mr\"},\r\n  {label:'Mongolian',value: \"mn\"},\r\n  {label:'Myanmar (burmese)',value: \"my\"},\r\n  {label:'Nepali',value: \"ne\"},\r\n  {label:'Norwegian',value: \"no\"},\r\n  {label:'Odia',value: \"or\"},\r\n  {label:'Pashto',value: \"ps\"},\r\n  {label:'Persian',value: \"fa\"},\r\n  {label:'Polish',value: \"pl\"},\r\n  {label:'Portuguese',value: \"pt\"},\r\n  {label:'Punjabi',value: \"pa\"},\r\n  {label :'Romanian', value:\"ro\"},\r\n  {label :'Russian', value:\"ru\"},\r\n  {label:'Samoan',value: \"sm\"},\r\n  {label:'Scots gaelic',value: \"gd\"},\r\n  {label:'Serbian',value: \"sr\"},\r\n  {label:'Sesotho',value: \"st\"},\r\n  {label:'Shona',value: \"sn\"},\r\n  {label:'Sindhi',value: \"sd\"},\r\n  {label:'Sinhala',value: \"si\"},\r\n  {label:'Slovak',value: \"sk\"},\r\n  {label:'Slovenian', value:\"sl\"},\r\n  {label:'Somali', value:\"so\"},\r\n  {label:'Spanish', value:'es' },\r\n  {label:'Sundanese',value: \"su\"},\r\n  {label:'Swahili',value: \"sw\"},\r\n  {label:'Swedish',value: \"sv\"},\r\n  {label:'Tajik',value: \"tg\"},\r\n  {label:'Tamil',value: \"ta\"},\r\n  {label:'Telugu',value: \"te\"},\r\n  {label:'Thai',value: \"th\"},\r\n  {label:'Turkish',value: \"tr\"},\r\n  {label :'Ukrainian', value:\"uk\"},\r\n  {label:'Urdu',value: \"ur\"},\r\n  {label :'Uyghur', value:\"ug\"},\r\n  {label:'Uzbek', value:'uz' },\r\n  {label:'Vietnamese',value: \"vi\"},\r\n  {label :'Welsh', value:\"cy\"},\r\n  {label:'Xhosa',value: \"xh\"},\r\n  {label :'Yiddish', value:\"yi\"},\r\n  {label:'Yoruba', value:'yo' },\r\n  {label:'Zulu',value: \"zu\"},\r\n  \r\n];\r\n    const [values, setValues] = useState({\r\n    img: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\r\n    language:\"\",\r\n    token:\"\",\r\n    errorMessage: \"\",\r\n    successMsg:\"\",\r\n    infoMessage:\"\",\r\n    loading: false,\r\n  });\r\n  const { img,language,token, successMsg, errorMessage,infoMessage, loading } = values;\r\nuseEffect(() => {\r\n        let token = match.params.token\r\n        if(token) {\r\n            setValues({...values, token})\r\n        }\r\n    }, [])\r\n\r\nconst resizeFile = (file) => new Promise(resolve => {\r\n    Resizer.imageFileResizer(file, 300, 300, 'JPEG', 100, 0,\r\n    uri => {resolve(uri);},'base64' );\r\n});\r\n const uploadImage = async (e) => {\r\n  try {\r\n           const imageFile = e.target.files[0];\r\n           const data = new FormData();\r\n           data.append(\"file\", imageFile);\r\n           //axios.post(\"http://127.0.0.1:5000/\",data)\r\n         //.then(async (response) => {\r\n           setValues({ ...values , errorMessage :\"\", successMsg:\"response.data.successMessage\"})\r\n            const compressedImage = await resizeFile(imageFile);\r\n           setValues({...values, infoMessage: \"Loading....\"});\r\n           data.append(\"file\", compressedImage);\r\n           data.append(\"upload_preset\", \"TalkSee\");\r\n           const res = await fetch(\"https://api.cloudinary.com/v1_1/fariha31/image/upload\",\r\n              { method: \"POST\",\r\n                body: data,\r\n             } );   \r\n           const file =  await res.json();\r\n           setValues({ ...values , img: file.secure_url});\r\n        //})\r\n        /* .catch((err) => {\r\n            setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });*/\r\n      } \r\n catch(err)\r\n     {setValues({...values, errorMessage: \"error in uploading photo\"}); }\r\n}\r\nconst SetProfile =()=>{\r\n  accountService.profileSetup({profileImg: img, langPreference: language, token})\r\n .then((response) => {\r\n          setValues({\r\n            ...values,\r\n            img: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\r\n            language:\"\",\r\n            errorMessage: false,\r\n            successMsg: response.successMessage,\r\n            loading: false,\r\n          });\r\n        })\r\n         .catch((err) => {\r\n           setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n}\r\n \r\n  const ProfilePage = () =>( \r\n  <div className=\"profile-page\">\r\n      <div className=\"profile-container\">\r\n          <div className=\"img-holder\">\r\n             <img src={img} className=\"profile-img\"/>\r\n              </div>\r\n             <input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={uploadImage}  />\r\n             <div className=\"label\">\r\n                   <label className=\"image-upload\" htmlFor=\"input\">\r\n\t\t\t\t\t\t<i className=\"material-icons\">add_photo_alternate</i>\r\n\t\t\t\t\t\tChoose Profile Photo\r\n\t\t\t\t\t</label>\r\n                 </div>\r\n                  \r\n              <Select\r\n                    style={{ width: 210, padding: \"0.4rem\" }}\r\n                    placeholder=\"Select Language ---\"\r\n                    value={options.find(c => c.label === language)}\r\n                    className={classes.textfield}\r\n                    options={options}\r\n                    onChange={(e) => {\r\n                      console.log(e)\r\n                      setValues({\r\n                        ...values,\r\n                        language:e.value ,\r\n                      });\r\n                      \r\n                    }}\r\n                  />\r\n                   <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"0.5rem\" , \r\n              marginTop: \"1.5rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={SetProfile}\r\n            \r\n          >\r\n            Set Profile\r\n          </Button>\r\n                   {successMsg &&  <Button\r\n                     style={{  \r\n                     backgroundColor:grey[500],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"outline\"\r\n            fullWidth\r\n            onClick={event =>  window.location.href='/login'}\r\n                  >\r\n                      Login\r\n                  </Button>}\r\n      </div>             \r\n  </div>\r\n)\r\nreturn (<div>\r\n    \r\n    {loading && <LinearBuffer />}\r\n     <PageTitle name= {\"Profile Setup\"}/>\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n       {infoMessage && (\r\n        <AlertBar type=\"info\" message={infoMessage} autoClose={8000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={4000} />\r\n      )}\r\n      {ProfilePage()}\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default ProfileSetup;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\forgotPassword.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\MyChats.js",["246","247","248","249","250","251","252","253","254","255","256","257","258"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\LogIn.js",["259"],"import React, { useState, useEffect ,useContext} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from 'clsx';\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  Input,\r\n  InputAdornment,\r\n  Typography,\r\n  Paper,\r\n  IconButton,\r\n  InputLabel\r\n} from \"@material-ui/core\";\r\nimport { grey, cyan} from '@material-ui/core/colors';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport isEmpty from \"validator/lib/isEmpty\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport { login } from \"../api/auth\";\r\nimport PageTitle from \"./pageTitle\";\r\n//import { toast } from \"react-toastify\";\r\n\r\nimport {SocketContext} from '../../../context/SocketContext';\r\n//import { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { authentication, isAuthenticated } from \"../clientStorages/auth\";\r\n \r\nconst useStyles = makeStyles((theme) => ({\r\n   textField: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  margin:{\r\n    marginBottom: theme.spacing(2),\r\n    \r\n  }\r\n}));\r\nconst LogIn = ({onIdSubmit,setId}) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const {messageEvent} = useContext(SocketContext);\r\n  useEffect(() => {\r\n    if (isAuthenticated() && isAuthenticated().role === 1)\r\n      history.push(\"/admin/dashboard\");\r\n    else if (isAuthenticated() && isAuthenticated().role === 0)\r\n      history.push(\"/user/dashboard\");\r\n     \r\n      \r\n  }, [history]);\r\n  window.onload= ()=>{\r\n    //messageEvent()\r\n    console.log(\"in load\")\r\n  }\r\n\r\n  useEffect(()=>{\r\n    //messageEvent()\r\n  },[])\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    errorMessage: \"\",\r\n    showPassword: false,\r\n    loading: false,\r\n  });\r\n  const { email, password, errorMessage, loading } = values;\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n      errorMessage: \"\",\r\n    });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n   const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const handleTextChange = (evt) => {\r\n    setValues({\r\n      ...values,\r\n      [evt.target.name]: evt.target.value,\r\n      errorMessage: \"\",\r\n    });\r\n  };\r\n  const Register = (event) => {\r\n    event.preventDefault();\r\n    if (isEmpty(email) || isEmpty(password)) {\r\n      setValues({ ...values, errorMessage: \"Both fields are required\" });\r\n    } else if (!isEmail(email)) {\r\n      setValues({ ...values, errorMessage: \"Invalid Email\" });\r\n    } else {\r\n      setValues({ ...values, loading: true });\r\n      const { email, password } = values;\r\n      const data = { email, password };\r\n\r\n      login(data)\r\n        .then((response) => {\r\n          authentication(response.data.token, response.data.user);\r\n          console.log(response)\r\n          if (isAuthenticated() && isAuthenticated().role === 1)\r\n            history.push(\"/dashboard/\"+isAuthenticated()._id);\r\n          else {\r\n        history.push(\"/dashboard/\"+isAuthenticated()._id);};\r\n          setValues({ ...values, loading: false });\r\n          console.log(isAuthenticated()._id)\r\n          setId(isAuthenticated()._id)\r\n        })\r\n        .catch((err) => {\r\n          setValues({\r\n            ...values,\r\n            password:\"\",\r\n            loading: false,\r\n            errorMessage: err.response.data.errorMessage,\r\n          });\r\n        });\r\n        //var id \r\n        onIdSubmit(email)\r\n        \r\n        console.log(\"email\",email)\r\n        //generateUU(uuidv4())\r\n    }\r\n  };\r\n  \r\n  const LogInForm = () => (\r\n    <div className=\"Login-container\">\r\n      <Grid container>\r\n        <Grid item xs={1} sm={3} md={4}></Grid>\r\n        <Grid item xs={10} sm={6} md={4}>\r\n           <Paper style={{padding: '30px 50px'}} > \r\n            <Grid container style={{textAlign:\"center\"}}>\r\n          <Grid item xs={6} >\r\n            <Link className=\"active-header\"  to=\"/login\">Sign In</Link>      \r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Link className=\"header\" to=\"/signup\">Sign Up</Link>\r\n          </Grid>\r\n\r\n        </Grid>\r\n           <TextField\r\n           className={classes.textField}\r\n           style={{marginTop:\"2rem\"}}\r\n            label={\r\n              <div> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> Email Address </Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\"}}>*</Typography>\r\n                  </div>\r\n                  }\r\n            id=\"email-field\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            fullWidth\r\n            onChange={handleTextChange}\r\n             InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n             <EmailIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          ),\r\n         }}\r\n          />\r\n          \r\n         <FormControl className={clsx(classes.margin, classes.textField)} fullWidth>\r\n         <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\"}}>*</Typography>\r\n         </InputLabel>\r\n                    <Input\r\n            id=\"standard-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n              \r\n          startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <VpnKeyIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n        \r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n         </FormControl>\r\n            <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginBottom: \"1.2rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={Register}\r\n          >\r\n            Sign in\r\n          </Button>\r\n           <Link to=\"/forgot-password\" style={{textDecoration:\"none\",marginLeft:\"1rem auto\"}}  >Forgot Password?</Link>\r\n   </Paper>\r\n         </Grid>\r\n        <Grid item xs={1} sm={3} md={4}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      {loading && <LinearBuffer />}\r\n     \r\n             <PageTitle name= {\"TalkSee\"}/>\r\n      {LogInForm()}\r\n      \r\n     \r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n       \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\updateProfileSetup.js",["260"],"import React, { useState, useEffect,useContext, useRef } from \"react\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport Select from \"react-select\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport { grey, cyan} from '@material-ui/core/colors';\r\nimport {Button} from \"@material-ui/core\";\r\nimport Header from \"./Header\";\r\nimport accountService from \"../../../services/accountService\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport io from \"socket.io-client\";\r\nconst useStyles = makeStyles({\r\n  \r\n  textfield: {\r\n    marginTop: \"2rem\",\r\n  },\r\n  Submitbtn: {\r\n    marginTop: \"0.6rem\",\r\n  },\r\n});\r\n\r\n\r\n\r\nconst UpdateProfileSetup = ( {match}) => {\r\n  console.log(match)\r\n    const classes = useStyles();\r\n     const myId=isAuthenticated()._id;\r\n     let clientSocket1 = useRef()\r\n     let userEmail = isAuthenticated().email\r\n     const {messageEvent,setSocket,roomJoin} =  useContext(SocketContext);\r\nconst options = [\r\n  { label: 'Afrikaans',value:'af' },\r\n  { label: 'Albanian',value:'sq'},\r\n  { label: 'Amharic',value:'am'},\r\n  { label: 'Arabic',value:'ar'},\r\n  { label: 'Armenian',value:'hy'},\r\n  { label: 'Azerbaijani',value:'az'},\r\n  { label: 'Basque',value:'eu'},\r\n  { label: 'Belarusian',value:'be'},\r\n  { label: 'Bengali',value:'bn'},\r\n  { label: 'Bosnian',value:'bs'},\r\n  { label: 'Bulgarian',value:'bg'},\r\n  { label: 'Catalan',value:'ca'},\r\n  { label: 'Cebuano',value:'ceb'},\r\n  { label: 'Chichewa',value:'ny'},\r\n  { label: 'Chinese',value:'zh-cn'},\r\n  { label: 'Corsican',value:'co'},\r\n  { label: 'Croatian',value:'hr'},\r\n  { label: 'Czech',value:'cs'},\r\n  { label: 'Danish',value:'da'},\r\n  { label: 'Dutch',value:'nl'},\r\n  { label: 'English',value:'en'},\r\n  { label: 'Esperanto',value:'eo'},\r\n  { label: 'Estonian',value:'et'},\r\n  { label: 'Filipino',value:'tl'},\r\n  { label: 'Finnish',value:'fi'},\r\n  { label: 'French',value:'fr'},\r\n  { label: 'Danish',value:'da'},\r\n  {label: 'Frisian',value: \"fy\"},\r\n  {label: 'Galician',value: \"gl\"},\r\n  {label: 'Georgian',value: \"ka\"},\r\n  {label: 'German',value: \"de\"},\r\n  {label: 'Greek',value: \"el\"},\r\n  {label: 'Gujarati',value: \"gu\"},\r\n  {label: 'Haitian creole',value: \"ht\"},\r\n  {label:'Hausa',value: \"ha\"},\r\n  {label:'Hawaiian',value: \"haw\"},\r\n  {label:'Hebrew',value: \"iw\"},\r\n  {label: 'Hindi',value: \"hi\"},\r\n  {label:'Hmong',value: \"hmn\"},\r\n  {label:'Hungarian',value: \"hu\"},\r\n  {label:'Icelandic',value: \"is\"},\r\n  {label:'Igbo',value: \"ig\"},\r\n  {label:'Indonesian',value: \"id\"},\r\n  {label:'Irish',value: \"ga\"},\r\n  {label:'Italian',value: \"it\"},\r\n  {label:'Japanese',value: \"ja\"},\r\n  {label:'Javanese',value: \"jw\"},\r\n  {label:'Kannada',value: \"kn\"},\r\n  {label:'Kazakh',value: \"kk\"},\r\n  {label:'Khmer',value:'km'},\r\n  {label:'Korean',value:'ko'},\r\n  {label:'Kurdish',value:'ku'},\r\n  {label: 'Kyrgyz',value: \"ky\"},\r\n  {label: 'Lao',value: \"lo\"},\r\n  {label: 'Latin',value: \"la\"},\r\n  {label: 'Latvian',value: \"lv\"},\r\n  {label: 'Lithuanian',value: \"lt\"},\r\n  {label: 'Luxembourgish',value: \"lb\"},\r\n  {label: 'Macedonian',value: \"mk\"},\r\n  {label:'Malagasy',value: \"mg\"},\r\n  {label:'Malay',value: \"ms\"},\r\n  {label:'Malayalam',value: \"ml\"},\r\n  {label: 'Maltese',value: \"mt\"},\r\n  {label:'Maori',value: \"mi\"},\r\n  {label:'Marathi',value: \"mr\"},\r\n  {label:'Mongolian',value: \"mn\"},\r\n  {label:'Myanmar (burmese)',value: \"my\"},\r\n  {label:'Nepali',value: \"ne\"},\r\n  {label:'Norwegian',value: \"no\"},\r\n  {label:'Odia',value: \"or\"},\r\n  {label:'Pashto',value: \"ps\"},\r\n  {label:'Persian',value: \"fa\"},\r\n  {label:'Polish',value: \"pl\"},\r\n  {label:'Portuguese',value: \"pt\"},\r\n  {label:'Punjabi',value: \"pa\"},\r\n  {label :'Romanian', value:\"ro\"},\r\n  {label :'Russian', value:\"ru\"},\r\n  {label:'Samoan',value: \"sm\"},\r\n  {label:'Scots gaelic',value: \"gd\"},\r\n  {label:'Serbian',value: \"sr\"},\r\n  {label:'Sesotho',value: \"st\"},\r\n  {label:'Shona',value: \"sn\"},\r\n  {label:'Sindhi',value: \"sd\"},\r\n  {label:'Sinhala',value: \"si\"},\r\n  {label:'Slovak',value: \"sk\"},\r\n  {label:'Slovenian', value:\"sl\"},\r\n  {label:'Somali', value:\"so\"},\r\n  {label:'Spanish', value:'es' },\r\n  {label:'Sundanese',value: \"su\"},\r\n  {label:'Swahili',value: \"sw\"},\r\n  {label:'Swedish',value: \"sv\"},\r\n  {label:'Tajik',value: \"tg\"},\r\n  {label:'Tamil',value: \"ta\"},\r\n  {label:'Telugu',value: \"te\"},\r\n  {label:'Thai',value: \"th\"},\r\n  {label:'Turkish',value: \"tr\"},\r\n  {label :'Ukrainian', value:\"uk\"},\r\n  {label:'Urdu',value: \"ur\"},\r\n  {label :'Uyghur', value:\"ug\"},\r\n  {label:'Uzbek', value:'uz' },\r\n  {label:'Vietnamese',value: \"vi\"},\r\n  {label :'Welsh', value:\"cy\"},\r\n  {label:'Xhosa',value: \"xh\"},\r\n  {label :'Yiddish', value:\"yi\"},\r\n  {label:'Yoruba', value:'yo' },\r\n  {label:'Zulu',value: \"zu\"},\r\n  \r\n];\r\n    const [values, setValues] = useState({\r\n    img: \"\",\r\n    language:\"\",\r\n    errorMessage: \"\",\r\n    successMsg:\"\",\r\n    infoMessage:\"\",\r\n    loading: false,\r\n  });\r\n  const { img,language, successMsg, errorMessage,infoMessage, loading } = values;\r\n\r\n  window.onload = () => {\r\n    messageEvent()\r\n    let did = JSON.parse(localStorage.getItem('user'))._id\r\n    roomJoin(did)\r\n    clientSocket1 = io(\"http://127.0.0.1:5000\")\r\n    setSocket((s)=>{\r\n      s = clientSocket1\r\n      s.on('connect' , () => {\r\n        console.log(\"connected\",s.id);\r\n        s.emit(\"adduser\",{id:s.id, name: userEmail.current})\r\n        \r\n      });\r\n      return s;\r\n    })\r\n  };\r\n\r\nuseEffect(()=>{\r\n  //roomJoin(myId)\r\n  \r\n  },[])\r\n useEffect(() => {\r\n     accountService.getMyAccount(myId).then((data) => {\r\n     setValues({ ...values , img: data.profileImg, language:data.langPreference});\r\n    }).catch((err) => {\r\n           setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n  }, []);\r\n\r\nconst resizeFile = (file) => new Promise(resolve => {\r\n    Resizer.imageFileResizer(file, 300, 300, 'JPEG', 100, 0,\r\n    uri => {resolve(uri);},'base64' );\r\n});\r\n const uploadImage = async (e) => {\r\n  try {\r\n           const imageFile = e.target.files[0];\r\n           const data = new FormData();\r\n           data.append(\"file\", imageFile);\r\n           //axios.post(\"http://127.0.0.1:5000/\",data)\r\n        // .then(async (response) => {\r\n           setValues({ ...values , errorMessage :\"\", successMsg:\"response.data.successMessage\"})\r\n            const compressedImage = await resizeFile(imageFile);\r\n           setValues({...values, infoMessage: \"Loading....\"});\r\n           data.append(\"file\", compressedImage);\r\n           data.append(\"upload_preset\", \"TalkSee\");\r\n           const res = await fetch(\"https://api.cloudinary.com/v1_1/fariha31/image/upload\",\r\n              { method: \"PUT\",\r\n                body: data,\r\n             } );   \r\n           const file =  await res.json();\r\n           setValues({ ...values , img: file.secure_url});\r\n       // })\r\n        /* .catch((err) => {\r\n            setValues({ ...values , errorMessage:err.response.data.errorMessage});  */\r\n        //});\r\n    }\r\n catch(err)\r\n     {setValues({...values, errorMessage: \"error in uploading photo\"}); }\r\n}\r\nconst updateProfile =()=>{\r\n  accountService.updateProfileSetup(myId,{profileImg: img, langPreference: language})\r\n .then((response) => {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.userData));\r\n          setValues({\r\n            ...values,\r\n            errorMessage: false,\r\n            successMsg: response.successMessage,\r\n            loading: false,\r\n          });\r\n           \r\n        })\r\n         .catch((err) => {\r\n           setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n}\r\n \r\n  const ProfilePage = () =>( \r\n  <div className=\"profile-page\">\r\n      <div className=\"profile-container\">\r\n          <div className=\"img-holder\">\r\n             <img src={img} className=\"profile-img\" alt=\"img\"/>\r\n              </div>\r\n             <input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={uploadImage}  />\r\n             <div className=\"label\">\r\n                   <label className=\"image-upload\" htmlFor=\"input\">\r\n\t\t\t\t\t\t<i className=\"material-icons\">add_photo_alternate</i>\r\n\t\t\t\t\t\tChoose Profile Photo\r\n\t\t\t\t\t</label>\r\n                 </div>\r\n                  \r\n              <Select\r\n                    style={{ width: 210, padding: \"0.4rem\" }}\r\n                    placeholder=\"Select Language ---\"\r\n                    value={options.find(c => c.value === language)}\r\n                    className={classes.textfield}\r\n                    options={options}\r\n                    onChange={(e) => { \r\n                      setValues({\r\n                        ...values,\r\n                        language:e.value ,\r\n                      });\r\n                      \r\n                    }}\r\n                  />\r\n                   <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"0.5rem\" , \r\n              marginTop: \"1rem\",\r\n              marginBottom: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={updateProfile}\r\n            \r\n          >\r\n            Update Profile\r\n          </Button>\r\n          \r\n      </div>             \r\n  </div>\r\n)\r\nreturn (<div>\r\n    \r\n    {loading && <LinearBuffer />}\r\n    <Header/>\r\n     <PageTitle name= {\"Update Profile\"}/>\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={3000} />\r\n      )}\r\n       {infoMessage && (\r\n        <AlertBar type=\"info\" message={infoMessage} autoClose={8000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={2500} />\r\n      )}\r\n      {ProfilePage()}\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default UpdateProfileSetup;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\Activate.js",["261","262"],"import React, { useState, useEffect } from 'react';\r\nimport accountService from \"../../../services/accountService\";\r\nimport jwt from 'jsonwebtoken';\r\nimport { grey,green, cyan,red} from '@material-ui/core/colors';\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\nimport PageTitle from \"./pageTitle\";\r\nimport { useHistory } from 'react-router-dom';\r\nconst Activate = ({ match }) => {\r\n let token1 = match.params.token;\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    token: '',\r\n    errorMessage: \"\",\r\n    successMsg: \"\",\r\n  });\r\n   const { firstName,lastName, token, errorMessage, successMsg} = formData;\r\n   let history = useHistory()\r\n  useEffect(() => {\r\n    let token = match.params.token;\r\n    let { firstName } = jwt.decode(token);\r\n    let { lastName } = jwt.decode(token);\r\n    if (token) {\r\n      setFormData({ ...formData, firstName,lastName,  token });  \r\n      accountService.accountActivation({token})\r\n      .then(response => {\r\n        setFormData({\r\n          ...formData,\r\n          errorMessage: false,\r\n          successMsg: response.successMessage,\r\n          firstName: response.firstName,\r\n          lastName: response.lastName,\r\n        });\r\n      })\r\n      .catch(err => {\r\n      setFormData({\r\n          ...formData,\r\n          successMsg: false,\r\n         errorMessage: err.response.data.errorMessage,\r\n          firstName: err.response.data.firstName,\r\n          lastName: err.response.data.lastName,\r\n        });\r\n      });\r\n    }}, [match.params]);\r\n     \r\n  \r\n  const ActivationSuccess=()=>(\r\n<div> \r\n  <Grid container > \r\n <Grid item xs={1} sm={3} md={4}></Grid>\r\n  <Grid item xs={1} sm={3} md={4}> \r\n  \r\n      <p><strong>Hi {firstName +\" \"+lastName}</strong></p>\r\n        <div>  <CheckCircleRoundedIcon \r\n              style = {{ color: green[600],paddingTop:\"0.3rem\" }}/>  \r\n           <span style ={{fontSize:\"1.3rem\"}} > Your account has been successfully verified. Click below to create your profile</span></div>\r\n      <Button\r\n             style={{ \r\n               color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\" }}\r\n              variant=\"contained\"\r\n              className= \"loginbtn\"\r\n              onClick={event =>  history.push('/profile-setup/'+token1)}\r\n             \r\n          >\r\n            Create Profile\r\n          </Button>\r\n          </Grid>\r\n          <Grid item xs={1} sm={3} md={4}></Grid>\r\n          </Grid>\r\n   </div>\r\n\r\n\r\n  );\r\n   const ActivationFailure=()=>(\r\n<div> \r\n  <Grid container > \r\n <Grid item xs={1} sm={3} md={4}></Grid>\r\n  <Grid item xs={1} sm={3} md={4}> \r\n  \r\n      <p><strong>Hi {firstName+\" \"+lastName}</strong></p>\r\n        <div>  <CancelRoundedIcon \r\n              style = {{ color: red[600]  }}/>  \r\n           <span style ={{fontSize:\"1.3rem\"}} > <strong>{errorMessage}</strong> </span></div>\r\n      <Button\r\n             style={{ \r\n               color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\" }}\r\n            variant=\"contained\"\r\n             className= \"loginbtn\"\r\n            onClick={event =>  history.push('/signup')}\r\n             \r\n          >\r\n               Try  Again   \r\n          </Button>\r\n          </Grid>\r\n          <Grid item xs={1} sm={3} md={4}></Grid>\r\n          </Grid>\r\n   </div>\r\n\r\n\r\n  );\r\n  return (\r\n  <div>\r\n        <PageTitle name= {\"Activation\"}/>\r\n       {errorMessage && ( ActivationFailure())}\r\n       {successMsg && (ActivationSuccess())}\r\n  </div>)\r\n      }\r\nexport default Activate;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllContacts.js",["263"],"import React, { useEffect, useContext, useRef } from \"react\";\r\nimport SingleContact from \"./SingleContact\";\r\nimport contactService from \"../../../services/contactService\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport io from \"socket.io-client\";\r\nimport Header from \"./Header\";\r\n\r\nconst AllContact = ({match}) => {\r\n    const myId=isAuthenticated()._id;\r\n    let userEmail = isAuthenticated().email;\r\n    let history = useHistory()\r\n    const [contacts, setContacts] = React.useState([]);\r\n    let roomId = useRef()\r\n    let clientSocket1 = useRef()\r\n    roomId.current = '/'+match.params.id\r\n    const {setSocket,roomJoin,messageEvent} = useContext(SocketContext);\r\n\r\n    window.onload = () => {\r\n      messageEvent()\r\n      let did = JSON.parse(localStorage.getItem('user'))._id\r\n      roomJoin(did)\r\n      clientSocket1 = io(\"http://127.0.0.1:5000\")\r\n      setSocket((s)=>{\r\n        s = clientSocket1\r\n        s.on('connect' , () => {\r\n          console.log(\"connected\",s.id);\r\n          s.emit(\"adduser\",{id:s.id, name: userEmail})\r\n          \r\n        });\r\n        return s;\r\n      })\r\n    };\r\n\r\n    const getData = () => {\r\n   friendService.getSentFriendRequest(myId)\r\n   .then((data)=>{\r\n      localStorage.setItem(\"user\",JSON.stringify(data));})\r\n   .catch((err=>{console.log(err)}))\r\n   }\r\n     \r\n  const getSingleContact = () => {\r\n    contactService.getSingleContact(myId)\r\n    .then((data) => { setContacts(data);})\r\n    .catch((err) => {console.log(err);});\r\n  };\r\n\r\n   useEffect(()=> {\r\n     getData();\r\n     getSingleContact();\r\n }, []);\r\n\r\n   useEffect(()=>{\r\n    //roomJoin(myId)\r\n    //messageEvent()\r\n   },[])\r\n    \r\n   \r\n    return ( \r\n    <div>\r\n      <Header/>\r\n      <PageTitle name= {\"Add Friend\"}/>\r\n     \r\n      {\r\n      contacts.length === 0 ? \r\n        ( <div style= {{textAlign: \"center\",\r\n    padding: \"6rem\", fontWeight:\"bold\"}}>No User Found</div>) \r\n        :(\r\n            <Grid container  style={{marginTop:\"3rem\"}}>\r\n          <Grid item xs ={1} md={3}> </Grid>\r\n          <Grid item xs ={10} md={6}>\r\n     \r\n           { contacts.map((contact, index) => {\r\n              return contact._id === myId ? \r\n              <div style= {{textAlign: \"center\",padding: \"4rem\"}}>\r\n               Hey <span style ={{fontWeight:\"bold\"}}> {contact.firstName + \" \" + contact.lastName}</span> , All Users are your Friends <Link style ={{ fontWeight:\"normal\"}} to=\"/all-my-friends\" >Click here</Link>\r\n              </div>\r\n            : <SingleContact key={index} contact={contact}/>\r\n            } )\r\n          }\r\n           </Grid>\r\n          <Grid item xs={1}   md={3}></Grid>\r\n        </Grid>\r\n         \r\n         \r\n        )\r\n          }\r\n        \r\n        \r\n      )\r\n          <Grid container   style={{display:\"flex\"}}>\r\n          <Grid item xs ={1} md={3}> </Grid>\r\n          <Grid item xs ={10} md={6}>\r\n       <Button className= \"loginbtn\"\r\n            style={{textTransform:\"capitalize\",float:\"right\"}}\r\n            variant=\"outlined\" \r\n            color=\"Primary\"\r\n            onClick={event =>  history.push('/all-friend-requests')}> My Friend Requests</Button>\r\n        \r\n        <Button className= \"loginbtn\"\r\n            style={{textTransform:\"capitalize\",float:\"left\"}}\r\n            variant=\"outlined\" \r\n            color=\"Primary\"\r\n            onClick={event =>  history.push('/dashboard')}><ArrowBackIcon/> Back\r\n            </Button>\r\n         </Grid>\r\n       <Grid item xs ={1} md={3}> </Grid>\r\n       </Grid>\r\n      \r\n    </div> );\r\n}\r\n \r\nexport default AllContact;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\resetPassword.js",["264"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from 'clsx';\r\nimport accountService from \"../../../services/accountService\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  InputAdornment,\r\n  InputLabel,\r\n  FormControl,\r\n  Input,\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\n import { grey, cyan,indigo} from '@material-ui/core/colors';\r\nimport isEmpty from \"validator/lib/isEmpty\";\r\nimport equals from \"validator/lib/equals\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n const useStyles = makeStyles((theme) => ({\r\n  textfield: {\r\n     margin: theme.spacing(1),\r\n  },\r\n   margin:{\r\n     marginTop: \"1.2rem\"\r\n   } \r\n}));\r\n\r\nconst ResetPassword = ({ match }) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [values, setValues] = useState({\r\n    token: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    errorMessage: \"\",\r\n    successMsg: \"\",\r\n    showPassword: false,\r\n    showPassword1: false,\r\n    loading: false,\r\n  });\r\n  \r\n   const {\r\n    token,\r\n    password,\r\n    confirmPassword,\r\n    errorMessage,\r\n    successMsg,\r\n    loading,\r\n  } = values;\r\n\r\n    useEffect(() => {\r\n        let token = match.params.token\r\n        if(token) {\r\n            setValues({...values, token})\r\n        }\r\n    }, [])\r\n    const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n   const handleChange = (prop) => (event) => {\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n      errorMessage: \"\",\r\n      successMsg: \"\",\r\n    });\r\n  };\r\n const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n  const handleClickShowConfirmPassword = () => {\r\n    setValues({ ...values, showPassword1: !values.showPassword1 });\r\n  };\r\n   const ResetPasswordBtn = (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      isEmpty(password) ||\r\n      isEmpty(confirmPassword)\r\n    ) {\r\n      setValues({ ...values, errorMessage: \"All fields are required\" });\r\n    } else if (!equals(password, confirmPassword)) {\r\n      setValues({ ...values, errorMessage: \"Passwords do not match\" });\r\n    } else {\r\n  \r\n     \r\n      setValues({ ...values, loading: true });\r\n     accountService.resetPassword( { newPassword: password, resetPasswordLink: token})\r\n        .then((response) => {\r\n          setValues({\r\n            ...values,\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errorMessage: false,\r\n            successMsg: response.successMessage,\r\n            loading: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setValues({\r\n            ...values,\r\n             password: \"\",\r\n            confirmPassword: \"\",\r\n            loading: false,\r\n            errorMessage: err.response.data.errorMessage,\r\n          });\r\n        });\r\n    }\r\n  };\r\n     \r\n  const ResetPasswordForm=()=>(\r\n      \r\n    <Grid container >\r\n      <Grid item xs={1} sm={3} md={4}></Grid>\r\n        <Grid item xs={10} sm ={6} md={4}>\r\n          <Paper style={{padding: '30px 50px'}} >\r\n          <Button  \r\n            className= \"loginbtn\"\r\n            href=\"https://mail.google.com/mail/u/0/#inbox\"\r\n            color=\"primary\"\r\n           style={{marginBottom:\"2rem\" ,paddingLeft:\"0rem\",color:indigo[800]  }}\r\n          >\r\n           <ArrowBackIcon style={{fontWeight:\"bold\",marginRight:\"0.3rem\"}}/> Go Back\r\n          </Button>\r\n             <FormControl className={clsx( classes.textField)} fullWidth>\r\n         <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> New Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\" }}>*</Typography>\r\n         </InputLabel>\r\n                    <Input\r\n            id=\"standard-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n              \r\n          startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <LockIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n        \r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n         \r\n          <FormControl className={clsx(classes.margin, classes.textField)} fullWidth>\r\n                 <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> Confirm Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\" }}>*</Typography>\r\n         </InputLabel>\r\n           <Input\r\n            id=\"standard-adornment-confirmPassword\"\r\n            type={values.showPassword1 ? 'text' : 'password'}\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange('confirmPassword')}\r\n             startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <VpnKeyIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowConfirmPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword1 ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n    \r\n         <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n              }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={ResetPasswordBtn}\r\n          >\r\n            Reset Password \r\n          </Button>\r\n          {successMsg &&  <Button\r\n                     style={{  \r\n                     backgroundColor:grey[500],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"outline\"\r\n            fullWidth\r\n            onClick={event =>  history.push('/login')}\r\n                  >\r\n                      Login\r\n                  </Button>}\r\n           </Paper>\r\n        </Grid>\r\n     <Grid item xs={1} sm={3} md={4}></Grid>\r\n    </Grid>\r\n       \r\n  );   \r\n  return (\r\n  <div>\r\n        {loading && <LinearBuffer />}\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={4000} />\r\n      )}\r\n       <PageTitle name= {\"Reset Password\"}/>\r\n      {ResetPasswordForm()}\r\n      \r\n  </div>)\r\n      }\r\nexport default ResetPassword;\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllFriends.js",["265","266"],"import React, { useEffect,useRef,useContext } from \"react\";\r\nimport SingleFriend from \"./SingleFriend\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport {MyChatsContext} from '../../../context/MyChatsContext';\r\nimport io from \"socket.io-client\";\r\n\r\nconst AllFriends = (props) => {\r\n     const myId=isAuthenticated()._id;\r\n     const [friends, setFriends] =React.useState([]);\r\n     let history = useHistory()\r\n     let clientSocket1 = useRef()\r\n     const {clientSocket, setSocket,roomJoin, messageEvent} =  useContext(SocketContext);\r\n     const {chatRecipients} = useContext(MyChatsContext);\r\n     let userEmail = useRef()\r\n     userEmail.current = JSON.parse(localStorage.getItem(\"user\")).email\r\n\r\n     window.onload = () => {\r\n       messageEvent()\r\n      let did = JSON.parse(localStorage.getItem('user'))._id\r\n      roomJoin(did)\r\n      clientSocket1 = io(\"http://127.0.0.1:5000\")\r\n      setSocket((s)=>{\r\n        s = clientSocket1\r\n        s.on('connect' , () => {\r\n          console.log(\"connected\",s.id);\r\n          s.emit(\"adduser\",{id:s.id, name: userEmail.current})\r\n          \r\n        });\r\n        return s;\r\n      })\r\n    };\r\n\r\n     const getAllMyFriends = () => \r\n     {\r\n       friendService.getAllFriends(myId)\r\n        .then((data)=>{\r\n         setFriends(data);})\r\n      .catch((err=>{console.log(err)}))\r\n   \r\n     }\r\n    useEffect(()=>{\r\n\r\n      getAllMyFriends()\r\n      \r\n    }, []);\r\n    useEffect(()=>{\r\n      //roomJoin(myId)\r\n      \r\n     },[])\r\n\r\n     useEffect(()=>{\r\n      //messageEvent()\r\n      \r\n     },[])\r\n\r\n    useEffect(()=>{\r\n      /* if(clientSocket!==null){\r\n        console.log(props.clientSocket)\r\n        clientSocket.emit(\"adduser\",{id:props.clientSocket.id, name: userEmail.current})\r\n      }\r\n      else{\r\n        console.log(\"no socket\")\r\n      }  */\r\n    },[])\r\n\r\n     return ( \r\n    <div>\r\n      <Header/>\r\n      <PageTitle name= {\"My Friends\"}/>\r\n     {\r\n      friends.length === 0 ? \r\n        ( <div style= {{textAlign: \"center\",\r\n    padding: \"6rem\", fontWeight:\"bold\"}}>No Friend Found</div>) \r\n        :\r\n        (\r\n        <Grid container   style={{marginTop:\"3rem\",display :\"flex\"}}>\r\n          <Grid item xs ={1} md={3}> </Grid>\r\n          <Grid item xs ={10} md={6}>\r\n          {\r\n          friends.map((friend, index) => (\r\n               <SingleFriend key={index} friend={friend} onRemove={getAllMyFriends} chatRec={chatRecipients.recId}/> )\r\n          )}\r\n          <Button\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              variant=\"outlined\"\r\n              style={{textTransform:\"capitalize\",float:\"right\"}}\r\n              onClick={event => history.push('/all-contacts')}\r\n            >\r\n          <PersonAddIcon style={{marginRight:\"0.2rem\",fontSize:\"1.6rem\"}} />Add New Friend\r\n          </Button>\r\n          </Grid>\r\n          <Grid item xs={1}   md={3}></Grid>\r\n        </Grid>\r\n         )\r\n         \r\n      }\r\n      \r\n \r\n    </div> );\r\n\r\n}\r\nexport default AllFriends;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SignUp.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllFriendRequest.js",["267"],"import React, { useEffect, useContext, useRef } from \"react\";\r\nimport SingleFriendRequest from \"./SingleFriendRequest\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport {SocketContext} from '../../../context/SocketContext';\r\nimport io from \"socket.io-client\";\r\n\r\nconst AllFriendRequest = ({match}) => {\r\n     const myId=isAuthenticated()._id;\r\n     const [friendreqs, setFrndRequest] =React.useState([]);\r\n     let clientSocket1 = useRef()\r\n     let userEmail = isAuthenticated().email\r\n     const {setSocket,roomJoin,messageEvent} = useContext(SocketContext);\r\n     let roomId = useRef()\r\n     roomId.current = '/'+match.params.id\r\n     let history = useHistory()\r\n\r\n     window.onload = () => {\r\n       messageEvent()\r\n      let did = JSON.parse(localStorage.getItem('user'))._id\r\n      roomJoin(did)\r\n      clientSocket1 = io(\"http://127.0.0.1:5000\")\r\n      setSocket((s)=>{\r\n        s = clientSocket1\r\n        s.on('connect' , () => {\r\n          console.log(\"connected\",s.id);\r\n          s.emit(\"adduser\",{id:s.id, name: userEmail.current})\r\n          \r\n        });\r\n        return s;\r\n      })\r\n    };\r\n\r\n     const getFriendRequest = () => \r\n     {\r\n      friendService.getFriendRequest(myId).then((data)=>{\r\n                setFrndRequest(data)})\r\n            .catch((err=>{console.log(err)}))\r\n     }\r\n    useEffect(getFriendRequest , []);\r\n\r\n    useEffect(()=>{\r\n      //roomJoin(myId)\r\n      \r\n     },[])\r\n\r\n   /*  useEffect(()=>{\r\n      if(clientSocket){\r\n        clientSocket.emit(\r\n          \"myChatsRoom\",\r\n          { myChatsRoom : roomId.current},\r\n          ({error,room}) => {\r\n            if (!error) {\r\n              console.log(\"joined room with id\", room);\r\n            } else {\r\n              console.log(\"error joining room\", error);\r\n            }\r\n          }\r\n        );\r\n      }\r\n     },[]) */\r\n\r\n     return ( \r\n    <div>\r\n      <Header/>\r\n      <PageTitle name= {\"Friend Requests\"}/>\r\n      {\r\n      friendreqs.length === 0 ? \r\n        ( <div style= {{textAlign: \"center\",\r\n    padding: \"6rem\", fontWeight:\"bold\"}}>No Friend Request</div>) \r\n        :\r\n        (\r\n        <Grid container   style={{marginTop:\"3rem\" }}>\r\n          <Grid item xs ={1} md={3}> </Grid>\r\n          <Grid item xs ={10} md={6}>\r\n          {\r\n          friendreqs.map((friendreq, index) => (\r\n               <SingleFriendRequest key={index} friendreq={friendreq} onAcceptReject={getFriendRequest}/> )\r\n          )}\r\n          </Grid>\r\n          <Grid item xs={1}   md={3}></Grid>\r\n        </Grid>\r\n         )\r\n         \r\n      }\r\n       <Grid container   style={{display:\"flex\"}}>\r\n          <Grid item xs ={1} md={3}> </Grid>\r\n          <Grid item xs ={10} md={6}>\r\n      \r\n <Button className= \"loginbtn\"\r\n            style={{textTransform:\"capitalize\",float:\"left\"}}\r\n            variant=\"outlined\" \r\n            color=\"Primary\"\r\n            onClick={event =>  history.push('/all-contacts')}><ArrowBackIcon/> Back\r\n            </Button>\r\n         </Grid>\r\n       <Grid item xs ={1} md={3}> </Grid>\r\n       </Grid>\r\n    </div> );\r\n\r\n}\r\nexport default AllFriendRequest;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\userDashboard.js",["268","269","270","271"],"import React, { useEffect, useState,useContext,useRef } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {SocketContext} from '../../../context/SocketContext';\r\n//import {MyChatsContext} from '../../../context/MyChatsContext';\r\nimport io from \"socket.io-client\";\r\nimport { useHistory } from 'react-router-dom';\r\n //import { ToastContainer } from 'react-toastify';\r\n//import Toast from 'react-bootstrap/Toast' \r\n\r\n\r\nconst UserDashboard = ({uuId}) => {\r\n  //const {chatRecipients,setRecipients,getRecData} = useContext(MyChatsContext);\r\n  const [Fname, setFname] = useState(\"\");\r\n  const [Lname, setLname] = useState(\"\");\r\n  const myId= isAuthenticated()._id;\r\n  let userEmail = useRef()\r\n  let history = useHistory()\r\n  userEmail.current = JSON.parse(localStorage.getItem(\"user\")).email\r\n  console.log(userEmail)\r\n  const {clientSocket,setSocket,messageEvent,roomJoin} = useContext(SocketContext);\r\n  let clientSocket1 = useRef()\r\n   \r\n   window.onload = () => {\r\n     messageEvent()\r\n    let did = JSON.parse(localStorage.getItem('user'))._id\r\n    roomJoin(did)\r\n    clientSocket1 = io(\"http://127.0.0.1:5000\")\r\n    setSocket((s)=>{\r\n      s = clientSocket1\r\n      s.on('connect' , () => {\r\n        console.log(\"connected\",s.id);\r\n        s.emit(\"adduser\",{id:s.id, name: userEmail.current})\r\n        \r\n      });\r\n      return s;\r\n    })\r\n  };\r\n\r\n  useEffect (()=>{\r\n    setFname(isAuthenticated().firstName);\r\n    setLname(isAuthenticated().lastName);\r\n    console.log(history)\r\n   },[])\r\n  \r\n   useEffect(()=>{\r\n    if(clientSocket!==undefined){\r\n        console.log(clientSocket)\r\n        clientSocket.emit(\"adduser\",{id:clientSocket.id, name: userEmail.current})\r\n      }\r\n      else{\r\n        console.log(\"no socket\")\r\n      }\r\n   },[],[clientSocket])\r\n\r\n   useEffect (()=>{\r\n     messageEvent()\r\n     //console.log(\"msg event\")\r\n   },[]);\r\n\r\n   useEffect (()=>{\r\n    roomJoin(myId)\r\n  },[]);\r\n\r\n  return <div>\r\n    <Header/>\r\n   {/* <ToastContainer/> */}\r\n    <h1> Hi, {Fname + \" \" + Lname}</h1>\r\n     <Button className= \"loginbtn\"\r\n             style={{marginLeft:\"20rem\" ,display:\"block\"}}\r\n            variant=\"outlined\" \r\n            color=\"Primary\"\r\n            onClick={event =>  history.push('/all-contacts/'+myId)}> Add New friend</Button>\r\n    <Button className= \"loginbtn\"\r\n             style={{marginLeft:\"20rem\",marginTop:\"2rem\"}}\r\n            variant=\"outlined\" \r\n            color=\"Primary\"\r\n            onClick={event =>  history.push('/all-my-friends/'+myId)}> My friend Lists</Button>\r\n    <Button className= \"loginbtn\"\r\n             style={{marginLeft:\"20rem\",marginTop:\"2rem\",display:\"block\"}}\r\n            variant=\"outlined\" \r\n            color=\"Primary\"\r\n            onClick={event =>  history.push('/mychats/'+myId)}> My Chats</Button>\r\n    <Button className= \"loginbtn\"\r\n             style={{marginLeft:\"20rem\",marginTop:\"2rem\",display:\"block\"}}\r\n            variant=\"outlined\" \r\n            color=\"Primary\"\r\n            onClick={event =>  history.push('/update-my-profile-setup/'+myId)}>Update Profile</Button>\r\n      \r\n    </div>\r\n};\r\n\r\nexport default UserDashboard;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Chat.js",["272","273","274","275","276"],"import React, { useEffect, useState, useRef, useContext } from \"react\";\r\nimport chatservice from \"../../services/ChatService\";\r\nimport userservice from \"../../services/UserService\";\r\nimport \"./chat.css\";\r\nimport SettingMessage from \"./SettingMessage\";\r\nimport { SocketContext } from \"../../context/SocketContext\";\r\nimport RenderChat from './RenderChat'\r\n\r\nexport default function SingleChat(props) {\r\n  const [chat, setChat] = useState([{ from: \"\", to: \"\", messages: [] }]);\r\n  const [loading, setLoading] = useState(false);\r\n  let chats = useRef([]);\r\n  let dummy = [];\r\n  let user = useRef({ uId: \"\", uImg: \"\", uName: \"\" });\r\n  let recipient = useRef(\"\");\r\n  let recipientInfo = useRef({ name: \"\", lang: \"\", url: \"\" });\r\n  let roomId = useRef(\"\");\r\n  let myChatsRoom = useRef();\r\n  let notificationRoom = useRef();\r\n  let returndata;\r\n  let id = props.match.params.id.split(\" \");\r\n  const { clientSocket } = useContext(SocketContext);\r\n  const [isDel , setDel] = useState(false)\r\n  var us = JSON.parse(localStorage.getItem(\"user\"));\r\n  console.log(\"my socket\", clientSocket);\r\n\r\n  useEffect(() => {\r\n    recipientInfo.current.name = localStorage.getItem(\"recName\");\r\n    recipientInfo.current.lang = localStorage.getItem(\"recLang\");\r\n    recipientInfo.current.url = localStorage.getItem(\"profileUrl\");\r\n    myChatsRoom.current = \"mychats/\" + localStorage.getItem(\"friendId\");\r\n    notificationRoom.current = \"/\" + id[1];\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    recipient.current = id[0];\r\n    user.current.uId = us.email;\r\n    user.current.uName = us.firstName + \" \" + us.lastName;\r\n    userservice\r\n      .getUserByEmail(user.current.uId)\r\n      .then((data) => {\r\n        user.current.uImg = data[0].profileImg;\r\n      })\r\n      .catch((err) => console.log(\"Err in UserService\", err));\r\n\r\n    chatservice\r\n      .getMessagesbyEmail(user.current.uId, recipient.current)\r\n      .then((data) => {\r\n        chats.current = data;\r\n        console.log(\"Data\", chats.current);\r\n        if (chats) {\r\n          chats.current.map((chat, index) => {\r\n            dummy.push(chat);\r\n          });\r\n        } else {\r\n          console.log(\"No chats or some error\");\r\n        }\r\n        setChat({ messages: dummy });\r\n      })\r\n      .catch((err) => console.log(\"This is err\" + err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  let count = 0;\r\n  useEffect(() => {\r\n    if (clientSocket !== undefined) {\r\n      clientSocket.emit(\r\n        \"roomJoin\",\r\n        { from: user.current.uId, to: recipient.current },\r\n        ({ error, room }) => {\r\n          if (!error) {\r\n            roomId.current = room;\r\n            console.log(\"joined room with id\", room);\r\n          } else {\r\n            console.log(\"error joining room\", error);\r\n          }\r\n        }\r\n      );\r\n\r\n      clientSocket.on(\"messageReceived\", (payload) => {\r\n        console.log(\"Payload\", payload.messageBody + \" count: \" + count);\r\n        setChat((chatState) => {\r\n          if (chatState.messages) {\r\n            let newMessages = [...chatState.messages];\r\n            newMessages = [...newMessages, payload];\r\n            return { ...chatState, messages: newMessages };\r\n          } else {\r\n            return { messages: [payload] };\r\n          }\r\n        });\r\n      });\r\n\r\n      return function cleanup() {\r\n        clientSocket.off(\"messageReceived\");\r\n        console.log(\"in cleanup\");\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const sendMessage = (message) => {\r\n    setLoading(true);\r\n    let data = {\r\n      msg: message,\r\n      lang: recipientInfo.current.lang,\r\n      userImgUrl: user.current.uImg,\r\n    };\r\n    //console.log(data)\r\n    //axios.post('http://127.0.0.1:80/',data) // flask ka post method call kre ga\r\n    //.then((response )=> {\r\n    setLoading(false);\r\n    // console.log(\" Response\" ,response.data);\r\n    //returndata = response.data\r\n    console.log(\"room\", roomId.current);\r\n    let messageS = {\r\n      from: user.current.uId,\r\n      to: recipient.current,\r\n      userName: user.current.uName,\r\n      room: roomId.current,\r\n      messageBody: message,\r\n      messageVideo: returndata,\r\n      time: new Date().toLocaleString(),\r\n      type: \"sent\",\r\n    };\r\n    clientSocket.emit(\"messageSend\", messageS, (err) => {\r\n      console.log(\"in send\");\r\n      if (!err) {\r\n        console.log(\"message sent successfully\");\r\n        /* chatservice.createMessage(messageS)\r\n            .then((response)=>console.log(response))\r\n            .catch((err)=>console.log(err)) */\r\n        //console.log(\"MsgS\",messageS)\r\n        if (chat.messages) {\r\n          setChat({ messages: [...chat.messages, messageS] });\r\n          console.log(\"sent chat\", chat);\r\n        } else {\r\n          setChat({ messages: [messageS] });\r\n          console.log(\"first message \" + chat);\r\n        }\r\n      } else {\r\n        console.log(\"error sending message:\", err);\r\n      }\r\n    });\r\n    clientSocket.emit(\r\n      \"messageSend1\",\r\n      {\r\n        message: messageS,\r\n        roomId: notificationRoom.current,\r\n        name: user.current.uName,\r\n      },\r\n      (err) => {\r\n        if (!err) console.log(\"testing\");\r\n        else console.log(err);\r\n      }\r\n    );\r\n\r\n    clientSocket.emit(\r\n      \"myChats\",\r\n      { roomId: myChatsRoom.current, message: messageS, userImg: us.profileImg },\r\n      (err) => {\r\n        if (!err) console.log(\"testing\");\r\n        else console.log(err);\r\n      }\r\n    );\r\n  };\r\n\r\n  let elem = null;\r\n  if (!chat.messages) {\r\n    console.log(\"in if part\");\r\n    elem = (\r\n      <h5 style={{ textAlign: \"center\" }}>There are currently no Messages</h5>\r\n    );\r\n  } else {\r\n    console.log(\"in else\");\r\n    elem = <SettingMessage chat={chat} user={user.current.uId} isDel={isDel}/>;\r\n  }\r\n\r\n\r\n  return (    \r\n    <RenderChat recipientInfo={recipientInfo.current} \r\n     element={elem}\r\n     loading = {loading}\r\n     sendMessage = {sendMessage}\r\n     isDel ={isDel}\r\n     setDel = {setDel}\r\n    />\r\n  );\r\n}\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\GroupService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\UserService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\pageTitle.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\ChatService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\friendService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\Header.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleFriend.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\AuthService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\auth.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\accountService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\api\\auth.js",["277","278"],"import axios from \"axios\";\naxios.defaults.headers.common[\"x-auth-token\"] =localStorage.getItem(\"token\");\nexport const signup = async (data) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await axios.post(\"http://localhost:5000/api/users/signup\", data);\n  return response;\n};\nexport const login = async (data) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await axios.post(\"http://localhost:5000/api/users/login\", data);\n  return response;\n};\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\AlertBar.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\ProgressBar.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\TypeMessage.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\SettingMessage.js",["279"],"import React from \"react\";\r\nimport \"./chat.css\"\r\n//import myimg from \"./queen.jpg\"\r\nimport { Player } from 'video-react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport \"video-react/dist/video-react.css\"\r\nexport default function TypeMessage(props) {\r\n  //console.log(\"From setting\",props.chat)\r\n  console.log(props.isDel)\r\n  return (\r\n    props.chat.messages.map((message) => {\r\n        //console.log(\"msg\",message)\r\n        //console.log(\"user\",props.user)\r\n      if (message.to === props.user) {\r\n        //console.log(\"Type received\")\r\n        return (\r\n          <div className ='msgdiv'>\r\n          <div className=\"incoming_msg_img\">\r\n          {\r\n            props.isDel ?\r\n              <Checkbox name=\"gilad\" />: null\r\n          }\r\n          \r\n          </div>\r\n            <div className=\"received_msg\">\r\n              <div className=\"received_withd_msg\">\r\n                <div className = \"playerdiv\"> \r\n                <Player >\r\n                  <source src={message.messageVideo} />\r\n              </Player>\r\n                </div>\r\n              \r\n                <p>{message.messageBody}</p>\r\n                <span className=\"time_date\"> {message.time}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else if(message.from === props.user) {\r\n        return (\r\n          <div class=\"outgoing_msg\">\r\n          {\r\n            props.isDel ?\r\n              <Checkbox name=\"gilad\" />: null\r\n          }\r\n            <div class=\"sent_msg\">\r\n            <div className = \"playerdiv\">\r\n            {<Player>\r\n                  <source src={message.messageVideo} />\r\n              </Player>}\r\n            </div>\r\n            \r\n              <p>{message.messageBody}</p>\r\n              <span class=\"time_date\"> {message.time}</span>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else{\r\n        console.log(\"nothing\")\r\n      }\r\n        \r\n    })\r\n  );\r\n}\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleFriendRequest.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\contactService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleContact.js",["280"],"import { Button, Typography,Paper } from \"@material-ui/core\";\r\nimport { isAuthenticated } from \"../clientStorages/auth\";\r\nimport friendService from \"../../../services/friendService\";\r\nimport React, { useState, useContext} from \"react\";\r\nimport { lightBlue, grey} from '@material-ui/core/colors';\r\nconst SingleContact = (props) => {\r\n     \r\n    const { contact } = props;\r\n    var userData=JSON.parse(localStorage.getItem(\"user\")) \r\n      const [showAddBtn, setAddBtn]=useState(userData.sentRequests.includes(contact._id)?false:true)\r\n     \r\n  \r\n    //const [showAddBtn, setAddBtn]=useState(state?!state.sentRequests.includes(contact._id):true);\r\n    const myId=isAuthenticated()._id;\r\n    const myName =isAuthenticated().firstName + \" \" +isAuthenticated().lastName;\r\n    const myProfileImg =isAuthenticated().profileImg;\r\n    const myEmail =isAuthenticated().email;\r\n    const myGender =isAuthenticated().gender;\r\n    const myLangPreference =isAuthenticated().langPreference;\r\n    const sentFriendRequest=()=>{\r\n        friendService.sendRequest(\r\n            {friendId:contact._id,\r\n            myId,myName,myProfileImg,myEmail,myGender,myLangPreference})\r\n         .then((data) => {\r\n           localStorage.setItem(\"user\",JSON.stringify(data));\r\n              // dispatch({type:\"FRIEND_REQUESTED\",payload:{sentRequests:data.sentRequests }})\r\n             setAddBtn(false)\r\n            \r\n            })\r\n         .catch((err) => {console.log(err);});\r\n    }\r\n     const cancelFriendRequest=()=>{\r\n        friendService.cancelRequest(\r\n            {friendId:contact._id,myId})\r\n         .then((data) => {\r\n             localStorage.setItem(\"user\",JSON.stringify(data));\r\n            // dispatch({type:\"FRIEND_REQUESTED\",payload:{sentRequests:data.sentRequests }})\r\n             setAddBtn(true)\r\n             \r\n         })\r\n         .catch((err) => {console.log(err);});\r\n    }\r\n    return (\r\n        <div>\r\n       <Paper style={{padding: '10px 20px', marginBottom:\"2rem\"}}  >\r\n              <img src={contact.profileImg}  className=\"img-fluid rounded-circle p-2\"\r\n          style={{ width: \"4.9em\" ,display:\"inline\" }} alt=\"img\"/>\r\n              <h4   style={{display:\"inline\"  }}>{contact.firstName + \" \"+ contact.lastName}</h4>\r\n        {showAddBtn ?  \r\n         <Button className= \"loginbtn\"\r\n             style={{display:\"inline-block\"  ,position:\"relative\",float:\"right\",marginTop:\"1rem\", backgroundColor:lightBlue[600],color:\"white\"}}\r\n            variant=\"contained\" \r\n            onClick={sentFriendRequest}>Add friend</Button>\r\n        : \r\n        <Button className= \"loginbtn\"\r\n              style={{display:\"inline-block\" ,position:\"relative\",float:\"right\" ,marginTop:\"1rem\", backgroundColor:grey[500],color:\"white\"}}\r\n            variant=\"contained\" \r\n            onClick={cancelFriendRequest}>Requested</Button> \r\n             }\r\n        <Typography style={{color:\"gray\",marginLeft:\"5rem\" ,  fontStyle: \"italic\" , fontSize:\"0.9rem\" }}>{contact.email}</Typography>\r\n     </Paper>       \r\n   \r\n    </div>);\r\n}\r\n \r\nexport default SingleContact;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\GenericService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\localStorage.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\cookies.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\AllChats.js",["281","282","283","284","285","286","287"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\SingleChat.js",["288","289","290","291","292","293"],"import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport chatservice from \"../../services/ChatService\";\r\nimport userservice from \"../../services/UserService\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./chat.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  subheader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  globe: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  subheaderText: {\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  list: {\r\n    maxHeight: \"calc(100vh - 112px)\",\r\n    overflowY: \"auto\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(0, 3, 0, 1),\r\n  },\r\n  listText: {\r\n    fontSize: \"1.5rem\",\r\n    fontFamily: \"Roboto\",\r\n    marginLeft: \"40px\",\r\n  },\r\n  listText1: {\r\n    fontSize: \"1.2rem\",\r\n    fontFamily: \"Roboto\",\r\n    color: \"gray\",\r\n    marginLeft: \"40px\",\r\n  },\r\n  listBtn: {\r\n    backgroundColor: \"rgb(0, 172, 193)\",\r\n    color: \"white\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  mygrid: {\r\n    marginTop: \"50px\",\r\n    marginLeft: \"350px\",\r\n    width: \"650px\",\r\n  },\r\n  mygrid1: {\r\n    padding: \"20px\",\r\n  },\r\n  img: {\r\n    width: \"4rem\",\r\n    height: \"4rem\",\r\n    borderRadius: \"60px\",\r\n  },\r\n}));\r\nconst SingleChat = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  console.log(\"props\",props.recipients)\r\n  console.log(\"props\",props.lastMsg)\r\n  let elem = null;\r\n  \r\n  return (\r\n    <div>\r\n      {props.recipients.map((r, index) => {\r\n        //console.log(\"r: \", r + \" index:\", index);\r\n        //console.log(\"chats url:\", r.profileImg, index);\r\n        //console.log(\"chats msg:\", usersData.current.lastMsg[index], index);\r\n        //console.log(\"chats name : \", r.firstName, index);\r\n        //console.log(props.lastMsg[index])\r\n        return (\r\n          <Grid xs={6}>\r\n            <ListItem button onClick={() => history.push(\"/chat/\" + r.email)}>\r\n              <ListItemAvatar>\r\n                <img\r\n                  src={r.img}\r\n                  alt='img'\r\n                  className={classes.img}\r\n               />\r\n              </ListItemAvatar>\r\n              <ListItemText>\r\n                {/*  {setText(r,chatRecipients.lastMsg[index],chatRecipients.msgType[index])}\r\n                {elem}\r\n                 */}\r\n                <Typography className={classes.listText}>\r\n                  {r.name}\r\n                </Typography>\r\n                {props.lastMsg.emails.forEach((u,ind)=>{\r\n                    if(u === r.email){\r\n                      console.log(\" email from map\",u,props.lastMsg.msgs[ind])\r\n                      elem= ( <Typography className={classes.listText1}>\r\n                                  {props.lastMsg.msgs[ind]}\r\n                            </Typography>\r\n                      ) \r\n                    }\r\n                })}\r\n                {elem}\r\n              </ListItemText>\r\n              <Divider />\r\n            </ListItem>\r\n            <Divider />\r\n          </Grid>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default SingleChat;\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\RenderChat.js",["294","295","296"],"import TypeMessage from \"./TypeMessage\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./chat.css\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport Header from \"../FrontendComponents/components/Header\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function RenderChat(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const options = [\r\n    'Search',\r\n    'Delete'\r\n  ];\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (option) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const itemClickHandler= (option)=>{\r\n    console.log(option)\r\n    props.setDel(!props.isDel)\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <div className='singleChatContainer'>\r\n      \r\n        <div className='mesgs'>\r\n          <div className='msg_history'>\r\n            <div className='profilediv'>\r\n              <img\r\n                className='profile'\r\n                src={props.recipientInfo.url}\r\n                alt='dp'\r\n              />\r\n              <span className='recName'>{props.recipientInfo.name}</span>\r\n              {\r\n                  !(props.isDel) ?\r\n                  <div>\r\n                  <IconButton\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n                >\r\n                <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id=\"long-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    PaperProps={{\r\n                    style: {\r\n                        maxHeight: 48 * 4.5,\r\n                        width: '20ch',\r\n                    },\r\n                    }}\r\n                >\r\n                    {options.map((option) => (\r\n                    <MenuItem key={option} selected={option === 'Search'} onClick={()=>itemClickHandler(option)}>\r\n                        {option}\r\n                    </MenuItem>\r\n                    ))}\r\n                </Menu>\r\n                  </div>\r\n                  :\r\n                  <Button>Delete</Button>\r\n              }\r\n            </div>\r\n            {props.element}\r\n            {props.loading ? (\r\n              <div className='load'>\r\n                <CircularProgress color='secondary' />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <TypeMessage sendMessage={props.sendMessage} />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n",{"ruleId":"297","severity":1,"message":"298","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":19},{"ruleId":"297","severity":1,"message":"301","line":4,"column":8,"nodeType":"299","messageId":"300","endLine":4,"endColumn":13},{"ruleId":"297","severity":1,"message":"302","line":10,"column":10,"nodeType":"299","messageId":"300","endLine":10,"endColumn":18},{"ruleId":"297","severity":1,"message":"303","line":11,"column":10,"nodeType":"299","messageId":"300","endLine":11,"endColumn":21},{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","replacedBy":"307"},{"ruleId":"297","severity":1,"message":"308","line":17,"column":8,"nodeType":"299","messageId":"300","endLine":17,"endColumn":13},{"ruleId":"297","severity":1,"message":"298","line":22,"column":19,"nodeType":"299","messageId":"300","endLine":22,"endColumn":28},{"ruleId":"297","severity":1,"message":"309","line":22,"column":30,"nodeType":"299","messageId":"300","endLine":22,"endColumn":40},{"ruleId":"297","severity":1,"message":"310","line":1,"column":31,"nodeType":"299","messageId":"300","endLine":1,"endColumn":37},{"ruleId":"297","severity":1,"message":"311","line":4,"column":16,"nodeType":"299","messageId":"300","endLine":4,"endColumn":22},{"ruleId":"312","severity":1,"message":"313","line":23,"column":7,"nodeType":"314","endLine":23,"endColumn":15,"suggestions":"315"},{"ruleId":"316","severity":1,"message":"317","line":45,"column":45,"nodeType":"318","messageId":"319","endLine":45,"endColumn":47},{"ruleId":"297","severity":1,"message":"320","line":4,"column":10,"nodeType":"299","messageId":"300","endLine":4,"endColumn":15},{"ruleId":"297","severity":1,"message":"321","line":4,"column":17,"nodeType":"299","messageId":"300","endLine":4,"endColumn":21},{"ruleId":"297","severity":1,"message":"322","line":4,"column":23,"nodeType":"299","messageId":"300","endLine":4,"endColumn":27},{"ruleId":"312","severity":1,"message":"323","line":30,"column":5,"nodeType":"314","endLine":30,"endColumn":7,"suggestions":"324"},{"ruleId":"297","severity":1,"message":"325","line":33,"column":5,"nodeType":"299","messageId":"300","endLine":33,"endColumn":10},{"ruleId":"297","severity":1,"message":"326","line":6,"column":8,"nodeType":"299","messageId":"300","endLine":6,"endColumn":17},{"ruleId":"297","severity":1,"message":"327","line":19,"column":10,"nodeType":"299","messageId":"300","endLine":19,"endColumn":25},{"ruleId":"297","severity":1,"message":"328","line":64,"column":10,"nodeType":"299","messageId":"300","endLine":64,"endColumn":17},{"ruleId":"297","severity":1,"message":"329","line":64,"column":19,"nodeType":"299","messageId":"300","endLine":64,"endColumn":29},{"ruleId":"297","severity":1,"message":"330","line":65,"column":10,"nodeType":"299","messageId":"300","endLine":65,"endColumn":14},{"ruleId":"312","severity":1,"message":"331","line":93,"column":5,"nodeType":"314","endLine":93,"endColumn":7,"suggestions":"332"},{"ruleId":"297","severity":1,"message":"333","line":112,"column":11,"nodeType":"299","messageId":"300","endLine":112,"endColumn":22},{"ruleId":"297","severity":1,"message":"334","line":116,"column":11,"nodeType":"299","messageId":"300","endLine":116,"endColumn":25},{"ruleId":"297","severity":1,"message":"335","line":124,"column":11,"nodeType":"299","messageId":"300","endLine":124,"endColumn":22},{"ruleId":"336","severity":1,"message":"337","line":133,"column":44,"nodeType":"338","messageId":"339","endLine":133,"endColumn":45},{"ruleId":"297","severity":1,"message":"340","line":142,"column":11,"nodeType":"299","messageId":"300","endLine":142,"endColumn":22},{"ruleId":"297","severity":1,"message":"326","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":19},{"ruleId":"341","severity":1,"message":"342","line":39,"column":10,"nodeType":"343","endLine":39,"endColumn":24},{"ruleId":"341","severity":1,"message":"342","line":44,"column":10,"nodeType":"343","endLine":44,"endColumn":25},{"ruleId":"304","replacedBy":"344"},{"ruleId":"306","replacedBy":"345"},{"ruleId":"297","severity":1,"message":"301","line":10,"column":8,"nodeType":"299","messageId":"300","endLine":10,"endColumn":13},{"ruleId":"312","severity":1,"message":"346","line":150,"column":8,"nodeType":"314","endLine":150,"endColumn":10,"suggestions":"347"},{"ruleId":"348","severity":1,"message":"349","line":203,"column":14,"nodeType":"350","endLine":203,"endColumn":54},{"ruleId":"297","severity":1,"message":"351","line":15,"column":8,"nodeType":"299","messageId":"300","endLine":15,"endColumn":19},{"ruleId":"297","severity":1,"message":"352","line":16,"column":8,"nodeType":"299","messageId":"300","endLine":16,"endColumn":19},{"ruleId":"297","severity":1,"message":"353","line":17,"column":8,"nodeType":"299","messageId":"300","endLine":17,"endColumn":14},{"ruleId":"297","severity":1,"message":"354","line":76,"column":17,"nodeType":"299","messageId":"300","endLine":76,"endColumn":25},{"ruleId":"297","severity":1,"message":"355","line":82,"column":7,"nodeType":"299","messageId":"300","endLine":82,"endColumn":14},{"ruleId":"297","severity":1,"message":"356","line":83,"column":7,"nodeType":"299","messageId":"300","endLine":83,"endColumn":14},{"ruleId":"297","severity":1,"message":"357","line":84,"column":7,"nodeType":"299","messageId":"300","endLine":84,"endColumn":14},{"ruleId":"297","severity":1,"message":"358","line":85,"column":7,"nodeType":"299","messageId":"300","endLine":85,"endColumn":14},{"ruleId":"297","severity":1,"message":"359","line":86,"column":7,"nodeType":"299","messageId":"300","endLine":86,"endColumn":12},{"ruleId":"297","severity":1,"message":"360","line":87,"column":7,"nodeType":"299","messageId":"300","endLine":87,"endColumn":13},{"ruleId":"312","severity":1,"message":"361","line":183,"column":5,"nodeType":"314","endLine":183,"endColumn":21,"suggestions":"362"},{"ruleId":"316","severity":1,"message":"317","line":207,"column":42,"nodeType":"318","messageId":"319","endLine":207,"endColumn":44},{"ruleId":"312","severity":1,"message":"363","line":235,"column":5,"nodeType":"314","endLine":235,"endColumn":7,"suggestions":"364"},{"ruleId":"297","severity":1,"message":"365","line":46,"column":10,"nodeType":"299","messageId":"300","endLine":46,"endColumn":22},{"ruleId":"312","severity":1,"message":"366","line":179,"column":6,"nodeType":"314","endLine":179,"endColumn":8,"suggestions":"367"},{"ruleId":"297","severity":1,"message":"368","line":19,"column":32,"nodeType":"299","messageId":"300","endLine":19,"endColumn":37},{"ruleId":"312","severity":1,"message":"369","line":46,"column":9,"nodeType":"314","endLine":46,"endColumn":23,"suggestions":"370"},{"ruleId":"312","severity":1,"message":"371","line":56,"column":5,"nodeType":"314","endLine":56,"endColumn":7,"suggestions":"372"},{"ruleId":"312","severity":1,"message":"346","line":65,"column":8,"nodeType":"314","endLine":65,"endColumn":10,"suggestions":"373"},{"ruleId":"297","severity":1,"message":"374","line":19,"column":13,"nodeType":"299","messageId":"300","endLine":19,"endColumn":25},{"ruleId":"312","severity":1,"message":"375","line":52,"column":8,"nodeType":"314","endLine":52,"endColumn":10,"suggestions":"376"},{"ruleId":"312","severity":1,"message":"377","line":45,"column":34,"nodeType":"314","endLine":45,"endColumn":36,"suggestions":"378"},{"ruleId":"312","severity":1,"message":"379","line":45,"column":6,"nodeType":"314","endLine":45,"endColumn":8,"suggestions":"380"},{"ruleId":"312","severity":1,"message":"381","line":55,"column":6,"nodeType":"314","endLine":55,"endColumn":8,"suggestions":"382"},{"ruleId":"312","severity":1,"message":"383","line":60,"column":6,"nodeType":"314","endLine":60,"endColumn":8,"suggestions":"384"},{"ruleId":"312","severity":1,"message":"385","line":64,"column":5,"nodeType":"314","endLine":64,"endColumn":7,"suggestions":"386"},{"ruleId":"312","severity":1,"message":"323","line":33,"column":6,"nodeType":"314","endLine":33,"endColumn":8,"suggestions":"387"},{"ruleId":"316","severity":1,"message":"317","line":52,"column":43,"nodeType":"318","messageId":"319","endLine":52,"endColumn":45},{"ruleId":"312","severity":1,"message":"388","line":65,"column":6,"nodeType":"314","endLine":65,"endColumn":8,"suggestions":"389"},{"ruleId":"312","severity":1,"message":"390","line":101,"column":6,"nodeType":"314","endLine":101,"endColumn":8,"suggestions":"391"},{"ruleId":"297","severity":1,"message":"392","line":105,"column":9,"nodeType":"299","messageId":"300","endLine":105,"endColumn":13},{"ruleId":"297","severity":1,"message":"393","line":4,"column":9,"nodeType":"299","messageId":"300","endLine":4,"endColumn":15},{"ruleId":"297","severity":1,"message":"393","line":13,"column":9,"nodeType":"299","messageId":"300","endLine":13,"endColumn":15},{"ruleId":"316","severity":1,"message":"394","line":11,"column":39,"nodeType":"318","messageId":"395","endLine":11,"endColumn":41},{"ruleId":"297","severity":1,"message":"309","line":4,"column":27,"nodeType":"299","messageId":"300","endLine":4,"endColumn":37},{"ruleId":"297","severity":1,"message":"396","line":2,"column":10,"nodeType":"299","messageId":"300","endLine":2,"endColumn":24},{"ruleId":"297","severity":1,"message":"397","line":26,"column":7,"nodeType":"299","messageId":"300","endLine":26,"endColumn":14},{"ruleId":"297","severity":1,"message":"398","line":41,"column":7,"nodeType":"299","messageId":"300","endLine":41,"endColumn":17},{"ruleId":"297","severity":1,"message":"356","line":44,"column":7,"nodeType":"299","messageId":"300","endLine":44,"endColumn":14},{"ruleId":"297","severity":1,"message":"399","line":45,"column":7,"nodeType":"299","messageId":"300","endLine":45,"endColumn":12},{"ruleId":"312","severity":1,"message":"400","line":120,"column":6,"nodeType":"314","endLine":120,"endColumn":8,"suggestions":"401"},{"ruleId":"312","severity":1,"message":"402","line":184,"column":5,"nodeType":"314","endLine":184,"endColumn":29,"suggestions":"403"},{"ruleId":"297","severity":1,"message":"298","line":1,"column":17,"nodeType":"299","messageId":"300","endLine":1,"endColumn":26},{"ruleId":"297","severity":1,"message":"310","line":1,"column":28,"nodeType":"299","messageId":"300","endLine":1,"endColumn":34},{"ruleId":"297","severity":1,"message":"404","line":1,"column":36,"nodeType":"299","messageId":"300","endLine":1,"endColumn":44},{"ruleId":"297","severity":1,"message":"351","line":11,"column":8,"nodeType":"299","messageId":"300","endLine":11,"endColumn":19},{"ruleId":"297","severity":1,"message":"352","line":12,"column":8,"nodeType":"299","messageId":"300","endLine":12,"endColumn":19},{"ruleId":"297","severity":1,"message":"353","line":13,"column":8,"nodeType":"299","messageId":"300","endLine":13,"endColumn":14},{"ruleId":"297","severity":1,"message":"298","line":2,"column":17,"nodeType":"299","messageId":"300","endLine":2,"endColumn":26},{"ruleId":"297","severity":1,"message":"404","line":2,"column":28,"nodeType":"299","messageId":"300","endLine":2,"endColumn":36},{"ruleId":"297","severity":1,"message":"310","line":2,"column":38,"nodeType":"299","messageId":"300","endLine":2,"endColumn":44},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Provider' is defined but never used.","'createStore' is defined but never used.","no-native-reassign",["405"],"no-negated-in-lhs",["406"],"'Users' is defined but never used.","'useContext' is defined but never used.","'useRef' is defined but never used.","'uuidv4' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRecData'. Either include it or remove the dependency array.","ArrayExpression",["407"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Slide' is defined but never used.","'Zoom' is defined but never used.","'Flip' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["408"],"'count' is assigned a value but never used.","'TextField' is defined but never used.","'isAuthenticated' is defined but never used.","'newUser' is assigned a value but never used.","'setNewUser' is assigned a value but never used.","'show' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clientSocket' and 'getData'. Either include them or remove the dependency array.",["409"],"'showButtons' is assigned a value but never used.","'addGroupMember' is assigned a value but never used.","'createGroup' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'nameHandler' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["405"],["406"],"React Hook useEffect has missing dependencies: 'match.params.token' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["410"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'chatservice' is defined but never used.","'userservice' is defined but never used.","'Button' is defined but never used.","'isLoaded' is assigned a value but never used.","'recData' is assigned a value but never used.","'recMsgs' is assigned a value but never used.","'msgType' is assigned a value but never used.","'recName' is assigned a value but never used.","'recId' is assigned a value but never used.","'imgUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getRecData' and 'uId.email'. Either include them or remove the dependency array.",["411"],"React Hook useEffect has missing dependencies: 'chatRecipients', 'clientSocket', 'setNewRecipient', and 'setRecArray'. Either include them or remove the dependency array.",["412"],"'messageEvent' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'myId' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["413"],"'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["414"],"React Hook useEffect has missing dependencies: 'getData' and 'getSingleContact'. Either include them or remove the dependency array.",["415"],["416"],"'clientSocket' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllMyFriends'. Either include it or remove the dependency array.",["417"],"React Hook useEffect has a missing dependency: 'myId'. Either include it or remove the dependency array.",["418"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["419"],"React Hook useEffect has a missing dependency: 'clientSocket'. Either include it or remove the dependency array.",["420"],"React Hook useEffect has a missing dependency: 'messageEvent'. Either include it or remove the dependency array.",["421"],"React Hook useEffect has missing dependencies: 'myId' and 'roomJoin'. Either include them or remove the dependency array.",["422"],["423"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["424"],"React Hook useEffect has missing dependencies: 'clientSocket' and 'count'. Either include them or remove the dependency array.",["425"],"'data' is assigned a value but never used.","'config' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'MyChatsContext' is defined but never used.","'history' is assigned a value but never used.","'notPresent' is assigned a value but never used.","'dummy' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getRecData', 'uId', and 'usersData'. Either include them or remove the dependency array.",["426"],"React Hook useEffect has missing dependencies: 'clientSocket' and 'setRecArray'. Either include them or remove the dependency array.",["427"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"434","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},{"desc":"430","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},"Update the dependencies array to be: [getRecData, userId]",{"range":"468","text":"469"},"Update the dependencies array to be: [id]",{"range":"470","text":"471"},"Update the dependencies array to be: [clientSocket, getData]",{"range":"472","text":"473"},"Update the dependencies array to be: [match.params.token, values]",{"range":"474","text":"475"},"Update the dependencies array to be: [chatRecipients, getRecData, uId.email]",{"range":"476","text":"477"},"Update the dependencies array to be: [chatRecipients, clientSocket, setNewRecipient, setRecArray]",{"range":"478","text":"479"},"Update the dependencies array to be: [myId, values]",{"range":"480","text":"481"},"Update the dependencies array to be: [formData, match.params]",{"range":"482","text":"483"},"Update the dependencies array to be: [getData, getSingleContact]",{"range":"484","text":"485"},{"range":"486","text":"475"},"Update the dependencies array to be: [getAllMyFriends]",{"range":"487","text":"488"},"Update the dependencies array to be: [myId]",{"range":"489","text":"490"},"Update the dependencies array to be: [history]",{"range":"491","text":"492"},"Update the dependencies array to be: [clientSocket]",{"range":"493","text":"494"},"Update the dependencies array to be: [messageEvent]",{"range":"495","text":"496"},"Update the dependencies array to be: [myId, roomJoin]",{"range":"497","text":"498"},{"range":"499","text":"471"},"Update the dependencies array to be: [getData]",{"range":"500","text":"501"},"Update the dependencies array to be: [clientSocket, count]",{"range":"502","text":"503"},"Update the dependencies array to be: [getRecData, uId, usersData]",{"range":"504","text":"505"},"Update the dependencies array to be: [usersData, lastMsg.msgs, clientSocket, setRecArray]",{"range":"506","text":"507"},[747,755],"[getRecData, userId]",[854,856],"[id]",[3027,3029],"[clientSocket, getData]",[4931,4933],"[match.params.token, values]",[5774,5790],"[chatRecipients, getRecData, uId.email]",[7294,7296],"[chatRecipients, clientSocket, setNewRecipient, setRecArray]",[5838,5840],"[myId, values]",[1648,1662],"[formData, match.params]",[1896,1898],"[getData, getSingleContact]",[1681,1683],[1773,1775],"[getAllMyFriends]",[1651,1653],"[myId]",[1594,1596],"[history]",[1847,1849],"[clientSocket]",[1949,1951],"[messageEvent]",[2002,2004],"[myId, roomJoin]",[1429,1431],[2332,2334],"[getData]",[3401,3403],"[clientSocket, count]",[3995,3997],"[getRecData, uId, usersData]",[5858,5882],"[usersData, lastMsg.msgs, clientSocket, setRecArray]"]