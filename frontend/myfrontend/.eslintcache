[{"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\index.js":"1","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\reportWebVitals.js":"2","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\App.js":"3","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\SocketContext.js":"4","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\MyChatsContext.js":"5","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\Activate.js":"6","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\forgotPassword.js":"7","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\LogIn.js":"8","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\resetPassword.js":"9","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\notFound.js":"10","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Users.js":"11","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SignUp.js":"12","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\AllChats.js":"13","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Chat.js":"14","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\userDashboard.js":"15","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\profileSetup.js":"16","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\updateProfileSetup.js":"17","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllContacts.js":"18","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllFriendRequest.js":"19","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllFriends.js":"20","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\RenderChat.js":"21","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\pageTitle.js":"22","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\AlertBar.js":"23","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\ChatService.js":"24","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\ProgressBar.js":"25","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\UserService.js":"26","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\accountService.js":"27","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\api\\auth.js":"28","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\auth.js":"29","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\Header.js":"30","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleFriend.js":"31","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\friendService.js":"32","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleFriendRequest.js":"33","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\GenericService.js":"34","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\localStorage.js":"35","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\cookies.js":"36","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\TypeMessage.js":"37","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\contactService.js":"38","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleContact.js":"39","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\SingleChat.js":"40","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\SettingMessage.js":"41","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\GroupService.js":"42","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\ChatContext.js":"43","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\showMessage.js":"44","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\Notification.js":"45"},{"size":1664,"mtime":1618066164985,"results":"46","hashOfConfig":"47"},{"size":362,"mtime":499162500000,"results":"48","hashOfConfig":"47"},{"size":3794,"mtime":1621618906892,"results":"49","hashOfConfig":"47"},{"size":2811,"mtime":1622112498859,"results":"50","hashOfConfig":"47"},{"size":3708,"mtime":1619802370153,"results":"51","hashOfConfig":"47"},{"size":3893,"mtime":1618995410609,"results":"52","hashOfConfig":"47"},{"size":4158,"mtime":1618052506116,"results":"53","hashOfConfig":"47"},{"size":8022,"mtime":1622120634236,"results":"54","hashOfConfig":"47"},{"size":7992,"mtime":1618996175065,"results":"55","hashOfConfig":"47"},{"size":437,"mtime":1614689093529,"results":"56","hashOfConfig":"47"},{"size":7000,"mtime":1618249738129,"results":"57","hashOfConfig":"47"},{"size":11582,"mtime":1618422980426,"results":"58","hashOfConfig":"47"},{"size":11360,"mtime":1622112680542,"results":"59","hashOfConfig":"47"},{"size":6611,"mtime":1622142625835,"results":"60","hashOfConfig":"47"},{"size":5136,"mtime":1622111775544,"results":"61","hashOfConfig":"47"},{"size":12441,"mtime":1621525741081,"results":"62","hashOfConfig":"47"},{"size":12779,"mtime":1622112967571,"results":"63","hashOfConfig":"47"},{"size":5288,"mtime":1622112519599,"results":"64","hashOfConfig":"47"},{"size":4680,"mtime":1622112728312,"results":"65","hashOfConfig":"47"},{"size":4706,"mtime":1622112800240,"results":"66","hashOfConfig":"47"},{"size":4114,"mtime":1622142834112,"results":"67","hashOfConfig":"47"},{"size":781,"mtime":1618996042146,"results":"68","hashOfConfig":"47"},{"size":2255,"mtime":1614689093224,"results":"69","hashOfConfig":"47"},{"size":994,"mtime":1621539473305,"results":"70","hashOfConfig":"47"},{"size":1091,"mtime":1614689093239,"results":"71","hashOfConfig":"47"},{"size":425,"mtime":1620237375174,"results":"72","hashOfConfig":"47"},{"size":607,"mtime":1618937715752,"results":"73","hashOfConfig":"47"},{"size":573,"mtime":1618400947391,"results":"74","hashOfConfig":"47"},{"size":522,"mtime":1618052506107,"results":"75","hashOfConfig":"47"},{"size":2865,"mtime":1619896905411,"results":"76","hashOfConfig":"47"},{"size":2394,"mtime":1620067098679,"results":"77","hashOfConfig":"47"},{"size":787,"mtime":1618423755981,"results":"78","hashOfConfig":"47"},{"size":2553,"mtime":1618997269887,"results":"79","hashOfConfig":"47"},{"size":1643,"mtime":1612354085455,"results":"80","hashOfConfig":"47"},{"size":284,"mtime":1618052506109,"results":"81","hashOfConfig":"47"},{"size":268,"mtime":1618052506108,"results":"82","hashOfConfig":"47"},{"size":1576,"mtime":1615214194986,"results":"83","hashOfConfig":"47"},{"size":308,"mtime":1618996505101,"results":"84","hashOfConfig":"47"},{"size":3542,"mtime":1622108099670,"results":"85","hashOfConfig":"47"},{"size":7938,"mtime":1622034899840,"results":"86","hashOfConfig":"47"},{"size":3973,"mtime":1621525740710,"results":"87","hashOfConfig":"47"},{"size":440,"mtime":1613505721315,"results":"88","hashOfConfig":"47"},{"size":1634,"mtime":1621696142240,"results":"89","hashOfConfig":"47"},{"size":1334,"mtime":1621615792588,"results":"90","hashOfConfig":"47"},{"size":1199,"mtime":1622136390492,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},"1gexn1j",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"95"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"95"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"95"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"95"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"95"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"95"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"95"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"95"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"95"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\index.js",["194","195","196","197"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//import Pusher from 'pusher-js';\r\n//import Reducer from './Redux/reducers/chat_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n//Pusher.logToConsole = true;\r\n\r\n//useEffect (()=>{\r\n  /* const pusher = new Pusher('18cb37e3146179a6a80e', {\r\n  cluster: 'ap2',\r\n  authEndpoint: 'http://localhost:5000/api/chatapi/pusher/auth'\r\n}); */\r\n/* usher.connection.bind('connected', function () {\r\n  // attach the socket ID to all outgoing Axios requests\r\n  axios.defaults.headers.common['X-Socket-Id'] = pusher.connection.socket_id;\r\n  console.log(\"id:\",pusher.connection.socket_id)\r\n}); */\r\n//},[])\r\n/* var channel = pusher.subscribe('private-my-channel');\r\nchannel.bind('my-event', function(data) {\r\n  console.log(\"in bind\")\r\n  alert(JSON.stringify(data));\r\n  console.log(\"pusher data:\",data)\r\n}); */\r\n\r\n//const myStore = createStore(Reducer, window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n                            //window.__REDUX_DEVTOOLS_EXTENSION__() );\r\n\r\n/* ReactDOM.render(\r\n  <Provider\r\n        store={myStore}\r\n        >\r\n        <App />\r\n  </Provider>\r\n    \r\n  ,\r\n  document.getElementById('root')\r\n); */\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["198","199"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\reportWebVitals.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\App.js",["200","201","202"],"import './App.css';\r\nimport { Route, Switch,BrowserRouter as Router,Redirect } from \"react-router-dom\";\r\nimport UserDashboard from \"./components/FrontendComponents/components/userDashboard\";\r\nimport SignUp from \"./components/FrontendComponents/components/SignUp\";\r\nimport LogIn from \"./components/FrontendComponents/components/LogIn\";\r\nimport Activate from \"./components/FrontendComponents/components/Activate\";\r\nimport notFound from \"./components/FrontendComponents/components/notFound\";\r\nimport ForgotPassword from \"./components/FrontendComponents/components/forgotPassword\";\r\nimport ResetPassword from \"./components/FrontendComponents/components/resetPassword\";\r\nimport ProfileSetup from \"./components/FrontendComponents/components/profileSetup\";\r\nimport AllContact from \"./components/FrontendComponents/components/AllContacts\";\r\nimport AllFriendRequest from \"./components/FrontendComponents/components/AllFriendRequest\";\r\nimport AllFriends from \"./components/FrontendComponents/components/AllFriends\";\r\nimport UpdateProfileSetup from \"./components/FrontendComponents/components/updateProfileSetup\";\r\nimport Chat from \"./components/ChatComponents/Chat\";\r\nimport MyChats from \"./components/ChatComponents/AllChats\";\r\nimport Users from \"./components/ChatComponents/Users\";\r\nimport {SocketProvider} from './context/SocketContext';\r\nimport {MyChatsProvider} from './context/MyChatsContext';\r\nimport {ChatContextProvider} from './context/ChatContext';\r\n//import {SocketContext} from './context/SocketContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//import Notification from './components/FrontendComponents/Alerts/Notification'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport {useState, useEffect, useContext } from 'react';\r\n\r\n\r\nconst App =() =>{\r\n  const [userId,setId] = useState()\r\n  const [dId,setDid] = useState()\r\n  //const [msg, setMsg] = useState()\r\n  //const {messageEvent} = useContext(SocketContext);\r\n  \r\n  /* useEffect(()=>{\r\n    messageEvent()\r\n\r\n  },[]) */\r\n  return (\r\n    <div className=\"App\">\r\n  \r\n    <MyChatsProvider userId={userId} >\r\n    <ChatContextProvider userId={userId} >\r\n    <SocketProvider id={dId} >\r\n    <ToastContainer/>\r\n    <Router>\r\n      <Switch>\r\n            <Route path=\"/\" exact><LogIn onIdSubmit={setId} setId={setDid}/></Route>\r\n            <Route exact path=\"/signup\" component={SignUp} />\r\n            <Route exact path=\"/login\"><LogIn onIdSubmit={setId}  setId={setDid}/></Route>\r\n            <Route exact path=\"/user/activate/:token\" component={Activate} />\r\n            <Route exact path=\"/dashboard/:id\"  component ={UserDashboard} />\r\n            <Route exact path=\"/reset-password/:token\" component={ResetPassword} />\r\n            <Route exact path=\"/forgot-password\" component={ForgotPassword} />\r\n            <Route exact path=\"/profile-setup/:token\" component={ProfileSetup}/>\r\n            <Route exact path=\"/update-my-profile-setup/:id\" component={UpdateProfileSetup}/>\r\n            <Route exact path =\"/all-contacts/:id\" component= {AllContact}/>\r\n            <Route exact path = \"/all-friend-requests/:id\" component ={AllFriendRequest}/>\r\n            <Route exact path =\"/all-my-friends/:id\" component ={AllFriends} />\r\n            <Route exact path=\"/notfound\" component={notFound} />\r\n\r\n            <Route path=\"/chat/:id\" render={(props) => (\r\n              <Chat {...props} key={props.location.key} />\r\n            )} exact>\r\n            </Route>\r\n            <Route path=\"/mychats/:id\" render={(props) => (\r\n              <MyChats {...props} key={props.location.key}/>\r\n            )} exact>\r\n            </Route>\r\n            <Redirect to=\"/notfound\" />  \r\n      </Switch>\r\n      </Router>\r\n    </SocketProvider>\r\n    </ChatContextProvider>\r\n    </MyChatsProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\SocketContext.js",["203","204","205","206","207"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\MyChatsContext.js",["208","209","210","211"],"import React ,{createContext, useRef,useEffect,useState} from 'react'\r\nimport chatservice from \"../services/ChatService\"\r\nimport userservice from \"../services/UserService\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const MyChatsContext = createContext();\r\nexport function MyChatsProvider({userId,children}) {\r\n    const [chatRecipients,setChatRecipients] = useState([])\r\n    let recData = []\r\n    let recMsgs = []\r\n    let msgType = []\r\n    let recName = []\r\n    let recId=[]\r\n    let imgUrl =[]\r\n    useEffect(()=>{\r\n        //userId.current = localStorage.getItem(\"userId\")\r\n        if(userId !== undefined){\r\n        getRecData(userId,undefined)\r\n        //console.log(userId)\r\n        }\r\n        console.log(\"undefined\")\r\n        \r\n    },[userId])\r\n\r\n    const getRecData = (uId)=>{\r\n         recData = []; recName =[]; recMsgs = []; msgType = []; imgUrl=[]; recId=[]\r\n        //console.log(\"in getdata\")\r\n        chatservice.getChatRecipients(uId).then((data)=>{    \r\n            if(data.length>0){\r\n                //console.log(\"data getchat\",data)\r\n                /* dataFromDb.push(data)\r\n                console.log(\"data from db getchat\",dataFromDb) */\r\n                data.map((rec) =>{\r\n                    //console.log('single rec',rec)\r\n                    return recData.push(rec)\r\n                })\r\n                console.log(\"rec data\",recData)\r\n                recData = Array.from(new Set(recData));\r\n                console.log(\"rec data updated\",recData)\r\n                setChatRecipients((r)=>{\r\n                    r.Rname=recData\r\n                    //console.log(chatRecipients)\r\n                    return r\r\n                })\r\n                chatRecipients.Rname.map((r)=>{\r\n                    //console.log(\"r\",r)\r\n                    chatservice.getLastMsg(uId, r)\r\n                    .then((data1)=>{\r\n                        //console.log(\"data\",data1.type)\r\n                        recMsgs.push(data1.lastMsg)\r\n                        msgType.push(data1.type)\r\n                        //return {recMsgs,msgType}\r\n                    })\r\n                    .catch((err)=>console.log(err))\r\n\r\n                    userservice.getUserByEmail(r).then((data2)=>{\r\n                        //console.log(\"data 2\",data2)\r\n                        recId.push(data2[0]._id)\r\n                        imgUrl.push(data2[0].profileImg)\r\n                        recName.push(data2[0].firstName+' '+data2[0].lastName)\r\n                        setChatRecipients((r)=>{\r\n                            r.lastMsg = recMsgs\r\n                            r.msgType = msgType\r\n                            r.recId = recId\r\n                            r.imgUrl= imgUrl\r\n                            r.name = recName\r\n                            console.log(chatRecipients)\r\n                            return r\r\n                        })\r\n                       /*  if(cb === undefined)\r\n                            console.log(\"do nothing\")\r\n                        else\r\n                            cb() */\r\n                    }).catch((err)=>console.log(err))\r\n                })\r\n                \r\n            }\r\n            else\r\n                console.log(\"no data\")\r\n            \r\n            })\r\n            .catch((err)=>console.log(err))\r\n            return chatRecipients\r\n    }\r\n\r\n    /* useEffect(()=>{\r\n        \r\n    },[chatRecipients]) */\r\n    //getRecData()\r\n  const value = {\r\n      chatRecipients : chatRecipients,\r\n      getRecData : getRecData,\r\n      setRecipients : setChatRecipients,\r\n      /* setuuIdFunc : setuuId,\r\n      uuId : uuId */\r\n  }\r\n  return (\r\n    <MyChatsContext.Provider value={value}>\r\n      {children}\r\n    </MyChatsContext.Provider>\r\n  )\r\n}\r\n\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\Activate.js",["212","213"],"import React, { useState, useEffect } from 'react';\r\nimport accountService from \"../../../services/accountService\";\r\nimport jwt from 'jsonwebtoken';\r\nimport { grey,green, cyan,red} from '@material-ui/core/colors';\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\nimport PageTitle from \"./pageTitle\";\r\nimport { useHistory } from 'react-router-dom';\r\nconst Activate = ({ match }) => {\r\n let token1 = match.params.token;\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    token: '',\r\n    errorMessage: \"\",\r\n    successMsg: \"\",\r\n  });\r\n   const { firstName,lastName, token, errorMessage, successMsg} = formData;\r\n   let history = useHistory()\r\n  useEffect(() => {\r\n    let token = match.params.token;\r\n    let { firstName } = jwt.decode(token);\r\n    let { lastName } = jwt.decode(token);\r\n    if (token) {\r\n      setFormData({ ...formData, firstName,lastName,  token });  \r\n      accountService.accountActivation({token})\r\n      .then(response => {\r\n        setFormData({\r\n          ...formData,\r\n          errorMessage: false,\r\n          successMsg: response.successMessage,\r\n          firstName: response.firstName,\r\n          lastName: response.lastName,\r\n        });\r\n      })\r\n      .catch(err => {\r\n      setFormData({\r\n          ...formData,\r\n          successMsg: false,\r\n         errorMessage: err.response.data.errorMessage,\r\n          firstName: err.response.data.firstName,\r\n          lastName: err.response.data.lastName,\r\n        });\r\n      });\r\n    }}, [match.params]);\r\n     \r\n  \r\n  const ActivationSuccess=()=>(\r\n<div> \r\n  <Grid container > \r\n <Grid item xs={1} sm={3} md={4}></Grid>\r\n  <Grid item xs={1} sm={3} md={4}> \r\n  \r\n      <p><strong>Hi {firstName +\" \"+lastName}</strong></p>\r\n        <div>  <CheckCircleRoundedIcon \r\n              style = {{ color: green[600],paddingTop:\"0.3rem\" }}/>  \r\n           <span style ={{fontSize:\"1.3rem\"}} > Your account has been successfully verified. Click below to create your profile</span></div>\r\n      <Button\r\n             style={{ \r\n               color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\" }}\r\n              variant=\"contained\"\r\n              className= \"loginbtn\"\r\n              onClick={event =>  history.push('/profile-setup/'+token1)}\r\n             \r\n          >\r\n            Create Profile\r\n          </Button>\r\n          </Grid>\r\n          <Grid item xs={1} sm={3} md={4}></Grid>\r\n          </Grid>\r\n   </div>\r\n\r\n\r\n  );\r\n   const ActivationFailure=()=>(\r\n<div> \r\n  <Grid container > \r\n <Grid item xs={1} sm={3} md={4}></Grid>\r\n  <Grid item xs={1} sm={3} md={4}> \r\n  \r\n      <p><strong>Hi {firstName+\" \"+lastName}</strong></p>\r\n        <div>  <CancelRoundedIcon \r\n              style = {{ color: red[600]  }}/>  \r\n           <span style ={{fontSize:\"1.3rem\"}} > <strong>{errorMessage}</strong> </span></div>\r\n      <Button\r\n             style={{ \r\n               color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\" }}\r\n            variant=\"contained\"\r\n             className= \"loginbtn\"\r\n            onClick={event =>  history.push('/signup')}\r\n             \r\n          >\r\n               Try  Again   \r\n          </Button>\r\n          </Grid>\r\n          <Grid item xs={1} sm={3} md={4}></Grid>\r\n          </Grid>\r\n   </div>\r\n\r\n\r\n  );\r\n  return (\r\n  <div>\r\n        <PageTitle name= {\"Activation\"}/>\r\n       {errorMessage && ( ActivationFailure())}\r\n       {successMsg && (ActivationSuccess())}\r\n  </div>)\r\n      }\r\nexport default Activate;","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\forgotPassword.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\LogIn.js",["214"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\resetPassword.js",["215"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from 'clsx';\r\nimport accountService from \"../../../services/accountService\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  InputAdornment,\r\n  InputLabel,\r\n  FormControl,\r\n  Input,\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\n import { grey, cyan,indigo} from '@material-ui/core/colors';\r\nimport isEmpty from \"validator/lib/isEmpty\";\r\nimport equals from \"validator/lib/equals\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n const useStyles = makeStyles((theme) => ({\r\n  textfield: {\r\n     margin: theme.spacing(1),\r\n  },\r\n   margin:{\r\n     marginTop: \"1.2rem\"\r\n   } \r\n}));\r\n\r\nconst ResetPassword = ({ match }) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [values, setValues] = useState({\r\n    token: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    errorMessage: \"\",\r\n    successMsg: \"\",\r\n    showPassword: false,\r\n    showPassword1: false,\r\n    loading: false,\r\n  });\r\n  \r\n   const {\r\n    token,\r\n    password,\r\n    confirmPassword,\r\n    errorMessage,\r\n    successMsg,\r\n    loading,\r\n  } = values;\r\n\r\n    useEffect(() => {\r\n        let token = match.params.token\r\n        if(token) {\r\n            setValues({...values, token})\r\n        }\r\n    }, [])\r\n    const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n   const handleChange = (prop) => (event) => {\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n      errorMessage: \"\",\r\n      successMsg: \"\",\r\n    });\r\n  };\r\n const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n  const handleClickShowConfirmPassword = () => {\r\n    setValues({ ...values, showPassword1: !values.showPassword1 });\r\n  };\r\n   const ResetPasswordBtn = (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      isEmpty(password) ||\r\n      isEmpty(confirmPassword)\r\n    ) {\r\n      setValues({ ...values, errorMessage: \"All fields are required\" });\r\n    } else if (!equals(password, confirmPassword)) {\r\n      setValues({ ...values, errorMessage: \"Passwords do not match\" });\r\n    } else {\r\n  \r\n     \r\n      setValues({ ...values, loading: true });\r\n     accountService.resetPassword( { newPassword: password, resetPasswordLink: token})\r\n        .then((response) => {\r\n          setValues({\r\n            ...values,\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errorMessage: false,\r\n            successMsg: response.successMessage,\r\n            loading: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setValues({\r\n            ...values,\r\n             password: \"\",\r\n            confirmPassword: \"\",\r\n            loading: false,\r\n            errorMessage: err.response.data.errorMessage,\r\n          });\r\n        });\r\n    }\r\n  };\r\n     \r\n  const ResetPasswordForm=()=>(\r\n      \r\n    <Grid container >\r\n      <Grid item xs={1} sm={3} md={4}></Grid>\r\n        <Grid item xs={10} sm ={6} md={4}>\r\n          <Paper style={{padding: '30px 50px'}} >\r\n          <Button  \r\n            className= \"loginbtn\"\r\n            href=\"https://mail.google.com/mail/u/0/#inbox\"\r\n            color=\"primary\"\r\n           style={{marginBottom:\"2rem\" ,paddingLeft:\"0rem\",color:indigo[800]  }}\r\n          >\r\n           <ArrowBackIcon style={{fontWeight:\"bold\",marginRight:\"0.3rem\"}}/> Go Back\r\n          </Button>\r\n             <FormControl className={clsx( classes.textField)} fullWidth>\r\n         <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> New Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\" }}>*</Typography>\r\n         </InputLabel>\r\n                    <Input\r\n            id=\"standard-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n              \r\n          startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <LockIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n        \r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n         \r\n          <FormControl className={clsx(classes.margin, classes.textField)} fullWidth>\r\n                 <InputLabel htmlFor=\"standard-adornment-password\"> \r\n             <Typography variant=\"headline\" style={{fontWeight:\"bold\",fontStyle:\"italic\"  }}> Confirm Password</Typography>\r\n             <Typography variant=\"headline\" style={{color:\"red\",marginLeft:\"0.4rem\" }}>*</Typography>\r\n         </InputLabel>\r\n           <Input\r\n            id=\"standard-adornment-confirmPassword\"\r\n            type={values.showPassword1 ? 'text' : 'password'}\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange('confirmPassword')}\r\n             startAdornment= {\r\n            <InputAdornment position=\"start\">\r\n             <VpnKeyIcon style={{ color: grey[600] }}/>\r\n            </InputAdornment>\r\n          }\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowConfirmPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword1 ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n    \r\n         <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n              }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={ResetPasswordBtn}\r\n          >\r\n            Reset Password \r\n          </Button>\r\n          {successMsg &&  <Button\r\n                     style={{  \r\n                     backgroundColor:grey[500],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"outline\"\r\n            fullWidth\r\n            onClick={event =>  history.push('/login')}\r\n                  >\r\n                      Login\r\n                  </Button>}\r\n           </Paper>\r\n        </Grid>\r\n     <Grid item xs={1} sm={3} md={4}></Grid>\r\n    </Grid>\r\n       \r\n  );   \r\n  return (\r\n  <div>\r\n        {loading && <LinearBuffer />}\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={4000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={4000} />\r\n      )}\r\n       <PageTitle name= {\"Reset Password\"}/>\r\n      {ResetPasswordForm()}\r\n      \r\n  </div>)\r\n      }\r\nexport default ResetPassword;\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\notFound.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Users.js",["216","217","218","219","220","221","222","223","224","225","226"],"import React, { useState, useEffect ,useRef,useContext} from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\n//import Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import socketIOClient from \"socket.io-client\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport userservice from \"../../services/UserService\";\r\nimport groupservice from \"../../services/GroupService\";\r\nimport { isAuthenticated, logout } from \"../FrontendComponents/clientStorages/auth\";\r\nimport {SocketContext} from '../../context/SocketContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport \"./users.css\"\r\n//import commonUtilites from \"../Utilities/common\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  subheader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  globe: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  subheaderText: {\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  list: {\r\n    maxHeight: \"calc(100vh - 112px)\",\r\n    overflowY: \"auto\",\r\n    \r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(0, 3, 0, 1),\r\n  },\r\n  listText:{\r\n    fontSize : '1.3rem',\r\n    fontFamily : 'Roboto'\r\n  }\r\n  ,listText1:{\r\n    fontSize : '1rem',\r\n    fontFamily : 'Roboto',\r\n    color : 'gray'\r\n  }\r\n  , listBtn:{\r\n    backgroundColor: 'rgb(0, 172, 193)',\r\n    color : 'white',\r\n    fontSize : '1rem'\r\n  }\r\n}));\r\n\r\nconst Users = (props) => {\r\n  const classes = useStyles();\r\n  const [users, setUsers] = useState([]);\r\n  const [newUser, setNewUser] = useState(null);\r\n  const [show, setShow] = React.useState(false)\r\n  let count = useRef(0);\r\n  let userId = useRef(\"\");\r\n  let name = useRef(\"\")\r\n  let userslist = useRef([])\r\n  let history = useHistory();\r\n  let recipients = []\r\n  const clientSocket = useContext(SocketContext);\r\n  //const getUsers = useGetUsers();\r\n  const getData = () => {\r\n    userId.current= localStorage.getItem(\"userId\")\r\n    console.log(userId.current)\r\n    userservice.getUsers()\r\n   .then((data) => {\r\n        userslist.current = data\r\n        userslist.current = userslist.current.filter((u)=>{\r\n          return u.email !== userId.current\r\n        })\r\n        setUsers(userslist.current ); \r\n        console.log(\"contacts\",users)\r\n  })\r\n   .catch((err) => console.log(\"This is err\"+ err));\r\n}\r\n  useEffect(()=>{\r\n    getData()\r\n    console.log(clientSocket)\r\n    if(clientSocket!==undefined)\r\n      clientSocket.emit(\"adduser\",{id:clientSocket.id, name: userId.current})\r\n  },[]);\r\n\r\n    const userClickHandler = (u) =>{\r\n        let email = u.email\r\n        let fname= u.firstName\r\n        let lname = u.lastName\r\n        let lang = u.langPreference\r\n        let profileUrl = u.profileImg\r\n        let x = fname+' '+lname\r\n        localStorage.setItem(\"recName\",x)\r\n        localStorage.setItem(\"recLang\",lang)\r\n        localStorage.setItem(\"profileUrl\",profileUrl)\r\n        history.push('/chat/'+email); \r\n        \r\n  }\r\n\r\n  const viewButtonHandler = ()=>{\r\n    history.push('/mychats/'); \r\n  }\r\n    const showButtons = ()=>{\r\n      setShow(true)\r\n    }\r\n\r\n    const addGroupMember = (e)=>{\r\n          console.log(\"target\",e)\r\n          count.current = count.current+1\r\n          console.log(\"count\",count)\r\n        recipients.push(e)\r\n        console.log(\"Rec\",recipients)\r\n    }\r\n\r\n    const createGroup = () =>{\r\n      if(recipients.length > 1){\r\n        let groupMembers = recipients\r\n        let groupName = name.current\r\n        let groupId = uuidv4();\r\n        let createdBy = userId.current\r\n        groupservice.createGroup({groupName,groupId,createdBy,groupMembers})\r\n              .then((data)=>{\r\n                  console.log(\"Created successfully\",data);\r\n                  history.push('/groupchat'+'/'+groupId)\r\n                  //getData();\r\n                })\r\n              .catch((err)=>{console.log(\"Some Err\")})\r\n        //history.push('/chat/'+address);\r\n        //history.push('/groupchat'+'/'+name.current+'/'+address)\r\n      }\r\n    }\r\n\r\n    const nameHandler = (e) =>{\r\n      name.current = e.target.value\r\n      console.log(name.current)\r\n    }\r\n    const handleLogOut = (evt) => {\r\n      logout(() => {\r\n        history.push(\"/login\");\r\n      });\r\n    };\r\n\r\n  /* useEffect(() => {\r\n    getUsers().then((res) => setUsers(res));\r\n  }, [newUser]); */\r\n\r\n  /* useEffect(() => {\r\n    const socket = socketIOClient(process.env.REACT_APP_API_URL);\r\n    socket.on(\"users\", (data) => {\r\n      setNewUser(data);\r\n    });\r\n  }, []); */\r\n\r\n  return (\r\n    <div>\r\n     {/*<Button onClick={showButtons} variant=\"contained\" color=\"primary\">\r\n        Create Group\r\n      </Button>*/}\r\n      <button\r\n        className=\"btn text-decoration-none btn-link   pl-0\"\r\n        style={{textDecoration:\"none\"}}\r\n        onClick={handleLogOut}\r\n      >\r\n        <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i> Logout\r\n      </button>\r\n      <h3 className=\" text-center\">Contacts</h3>\r\n      <List className={classes.list}>\r\n      {users && (\r\n        <React.Fragment>\r\n          {users.map((u) => (\r\n            <div>\r\n            <ListItem\r\n              className={classes.listItem}\r\n              button\r\n            >\r\n             <ListItemAvatar>\r\n             <Avatar className={classes.globe}>\r\n                <FaceIcon/>\r\n              </Avatar>\r\n            </ListItemAvatar> \r\n              <ListItemText onClick={() => userClickHandler(u)}>\r\n                <Typography className={classes.listText}>{u.firstName}&nbsp;{u.lastName}</Typography>\r\n                <Typography className={classes.listText1}>{u.email}</Typography>\r\n              </ListItemText>\r\n              {/* show ? \r\n              <Button onClick = {() => addGroupMember(u.email)} variant=\"contained\" color=\"primary\">\r\n                Add\r\n              </Button>\r\n              : null */}\r\n              <Button variant=\"contained\" className={classes.listBtn}\r\n              onClick={viewButtonHandler}>View</Button>\r\n            </ListItem>\r\n            <Divider/> \r\n            \r\n            </div>\r\n          ))}\r\n          {/* show ? \r\n              <div>\r\n                <TextField onChange = {nameHandler} id=\"standard-basic\" label=\"Group Name\" />\r\n                <Button onClick = {createGroup} variant=\"contained\" color=\"primary\">\r\n                  Create\r\n                </Button>\r\n                </div>\r\n          : null*/ }\r\n          \r\n        </React.Fragment>\r\n      )}\r\n    </List>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Users;\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SignUp.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\AllChats.js",["227","228","229","230","231","232","233","234"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\Chat.js",["235","236","237","238","239","240","241"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\userDashboard.js",["242","243","244","245","246","247","248","249","250"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\profileSetup.js",["251","252","253"],"import React, { useState, useEffect } from \"react\";\r\nimport AlertBar from \"../Alerts/AlertBar\";\r\nimport LinearBuffer from \"../Alerts/ProgressBar\";\r\nimport PageTitle from \"./pageTitle\";\r\nimport Select from \"react-select\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport { grey, cyan} from '@material-ui/core/colors';\r\nimport {Button} from \"@material-ui/core\";\r\nimport axios from 'axios';\r\nimport accountService from \"../../../services/accountService\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Webcam from \"react-webcam\";\r\nconst useStyles = makeStyles({\r\n  \r\n  textfield: {\r\n    marginTop: \"2rem\",\r\n  },\r\n  Submitbtn: {\r\n    marginTop: \"0.6rem\",\r\n  },\r\n});\r\n\r\n\r\n\r\nconst ProfileSetup = ( {match}) => {\r\n    const classes = useStyles();\r\n      let history = useHistory();\r\n    const webcamRef = React.useRef(null);\r\n    const [capturedPic, setCapturedPic]=React.useState(false);\r\nconst options = [\r\n  { label: 'Afrikaans',value:'af' },\r\n  { label: 'Albanian',value:'sq'},\r\n  { label: 'Amharic',value:'am'},\r\n  { label: 'Arabic',value:'ar'},\r\n  { label: 'Armenian',value:'hy'},\r\n  { label: 'Azerbaijani',value:'az'},\r\n  { label: 'Basque',value:'eu'},\r\n  { label: 'Belarusian',value:'be'},\r\n  { label: 'Bengali',value:'bn'},\r\n  { label: 'Bosnian',value:'bs'},\r\n  { label: 'Bulgarian',value:'bg'},\r\n  { label: 'Catalan',value:'ca'},\r\n  { label: 'Cebuano',value:'ceb'},\r\n  { label: 'Chichewa',value:'ny'},\r\n  { label: 'Chinese',value:'zh-cn'},\r\n  { label: 'Corsican',value:'co'},\r\n  { label: 'Croatian',value:'hr'},\r\n  { label: 'Czech',value:'cs'},\r\n  { label: 'Danish',value:'da'},\r\n  { label: 'Dutch',value:'nl'},\r\n  { label: 'English',value:'en'},\r\n  { label: 'Esperanto',value:'eo'},\r\n  { label: 'Estonian',value:'et'},\r\n  { label: 'Filipino',value:'tl'},\r\n  { label: 'Finnish',value:'fi'},\r\n  { label: 'French',value:'fr'},\r\n  { label: 'Danish',value:'da'},\r\n  {label: 'Frisian',value: \"fy\"},\r\n  {label: 'Galician',value: \"gl\"},\r\n  {label: 'Georgian',value: \"ka\"},\r\n  {label: 'German',value: \"de\"},\r\n  {label: 'Greek',value: \"el\"},\r\n  {label: 'Gujarati',value: \"gu\"},\r\n  {label: 'Haitian creole',value: \"ht\"},\r\n  {label:'Hausa',value: \"ha\"},\r\n  {label:'Hawaiian',value: \"haw\"},\r\n  {label:'Hebrew',value: \"iw\"},\r\n  {label: 'Hindi',value: \"hi\"},\r\n  {label:'Hmong',value: \"hmn\"},\r\n  {label:'Hungarian',value: \"hu\"},\r\n  {label:'Icelandic',value: \"is\"},\r\n  {label:'Igbo',value: \"ig\"},\r\n  {label:'Indonesian',value: \"id\"},\r\n  {label:'Irish',value: \"ga\"},\r\n  {label:'Italian',value: \"it\"},\r\n  {label:'Japanese',value: \"ja\"},\r\n  {label:'Javanese',value: \"jw\"},\r\n  {label:'Kannada',value: \"kn\"},\r\n  {label:'Kazakh',value: \"kk\"},\r\n  {label:'Khmer',value:'km'},\r\n  {label:'Korean',value:'ko'},\r\n  {label:'Kurdish',value:'ku'},\r\n  {label: 'Kyrgyz',value: \"ky\"},\r\n  {label: 'Lao',value: \"lo\"},\r\n  {label: 'Latin',value: \"la\"},\r\n  {label: 'Latvian',value: \"lv\"},\r\n  {label: 'Lithuanian',value: \"lt\"},\r\n  {label: 'Luxembourgish',value: \"lb\"},\r\n  {label: 'Macedonian',value: \"mk\"},\r\n  {label:'Malagasy',value: \"mg\"},\r\n  {label:'Malay',value: \"ms\"},\r\n  {label:'Malayalam',value: \"ml\"},\r\n  {label: 'Maltese',value: \"mt\"},\r\n  {label:'Maori',value: \"mi\"},\r\n  {label:'Marathi',value: \"mr\"},\r\n  {label:'Mongolian',value: \"mn\"},\r\n  {label:'Myanmar (burmese)',value: \"my\"},\r\n  {label:'Nepali',value: \"ne\"},\r\n  {label:'Norwegian',value: \"no\"},\r\n  {label:'Odia',value: \"or\"},\r\n  {label:'Pashto',value: \"ps\"},\r\n  {label:'Persian',value: \"fa\"},\r\n  {label:'Polish',value: \"pl\"},\r\n  {label:'Portuguese',value: \"pt\"},\r\n  {label:'Punjabi',value: \"pa\"},\r\n  {label :'Romanian', value:\"ro\"},\r\n  {label :'Russian', value:\"ru\"},\r\n  {label:'Samoan',value: \"sm\"},\r\n  {label:'Scots gaelic',value: \"gd\"},\r\n  {label:'Serbian',value: \"sr\"},\r\n  {label:'Sesotho',value: \"st\"},\r\n  {label:'Shona',value: \"sn\"},\r\n  {label:'Sindhi',value: \"sd\"},\r\n  {label:'Sinhala',value: \"si\"},\r\n  {label:'Slovak',value: \"sk\"},\r\n  {label:'Slovenian', value:\"sl\"},\r\n  {label:'Somali', value:\"so\"},\r\n  {label:'Spanish', value:'es' },\r\n  {label:'Sundanese',value: \"su\"},\r\n  {label:'Swahili',value: \"sw\"},\r\n  {label:'Swedish',value: \"sv\"},\r\n  {label:'Tajik',value: \"tg\"},\r\n  {label:'Tamil',value: \"ta\"},\r\n  {label:'Telugu',value: \"te\"},\r\n  {label:'Thai',value: \"th\"},\r\n  {label:'Turkish',value: \"tr\"},\r\n  {label :'Ukrainian', value:\"uk\"},\r\n  {label:'Urdu',value: \"ur\"},\r\n  {label :'Uyghur', value:\"ug\"},\r\n  {label:'Uzbek', value:'uz' },\r\n  {label:'Vietnamese',value: \"vi\"},\r\n  {label :'Welsh', value:\"cy\"},\r\n  {label:'Xhosa',value: \"xh\"},\r\n  {label :'Yiddish', value:\"yi\"},\r\n  {label:'Yoruba', value:'yo' },\r\n  {label:'Zulu',value: \"zu\"},\r\n  \r\n];\r\n    const [values, setValues] = useState({\r\n    img: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\r\n    language:\"\",\r\n    token:\"\",\r\n    errorMessage: \"\",\r\n    successMsg:\"\",\r\n    infoMessage:\"\",\r\n    loading: false,\r\n  });\r\n  const { img,language,token, successMsg, errorMessage,infoMessage, loading } = values;\r\nuseEffect(() => {\r\n        let token = match.params.token\r\n        if(token) {\r\n            setValues({...values, token})\r\n        }\r\n    }, [])\r\n\r\nconst resizeFile = (file) => new Promise(resolve => {\r\n    Resizer.imageFileResizer(file, 300, 300, 'JPEG', 100, 0,\r\n    uri => {resolve(uri);},'base64' );\r\n});\r\nconst capture =  React.useCallback(() => {\r\n   try{\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n       setValues({...values, infoMessage: \"Picture Captured\"}); \r\n       const data = new FormData();\r\n      data.append(\"file\", imageSrc);\r\n      axios.post(\"http://127.0.0.1:5000/webcam-face-detection\",data)\r\n         .then(async (response) => {\r\n          setValues({ ...values , errorMessage :\"\", successMsg:response.data.successMessage})\r\n           setValues({...values, infoMessage: \"Loading....\"});\r\n           data.append(\"file\", imageSrc);\r\n           data.append(\"upload_preset\", \"TalkSee\");\r\n          fetch(\"https://api.cloudinary.com/v1_1/fariha31/image/upload\",\r\n              { method: \"POST\",\r\n                body: data,\r\n             } ).then(response => response.json())\r\n      .then(data =>   setValues({ ...values , img: data.url}))\r\n      .catch(err => console.error('Error:', err));;   \r\n          })\r\n         }\r\n catch(err)\r\n     {setValues({...values, errorMessage: \"error in uploading photo\"}); }\r\n   \r\n    },\r\n    [webcamRef]\r\n  );\r\n const uploadImage = async (e) => {\r\n  try {\r\n           const imageFile = e.target.files[0];\r\n           const data = new FormData();\r\n           data.append(\"file\", imageFile);\r\n           axios.post(\"http://127.0.0.1:5000/\",data)\r\n         .then(async (response) => {\r\n         setValues({ ...values , errorMessage :\"\", successMsg:\"response.data.successMessage\"})\r\n            const compressedImage = await resizeFile(imageFile);\r\n           setValues({...values, infoMessage: \"Loading....\"});\r\n           data.append(\"file\", compressedImage);\r\n           data.append(\"upload_preset\", \"TalkSee\");\r\n           const res = await fetch(\"https://api.cloudinary.com/v1_1/fariha31/image/upload\",\r\n              { method: \"POST\",\r\n                body: data,\r\n             } );   \r\n           const file =  await res.json();\r\n           setValues({ ...values , img: file.secure_url});\r\n        })\r\n        .catch((err) => {\r\n            setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n      }\r\n catch(err)\r\n     {setValues({...values, errorMessage: \"error in uploading photo\"}); }\r\n}\r\nconst SetProfile =()=>{\r\n  accountService.profileSetup({profileImg: img, langPreference: language, token})\r\n .then((response) => {\r\n          setValues({\r\n            ...values,\r\n            img: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\r\n            language:\"\",\r\n            errorMessage: false,\r\n            successMsg: response.successMessage,\r\n            loading: false,\r\n          });\r\n        })\r\n         .catch((err) => {\r\n           setValues({ ...values , errorMessage:err.response.data.errorMessage}); \r\n        });\r\n}\r\n \r\n  const ProfilePage = () =>( \r\n  <div className=\"profile-page\">\r\n      <div className=\"profile-container\">\r\n          <div className=\"img-holder\">\r\n             <img src={img} className=\"profile-img\"/>\r\n              </div>\r\n             <input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={uploadImage}  />\r\n             <div className=\"label\">\r\n                   <label className=\"image-upload\" htmlFor=\"input\">\r\n\t\t\t\t\t\t<i className=\"material-icons\">add_photo_alternate</i>\r\n\t\t\t\t\t\tChoose Profile Photo\r\n\t\t\t\t\t</label>\r\n                 </div>\r\n                 <div className=\"label\">   \r\n             <button className=\"take-photo loginbtn\"  data-toggle=\"modal\" data-target=\"#exampleModalCenter\" onClick={()=>setCapturedPic(false)}>\r\n               <i className=\"material-icons\" style ={{marginRight:\"0.2rem\"}}>photo_camera</i>\r\n               Take Photo</button> \r\n              </div> \r\n              <Select\r\n                    style={{ width: 210, padding: \"0.4rem\" }}\r\n                    placeholder=\"Select Language ---\"\r\n                    value={options.find(c => c.label === language)}\r\n                    className={classes.textfield}\r\n                    options={options}\r\n                    onChange={(e) => {\r\n                      console.log(e)\r\n                      setValues({\r\n                        ...values,\r\n                        language:e.value ,\r\n                      });\r\n                      \r\n                    }}\r\n                  />\r\n                   <Button\r\n             style={{ color: grey[50],\r\n              backgroundColor:cyan[600],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"0.5rem\" , \r\n              marginTop: \"1.5rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={SetProfile}\r\n            \r\n          >\r\n            Set Profile\r\n          </Button>\r\n                   {successMsg &&  <Button\r\n                     style={{  \r\n                     backgroundColor:grey[500],\r\n              fontWeight:\"bold\", \r\n              borderRadius:\"1rem\" , \r\n              marginTop: \"0.8rem\",\r\n              padding: \"0.5rem\",\r\n               }}\r\n            className= \"loginbtn\"\r\n            variant=\"outline\"\r\n            fullWidth\r\n            onClick={event =>  history.push('/login')}\r\n                  >\r\n                      Login\r\n                  </Button>}\r\n      </div> \r\n         \r\n     \r\n \r\n\r\n \r\n<div className=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div className=\"modal-content\">\r\n      <div className=\"modal-header\">\r\n        <h3 className=\"modal-title\" id=\"exampleModalLongTitle\">Take Photo</h3>\r\n        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <div  className=\"webcam-container\">\r\n         <Webcam  \r\n        audio={false}\r\n        height= {200}\r\n       width ={460}\r\n        ref={webcamRef}\r\n        screenshotFormat=\"image/jpeg\" />\r\n        </div>\r\n      </div>\r\n       \r\n        {capturedPic ? (<div className=\"modal-footer\"> \r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        </div> ):\r\n        (<div className=\"modal-footer\"> \r\n        <button  className=\"take-photo loginbtn\" onClick ={capture}>\r\n          <i className=\"material-icons\" style ={{marginRight:\"0.2rem\"}}>\r\n            photo_camera</i>Capture photo</button> </div>)\r\n        }\r\n    </div>\r\n  </div>\r\n</div>             \r\n  </div>\r\n)\r\nreturn (<div>\r\n    \r\n    {loading && <LinearBuffer />}\r\n     <PageTitle name= {\"Profile Setup\"}/>\r\n      {errorMessage && (\r\n        <AlertBar type=\"error\" message={errorMessage} autoClose={3000} />\r\n      )}\r\n       {infoMessage && (\r\n        <AlertBar type=\"info\" message={infoMessage} autoClose={8000} />\r\n      )}\r\n      {successMsg && (\r\n        <AlertBar type=\"success\" message={successMsg} autoClose={2500} />\r\n      )}\r\n      {ProfilePage()}\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default ProfileSetup;\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\updateProfileSetup.js",["254","255","256","257"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllContacts.js",["258","259","260","261"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllFriendRequest.js",["262","263","264"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\AllFriends.js",["265","266","267","268","269"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\RenderChat.js",["270","271","272","273"],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\pageTitle.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\AlertBar.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\ChatService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\ProgressBar.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\UserService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\accountService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\api\\auth.js",["274","275"],"import axios from \"axios\";\naxios.defaults.headers.common[\"x-auth-token\"] =localStorage.getItem(\"token\");\nexport const signup = async (data) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await axios.post(\"http://localhost:5000/api/users/signup\", data);\n  return response;\n};\nexport const login = async (data) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await axios.post(\"http://localhost:5000/api/users/login\", data);\n  return response;\n};\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\auth.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\Header.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleFriend.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\friendService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleFriendRequest.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\GenericService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\localStorage.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\clientStorages\\cookies.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\TypeMessage.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\contactService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\components\\SingleContact.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\SingleChat.js",["276","277","278","279","280"],"import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport chatservice from \"../../services/ChatService\";\r\nimport userservice from \"../../services/UserService\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./chat.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  subheader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  globe: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  subheaderText: {\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  list: {\r\n    maxHeight: \"calc(100vh - 112px)\",\r\n    overflowY: \"auto\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(0, 3, 0, 1),\r\n  },\r\n  listText: {\r\n    fontSize: \"1.5rem\",\r\n    fontFamily: \"Roboto\",\r\n    marginLeft: \"40px\",\r\n   \r\n  },\r\n  listText1: {\r\n    fontSize: \"1.2rem\",\r\n    fontFamily: \"Roboto\",\r\n    color: \"gray\",\r\n    marginLeft: \"40px\",\r\n  },\r\n  listTime:{\r\n    fontSize: \"0.7rem\",\r\n    fontFamily: \"Roboto\",\r\n    color: \"gray\",\r\n    marginLeft: \"200px\"\r\n  },\r\n  listBtn: {\r\n    backgroundColor: \"rgb(0, 172, 193)\",\r\n    color: \"white\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  mygrid: {\r\n    marginTop: \"50px\",\r\n    marginLeft: \"350px\",\r\n    width: \"650px\",\r\n  },\r\n  mygrid1: {\r\n    padding: \"20px\",\r\n  },\r\n  img: {\r\n    width: \"4rem\",\r\n    height: \"4rem\",\r\n    borderRadius: \"60px\",\r\n  },\r\n}));\r\nconst SingleChat = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  let elem = null;\r\n  let user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let messages = useRef([]);\r\n\r\n  console.log(\"props\",props.lastMsg)\r\n  const recipientClickHandler = (fr, type) => {\r\n    chatservice.getMessagesbyEmail(user.email, fr.email).then((res) => {\r\n      messages.current = res;\r\n      messages.current.map((m) => {\r\n        if (m.type === \"offline\" && m.from !== user.email) {\r\n          chatservice\r\n            .changeMessageType({ type: \"read\" }, m._id)\r\n            .then((res) => console.log(res))\r\n            .catch((err) => console.log(err));\r\n        }\r\n        console.log(\"user matched\")\r\n      });\r\n    });\r\n    console.log(\"fr\", fr);\r\n    localStorage.setItem(\"friendId\", fr.id);\r\n    localStorage.setItem(\"recName\", fr.name);\r\n    localStorage.setItem(\"recLang\", fr.lang);\r\n    localStorage.setItem(\"profileUrl\", fr.img);\r\n    history.push(\"/chat/\" + fr.email + \" \" + fr.id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.recipients.map((r, index) => {\r\n        //console.log(\"r:\", r);\r\n        return (\r\n          <Grid xs={6}>\r\n            <ListItem button>\r\n              <ListItemAvatar>\r\n                <img src={r.img} alt='img' className={classes.img} />\r\n              </ListItemAvatar>\r\n              <ListItemText>\r\n                {/*  {setText(r,chatRecipients.lastMsg[index],chatRecipients.msgType[index])}\r\n                {elem}*/\r\n                 }\r\n\r\n                <Typography className={classes.listText}>{r.name}</Typography>\r\n                \r\n                {props.lastMsg.emails.forEach((u, ind) => {\r\n                  //console.log(\"inside for each lastMsg\", u,ind)\r\n                  //console.log(\"inside map:\",props.lastMsg.types[ind])\r\n                  //console.log(\"inside map:\",props.lastMsg.senders[ind])\r\n                   if (u === r.email) {\r\n                    if (props.lastMsg.types[ind] === \"read\") {\r\n                      //console.log(\"in 1\",props.lastMsg.msgs[ind])\r\n                      elem = (\r\n                        <div>\r\n                            <Typography\r\n                              className={classes.listText1}\r\n                              onClick={() =>\r\n                                recipientClickHandler(\r\n                                  r,\r\n                                  props.lastMsg.types[ind],\r\n                                  props.lastMsg.msgId[ind]\r\n                                )\r\n                              }\r\n                            >\r\n                              {props.lastMsg.msgs[ind]}\r\n                              \r\n                            </Typography>\r\n                            <Typography className={classes.listTime}>\r\n                            {props.lastMsg.time[ind]}\r\n                            </Typography>\r\n                        </div>\r\n                        \r\n                      );\r\n                    } else if (props.lastMsg.types[ind] === \"unread\") {\r\n                      //console.log(\"in 2\")\r\n                      elem = (\r\n                        <div>\r\n                        <Typography\r\n                          style={{ fontWeight: \"bold\", color: \"black\" }}\r\n                          className={classes.listText1}\r\n                          onClick={() =>\r\n                            recipientClickHandler(\r\n                              r,\r\n                              props.lastMsg.types[ind],\r\n                              props.lastMsg.msgId[ind]\r\n                            )\r\n                          }\r\n                        >\r\n                          {props.lastMsg.msgs[ind]}\r\n                        </Typography>\r\n                        <Typography className={classes.listTime}>\r\n                            {props.lastMsg.time[ind]}\r\n                        </Typography>\r\n                        </div>\r\n                      );\r\n                    } else if (\r\n                      props.lastMsg.types[ind] === \"offline\" &&\r\n                      props.lastMsg.senders[ind] !== user.email\r\n                    ) {\r\n                      //console.log(\"in 3\")\r\n                      elem = (\r\n                        <div>\r\n                        <Typography\r\n                          style={{ fontWeight: \"bold\", color: \"black\" }}\r\n                          className={classes.listText1}\r\n                          onClick={() =>\r\n                            recipientClickHandler(\r\n                              r,\r\n                              props.lastMsg.types[ind]\r\n                            )\r\n                          }\r\n                        >\r\n                          {props.lastMsg.msgs[ind]}\r\n                        </Typography>\r\n                        <Typography className={classes.listTime}>\r\n                            {props.lastMsg.time[ind]}\r\n                        </Typography>\r\n                        </div>\r\n                        \r\n                      );\r\n                    } else {\r\n                      console.log(\"in nothing\", props.lastMsg.types[ind]);\r\n                      elem = (\r\n                        <div>\r\n                          <Typography\r\n                            className={classes.listText1}\r\n                            onClick={() =>\r\n                              recipientClickHandler(\r\n                                r,\r\n                                props.lastMsg.types[ind],\r\n                              )\r\n                            }\r\n                          >\r\n                            {props.lastMsg.msgs[ind]}\r\n                          </Typography>\r\n                          <Typography className={classes.listTime}>\r\n                              {props.lastMsg.time[ind]}\r\n                          </Typography>\r\n                        </div>\r\n                      );\r\n                    }\r\n                  }\r\n                })}\r\n\r\n                {elem}\r\n              </ListItemText>\r\n              <Divider />\r\n            </ListItem>\r\n            <Divider />\r\n          </Grid>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default SingleChat;\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\ChatComponents\\SettingMessage.js",["281","282","283"],"import React, {useEffect} from \"react\";\r\nimport \"./chat.css\"\r\n//import myimg from \"./queen.jpg\"\r\nimport { Player } from 'video-react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport \"video-react/dist/video-react.css\"\r\nexport default function SettingMessage(props) {\r\n  //console.log(\"From setting\",props.chat)\r\n  const [checked, setChecked] = React.useState(false);\r\n  const [messages, setMessages] = React.useState()\r\n  let someArray=[]\r\n  const handleChange = (event,message) => {\r\n    \r\n    setChecked((c)=>{\r\n      c= event.target.checked\r\n      console.log(\"check value\",c)\r\n      if(c === true){\r\n        console.log(\"in iffff\")\r\n        setMessages((m)=>{\r\n          console.log(\"in setMessage\")\r\n          if(m !== undefined){\r\n            console.log(\"in if 1\")\r\n            if(m.msgs !== undefined){\r\n              console.log(\"in if 2\")\r\n            let msgs = [...m.msgs]\r\n            msgs = [...msgs  ,message]\r\n            console.log(\"mmmmm\",m.length)\r\n            return {...m, msgs}\r\n            }\r\n            else {\r\n              console.log(\"in msg\",m)\r\n              return {msgs: [message]};\r\n            } \r\n          }\r\n          else {\r\n            console.log(\"in msg\",m)\r\n            return {msgs: [message]};\r\n          }\r\n          \r\n        })\r\n    \r\n        }\r\n        else{\r\n          console.log(\"in elsey\")\r\n          if(messages.msgs !== undefined){\r\n          someArray = messages.msgs\r\n          someArray = messages.msgs.filter ((m)=>{\r\n            return m._id !== message._id\r\n          })\r\n          setMessages((m)=>{\r\n            m = someArray\r\n            console.log(\"mmm\",m)\r\n            return m\r\n          })\r\n        }\r\n        else{\r\n          console.log(\"undened\",messages.msgs)\r\n          setMessages((m)=>{\r\n            return m = []\r\n          })\r\n        }\r\n          //console.log(\"msg 2: \",someArray)\r\n        }\r\n      return c\r\n    })\r\n      \r\n    \r\n  };\r\n\r\n  useEffect(()=>{\r\n    props.delHandler(messages)\r\n  },[messages])\r\n\r\n  console.log(props.isDel)\r\n  return (\r\n    props.chat.messages.map((message) => {\r\n        //console.log(\"msg\",message)\r\n        //console.log(\"user\",props.user)\r\n      if (message.to === props.user) {\r\n        //console.log(\"Type received\")\r\n        return (\r\n          <div className ='msgdiv'>\r\n          <div className=\"incoming_msg_img\">\r\n          {\r\n            props.isDel ?\r\n              <Checkbox \r\n              onChange={(e) => {\r\n              handleChange(e, message);\r\n               }}\r\n              inputProps={{ 'aria-label': 'primary checkbox' }} name=\"gilad\" />: null\r\n          }\r\n          \r\n          </div>\r\n            <div className=\"received_msg\">\r\n              <div className=\"received_withd_msg\">\r\n                <span className = \"playerdiv1\"> \r\n                <Player >\r\n                  <source src={message.messageVideo} />\r\n              </Player>\r\n                </span>\r\n              \r\n                <p>{message.messageBody}</p>\r\n                <span className=\"time_date\"> {message.time}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else if(message.from === props.user) {\r\n        return (\r\n          <div class=\"outgoing_msg\">\r\n          {\r\n            props.isDel ?\r\n              <Checkbox \r\n              onChange={(e) => {\r\n              handleChange(e, message);\r\n               }}\r\n              inputProps={{ 'aria-label': 'primary checkbox' }} \r\n              name=\"gilad\" />: null\r\n          }\r\n            <div class=\"sent_msg\">\r\n            <span className = \"playerdiv2\">\r\n            {<Player>\r\n                  <source src={message.messageVideo} />\r\n              </Player>}\r\n            </span>\r\n            \r\n              <p>{message.messageBody}</p>\r\n              <span class=\"time_date\"> {message.time}</span>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else{\r\n        console.log(\"nothing\")\r\n      }\r\n        \r\n    })\r\n  );\r\n}\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\services\\GroupService.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\context\\ChatContext.js",["284","285","286","287","288","289","290"],"import React ,{createContext, useEffect} from 'react'\r\nimport chatservice from '../services/ChatService'\r\nimport {showNotification} from '../components/FrontendComponents/Alerts/showMessage'\r\nimport Notification from '../components/FrontendComponents/Alerts/Notification'\r\nimport { toast } from 'react-toastify';\r\nimport { Slide, Zoom, Flip, Bounce } from 'react-toastify';\r\nexport const ChatContext = createContext();\r\n\r\nexport const ChatContextProvider = ({userId,setMsg,children}) =>{\r\n    let elem = null\r\n    let msg = ''\r\n    useEffect(()=>{\r\n        getUnreadMsgs(userId)\r\n    },[userId])\r\n    const getUnreadMsgs =(email)=>{\r\n        chatservice.offlinemessages(email)\r\n        .then((res)=>{\r\n            if(res.count > 0){\r\n                console.log(\"count\",res.count)\r\n                msg = 'You have '+res.count+ ' new messages!'\r\n                /* elem = (\r\n                    <Notification msg = {msg}/>\r\n                ) */\r\n                //setMsg(msg)\r\n                if(res.info.sender[0] !== userId){\r\n                    console.log(\"sender\",res.info.sender)\r\n                    console.log(\"user\",userId)\r\n                toast.info(msg,{\r\n                position: toast.POSITION.TOP_LEFT,\r\n                transition: Zoom\r\n            })\r\n                }\r\n                else{\r\n                    console.log(\"is sender\")\r\n                }\r\n        \r\n            }\r\n        })\r\n        .catch((err)=>console.log(err))\r\n    }\r\n    \r\n    return (\r\n        <ChatContext.Provider value = {{getUnreadMsgs: getUnreadMsgs}}>\r\n        \r\n            {children}\r\n        </ChatContext.Provider>\r\n    );\r\n}\r\n","C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\showMessage.js",[],"C:\\Users\\Zenia Kiki\\Desktop\\TalkSee_Backend\\frontend\\myfrontend\\src\\components\\FrontendComponents\\Alerts\\Notification.js",["291"],{"ruleId":"292","severity":1,"message":"293","line":3,"column":10,"nodeType":"294","messageId":"295","endLine":3,"endColumn":19},{"ruleId":"292","severity":1,"message":"296","line":4,"column":8,"nodeType":"294","messageId":"295","endLine":4,"endColumn":13},{"ruleId":"292","severity":1,"message":"297","line":10,"column":10,"nodeType":"294","messageId":"295","endLine":10,"endColumn":18},{"ruleId":"292","severity":1,"message":"298","line":11,"column":10,"nodeType":"294","messageId":"295","endLine":11,"endColumn":21},{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"292","severity":1,"message":"303","line":17,"column":8,"nodeType":"294","messageId":"295","endLine":17,"endColumn":13},{"ruleId":"292","severity":1,"message":"293","line":25,"column":19,"nodeType":"294","messageId":"295","endLine":25,"endColumn":28},{"ruleId":"292","severity":1,"message":"304","line":25,"column":30,"nodeType":"294","messageId":"295","endLine":25,"endColumn":40},{"ruleId":"292","severity":1,"message":"305","line":4,"column":10,"nodeType":"294","messageId":"295","endLine":4,"endColumn":15},{"ruleId":"292","severity":1,"message":"306","line":4,"column":17,"nodeType":"294","messageId":"295","endLine":4,"endColumn":21},{"ruleId":"292","severity":1,"message":"307","line":4,"column":23,"nodeType":"294","messageId":"295","endLine":4,"endColumn":27},{"ruleId":"292","severity":1,"message":"308","line":11,"column":7,"nodeType":"294","messageId":"295","endLine":11,"endColumn":12},{"ruleId":"309","severity":1,"message":"310","line":30,"column":5,"nodeType":"311","endLine":30,"endColumn":7,"suggestions":"312"},{"ruleId":"292","severity":1,"message":"313","line":1,"column":31,"nodeType":"294","messageId":"295","endLine":1,"endColumn":37},{"ruleId":"292","severity":1,"message":"314","line":4,"column":16,"nodeType":"294","messageId":"295","endLine":4,"endColumn":22},{"ruleId":"309","severity":1,"message":"315","line":23,"column":7,"nodeType":"311","endLine":23,"endColumn":15,"suggestions":"316"},{"ruleId":"317","severity":1,"message":"318","line":45,"column":45,"nodeType":"319","messageId":"320","endLine":45,"endColumn":47},{"ruleId":"292","severity":1,"message":"321","line":19,"column":32,"nodeType":"294","messageId":"295","endLine":19,"endColumn":37},{"ruleId":"309","severity":1,"message":"322","line":46,"column":9,"nodeType":"311","endLine":46,"endColumn":23,"suggestions":"323"},{"ruleId":"309","severity":1,"message":"324","line":78,"column":5,"nodeType":"311","endLine":78,"endColumn":7,"suggestions":"325"},{"ruleId":"309","severity":1,"message":"326","line":65,"column":8,"nodeType":"311","endLine":65,"endColumn":10,"suggestions":"327"},{"ruleId":"292","severity":1,"message":"328","line":6,"column":8,"nodeType":"294","messageId":"295","endLine":6,"endColumn":17},{"ruleId":"292","severity":1,"message":"329","line":19,"column":10,"nodeType":"294","messageId":"295","endLine":19,"endColumn":25},{"ruleId":"292","severity":1,"message":"330","line":64,"column":10,"nodeType":"294","messageId":"295","endLine":64,"endColumn":17},{"ruleId":"292","severity":1,"message":"331","line":64,"column":19,"nodeType":"294","messageId":"295","endLine":64,"endColumn":29},{"ruleId":"292","severity":1,"message":"332","line":65,"column":10,"nodeType":"294","messageId":"295","endLine":65,"endColumn":14},{"ruleId":"309","severity":1,"message":"333","line":93,"column":5,"nodeType":"311","endLine":93,"endColumn":7,"suggestions":"334"},{"ruleId":"292","severity":1,"message":"335","line":112,"column":11,"nodeType":"294","messageId":"295","endLine":112,"endColumn":22},{"ruleId":"292","severity":1,"message":"336","line":116,"column":11,"nodeType":"294","messageId":"295","endLine":116,"endColumn":25},{"ruleId":"292","severity":1,"message":"337","line":124,"column":11,"nodeType":"294","messageId":"295","endLine":124,"endColumn":22},{"ruleId":"338","severity":1,"message":"339","line":133,"column":44,"nodeType":"340","messageId":"341","endLine":133,"endColumn":45},{"ruleId":"292","severity":1,"message":"342","line":142,"column":11,"nodeType":"294","messageId":"295","endLine":142,"endColumn":22},{"ruleId":"292","severity":1,"message":"343","line":2,"column":10,"nodeType":"294","messageId":"295","endLine":2,"endColumn":24},{"ruleId":"292","severity":1,"message":"344","line":25,"column":7,"nodeType":"294","messageId":"295","endLine":25,"endColumn":14},{"ruleId":"292","severity":1,"message":"345","line":43,"column":7,"nodeType":"294","messageId":"295","endLine":43,"endColumn":17},{"ruleId":"292","severity":1,"message":"346","line":46,"column":7,"nodeType":"294","messageId":"295","endLine":46,"endColumn":14},{"ruleId":"292","severity":1,"message":"347","line":47,"column":7,"nodeType":"294","messageId":"295","endLine":47,"endColumn":12},{"ruleId":"309","severity":1,"message":"348","line":172,"column":6,"nodeType":"311","endLine":172,"endColumn":8,"suggestions":"349"},{"ruleId":"309","severity":1,"message":"350","line":182,"column":5,"nodeType":"311","endLine":182,"endColumn":7,"suggestions":"351"},{"ruleId":"309","severity":1,"message":"352","line":226,"column":6,"nodeType":"311","endLine":226,"endColumn":15,"suggestions":"353"},{"ruleId":"292","severity":1,"message":"354","line":3,"column":8,"nodeType":"294","messageId":"295","endLine":3,"endColumn":19},{"ruleId":"292","severity":1,"message":"296","line":8,"column":8,"nodeType":"294","messageId":"295","endLine":8,"endColumn":13},{"ruleId":"292","severity":1,"message":"355","line":25,"column":7,"nodeType":"294","messageId":"295","endLine":25,"endColumn":17},{"ruleId":"309","severity":1,"message":"310","line":39,"column":6,"nodeType":"311","endLine":39,"endColumn":8,"suggestions":"356"},{"ruleId":"317","severity":1,"message":"318","line":54,"column":43,"nodeType":"319","messageId":"320","endLine":54,"endColumn":45},{"ruleId":"309","severity":1,"message":"357","line":78,"column":6,"nodeType":"311","endLine":78,"endColumn":8,"suggestions":"358"},{"ruleId":"309","severity":1,"message":"359","line":114,"column":6,"nodeType":"311","endLine":114,"endColumn":8,"suggestions":"360"},{"ruleId":"292","severity":1,"message":"361","line":9,"column":9,"nodeType":"294","messageId":"295","endLine":9,"endColumn":20},{"ruleId":"292","severity":1,"message":"362","line":20,"column":10,"nodeType":"294","messageId":"295","endLine":20,"endColumn":15},{"ruleId":"292","severity":1,"message":"363","line":21,"column":10,"nodeType":"294","messageId":"295","endLine":21,"endColumn":15},{"ruleId":"292","severity":1,"message":"364","line":32,"column":7,"nodeType":"294","messageId":"295","endLine":32,"endColumn":11},{"ruleId":"309","severity":1,"message":"365","line":71,"column":5,"nodeType":"311","endLine":71,"endColumn":7,"suggestions":"366"},{"ruleId":"309","severity":1,"message":"367","line":78,"column":6,"nodeType":"311","endLine":78,"endColumn":8,"suggestions":"368"},{"ruleId":"309","severity":1,"message":"350","line":88,"column":6,"nodeType":"311","endLine":88,"endColumn":8,"suggestions":"369"},{"ruleId":"309","severity":1,"message":"370","line":94,"column":6,"nodeType":"311","endLine":94,"endColumn":8,"suggestions":"371"},{"ruleId":"309","severity":1,"message":"372","line":98,"column":5,"nodeType":"311","endLine":98,"endColumn":7,"suggestions":"373"},{"ruleId":"309","severity":1,"message":"326","line":155,"column":8,"nodeType":"311","endLine":155,"endColumn":10,"suggestions":"374"},{"ruleId":"309","severity":1,"message":"375","line":185,"column":5,"nodeType":"311","endLine":185,"endColumn":16,"suggestions":"376"},{"ruleId":"377","severity":1,"message":"378","line":234,"column":14,"nodeType":"379","endLine":234,"endColumn":54},{"ruleId":"309","severity":1,"message":"380","line":180,"column":6,"nodeType":"311","endLine":180,"endColumn":8,"suggestions":"381"},{"ruleId":"309","severity":1,"message":"375","line":212,"column":5,"nodeType":"311","endLine":212,"endColumn":16,"suggestions":"382"},{"ruleId":"383","severity":1,"message":"384","line":219,"column":53,"nodeType":"385","messageId":"386","endLine":219,"endColumn":54,"fix":"387"},{"ruleId":"377","severity":1,"message":"378","line":262,"column":14,"nodeType":"379","endLine":262,"endColumn":54},{"ruleId":"292","severity":1,"message":"388","line":8,"column":10,"nodeType":"294","messageId":"295","endLine":8,"endColumn":14},{"ruleId":"309","severity":1,"message":"389","line":62,"column":5,"nodeType":"311","endLine":62,"endColumn":7,"suggestions":"390"},{"ruleId":"317","severity":1,"message":"391","line":105,"column":39,"nodeType":"319","messageId":"392","endLine":105,"endColumn":41},{"ruleId":"393","severity":1,"message":"394","line":106,"column":28,"nodeType":"340","messageId":"395","endLine":106,"endColumn":30},{"ruleId":"309","severity":1,"message":"396","line":51,"column":34,"nodeType":"311","endLine":51,"endColumn":36,"suggestions":"397"},{"ruleId":"317","severity":1,"message":"391","line":109,"column":40,"nodeType":"319","messageId":"392","endLine":109,"endColumn":42},{"ruleId":"393","severity":1,"message":"394","line":110,"column":28,"nodeType":"340","messageId":"395","endLine":110,"endColumn":30},{"ruleId":"292","severity":1,"message":"398","line":9,"column":8,"nodeType":"294","messageId":"295","endLine":9,"endColumn":21},{"ruleId":"292","severity":1,"message":"343","line":11,"column":9,"nodeType":"294","messageId":"295","endLine":11,"endColumn":23},{"ruleId":"309","severity":1,"message":"399","line":58,"column":8,"nodeType":"311","endLine":58,"endColumn":10,"suggestions":"400"},{"ruleId":"317","severity":1,"message":"391","line":114,"column":34,"nodeType":"319","messageId":"392","endLine":114,"endColumn":36},{"ruleId":"393","severity":1,"message":"394","line":115,"column":28,"nodeType":"340","messageId":"395","endLine":115,"endColumn":30},{"ruleId":"292","severity":1,"message":"293","line":2,"column":17,"nodeType":"294","messageId":"295","endLine":2,"endColumn":26},{"ruleId":"292","severity":1,"message":"401","line":2,"column":28,"nodeType":"294","messageId":"295","endLine":2,"endColumn":36},{"ruleId":"292","severity":1,"message":"313","line":2,"column":38,"nodeType":"294","messageId":"295","endLine":2,"endColumn":44},{"ruleId":"317","severity":1,"message":"318","line":30,"column":36,"nodeType":"319","messageId":"320","endLine":30,"endColumn":38},{"ruleId":"292","severity":1,"message":"402","line":4,"column":9,"nodeType":"294","messageId":"295","endLine":4,"endColumn":15},{"ruleId":"292","severity":1,"message":"402","line":13,"column":9,"nodeType":"294","messageId":"295","endLine":13,"endColumn":15},{"ruleId":"292","severity":1,"message":"293","line":1,"column":17,"nodeType":"294","messageId":"295","endLine":1,"endColumn":26},{"ruleId":"292","severity":1,"message":"401","line":1,"column":36,"nodeType":"294","messageId":"295","endLine":1,"endColumn":44},{"ruleId":"292","severity":1,"message":"354","line":12,"column":8,"nodeType":"294","messageId":"295","endLine":12,"endColumn":19},{"ruleId":"292","severity":1,"message":"403","line":13,"column":8,"nodeType":"294","messageId":"295","endLine":13,"endColumn":14},{"ruleId":"317","severity":1,"message":"318","line":84,"column":32,"nodeType":"319","messageId":"320","endLine":84,"endColumn":34},{"ruleId":"292","severity":1,"message":"404","line":9,"column":10,"nodeType":"294","messageId":"295","endLine":9,"endColumn":17},{"ruleId":"309","severity":1,"message":"405","line":72,"column":5,"nodeType":"311","endLine":72,"endColumn":15,"suggestions":"406"},{"ruleId":"317","severity":1,"message":"407","line":76,"column":39,"nodeType":"319","messageId":"392","endLine":76,"endColumn":41},{"ruleId":"292","severity":1,"message":"408","line":3,"column":9,"nodeType":"294","messageId":"295","endLine":3,"endColumn":25},{"ruleId":"292","severity":1,"message":"409","line":4,"column":8,"nodeType":"294","messageId":"295","endLine":4,"endColumn":20},{"ruleId":"292","severity":1,"message":"305","line":6,"column":10,"nodeType":"294","messageId":"295","endLine":6,"endColumn":15},{"ruleId":"292","severity":1,"message":"307","line":6,"column":23,"nodeType":"294","messageId":"295","endLine":6,"endColumn":27},{"ruleId":"292","severity":1,"message":"410","line":6,"column":29,"nodeType":"294","messageId":"295","endLine":6,"endColumn":35},{"ruleId":"292","severity":1,"message":"364","line":10,"column":9,"nodeType":"294","messageId":"295","endLine":10,"endColumn":13},{"ruleId":"309","severity":1,"message":"411","line":14,"column":7,"nodeType":"311","endLine":14,"endColumn":15,"suggestions":"412"},{"ruleId":"292","severity":1,"message":"413","line":2,"column":8,"nodeType":"294","messageId":"295","endLine":2,"endColumn":13},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Provider' is defined but never used.","'createStore' is defined but never used.","no-native-reassign",["414"],"no-negated-in-lhs",["415"],"'Users' is defined but never used.","'useContext' is defined but never used.","'Slide' is defined but never used.","'Zoom' is defined but never used.","'Flip' is defined but never used.","'count' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["416"],"'useRef' is defined but never used.","'uuidv4' is defined but never used.","React Hook useEffect has a missing dependency: 'getRecData'. Either include it or remove the dependency array.",["417"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["418"],"React Hook useEffect has a missing dependency: 'friendReq'. Either include it or remove the dependency array.",["419"],"React Hook useEffect has missing dependencies: 'match.params.token' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["420"],"'TextField' is defined but never used.","'isAuthenticated' is defined but never used.","'newUser' is assigned a value but never used.","'setNewUser' is assigned a value but never used.","'show' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clientSocket' and 'getData'. Either include them or remove the dependency array.",["421"],"'showButtons' is assigned a value but never used.","'addGroupMember' is assigned a value but never used.","'createGroup' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'nameHandler' is assigned a value but never used.","'MyChatsContext' is defined but never used.","'history' is assigned a value but never used.","'notPresent' is assigned a value but never used.","'recMsgs' is assigned a value but never used.","'dummy' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clientSocket', 'getRecData', and 'uId'. Either include them or remove the dependency array.",["422"],"React Hook useEffect has a missing dependency: 'clientSocket'. Either include it or remove the dependency array.",["423"],"React Hook useEffect has missing dependencies: 'lastMsg', 'setNewRecipient', 'setRecArray', and 'usersData'. Either include them or remove the dependency array.",["424"],"'userservice' is defined but never used.","'returndata' is defined but never used.",["425"],"React Hook useEffect has missing dependencies: 'getData' and 'us._id'. Either include them or remove the dependency array.",["426"],"React Hook useEffect has missing dependencies: 'clientSocket' and 'count'. Either include them or remove the dependency array.",["427"],"'ChatContext' is defined but never used.","'Fname' is assigned a value but never used.","'Lname' is assigned a value but never used.","'elem' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'obj'. Either include it or remove the dependency array.",["428"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["429"],["430"],"React Hook useEffect has a missing dependency: 'messageEvent'. Either include it or remove the dependency array.",["431"],"React Hook useEffect has missing dependencies: 'myId' and 'roomJoin'. Either include them or remove the dependency array.",["432"],["433"],"React Hook React.useCallback has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["434"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'myId' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["435"],["436"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"437","text":"438"},"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'getData' and 'getSingleContact'. Either include them or remove the dependency array.",["439"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has a missing dependency: 'myId'. Either include it or remove the dependency array.",["440"],"'PersonAddIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllMyFriends'. Either include it or remove the dependency array.",["441"],"'useState' is defined but never used.","'config' is assigned a value but never used.","'Button' is defined but never used.","'checked' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["442"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","'showNotification' is defined but never used.","'Notification' is defined but never used.","'Bounce' is defined but never used.","React Hook useEffect has a missing dependency: 'getUnreadMsgs'. Either include it or remove the dependency array.",["443"],"'Toast' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"444","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"469","fix":"470"},{"desc":"458","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"452","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"477","fix":"481"},[7480,7494],"\r\n           .",{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},"Update the dependencies array to be: [id]",{"range":"492","text":"493"},"Update the dependencies array to be: [getRecData, userId]",{"range":"494","text":"495"},"Update the dependencies array to be: [formData, match.params]",{"range":"496","text":"497"},"Update the dependencies array to be: [friendReq]",{"range":"498","text":"499"},"Update the dependencies array to be: [match.params.token, values]",{"range":"500","text":"501"},"Update the dependencies array to be: [clientSocket, getData]",{"range":"502","text":"503"},"Update the dependencies array to be: [clientSocket, getRecData, uId]",{"range":"504","text":"505"},"Update the dependencies array to be: [clientSocket]",{"range":"506","text":"507"},"Update the dependencies array to be: [lastMsg, payload, setNewRecipient, setRecArray, usersData]",{"range":"508","text":"509"},{"range":"510","text":"493"},"Update the dependencies array to be: [getData, us._id]",{"range":"511","text":"512"},"Update the dependencies array to be: [clientSocket, count]",{"range":"513","text":"514"},"Update the dependencies array to be: [obj]",{"range":"515","text":"516"},"Update the dependencies array to be: [history]",{"range":"517","text":"518"},{"range":"519","text":"507"},"Update the dependencies array to be: [messageEvent]",{"range":"520","text":"521"},"Update the dependencies array to be: [myId, roomJoin]",{"range":"522","text":"523"},{"range":"524","text":"501"},"Update the dependencies array to be: [values]",{"range":"525","text":"526"},"Update the dependencies array to be: [myId, values]",{"range":"527","text":"528"},{"range":"529","text":"526"},"Update the dependencies array to be: [getData, getSingleContact]",{"range":"530","text":"531"},"Update the dependencies array to be: [myId]",{"range":"532","text":"533"},"Update the dependencies array to be: [getAllMyFriends]",{"range":"534","text":"535"},"Update the dependencies array to be: [messages, props]",{"range":"536","text":"537"},"Update the dependencies array to be: [getUnreadMsgs, userId]",{"range":"538","text":"539"},[854,856],"[id]",[747,755],"[getRecData, userId]",[1648,1662],"[formData, match.params]",[2301,2303],"[friendReq]",[1681,1683],"[match.params.token, values]",[3027,3029],"[clientSocket, getData]",[5878,5880],"[clientSocket, getRecData, uId]",[6074,6076],"[clientSocket]",[7550,7559],"[lastMsg, payload, setNewRecipient, setRecArray, usersData]",[1670,1672],[2765,2767],"[getData, us._id]",[3834,3836],"[clientSocket, count]",[2478,2480],"[obj]",[2669,2671],"[history]",[2922,2924],[3043,3045],"[messageEvent]",[3096,3098],"[myId, roomJoin]",[5157,5159],[6381,6392],"[values]",[5960,5962],"[myId, values]",[7229,7240],[2210,2212],"[getData, getSingleContact]",[1968,1970],"[myId]",[2076,2078],"[getAllMyFriends]",[1986,1996],"[messages, props]",[586,594],"[getUnreadMsgs, userId]"]